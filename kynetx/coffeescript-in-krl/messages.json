[{"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309193544.558568, "message": "I read a piece on the future of JavaScript as a compilation target: http://michaux.ca/articles/javascript-is-dead-long-live-javascript", "group_id": 236, "id": 1497088}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194354.148505, "message": "Trouble with a web service is you'd want to POST the coffeescript code (rather than GET), so you'd need the action version of http:get(). That's hard to use in a function or defaction, since it relies on rules to get the results back", "group_id": 236, "id": 1497232}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194203.974931, "message": "Or even wrap those last two into an action so the programmer doesn't have to remember to compile and then emit", "group_id": 236, "id": 1497205}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194678.8436501, "message": "Not necessarily, but we need some way to use it in modules (meaning within functions and defactions)", "group_id": 236, "id": 1497272}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194713.7895141, "message": "I discussed that with Sam a week or two ago; that would require a change in the language design, so I don't know what we'd do there.", "group_id": 236, "id": 1497279}, {"user_id": 30461, "stars": [{"date_created": 1309198372.923805, "user_id": 23918}], "topic_id": 40564, "date_created": 1309193737.8117261, "message": "Here's the conversation Loic, Sam, and I had on Twitter about this: http://twitter.theinfo.org/85389780845727746", "group_id": 236, "id": 1497113}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309193655.556582, "message": "That got me thinking about how we could integrate CoffeeScript into KRL. We have emits right now, which let you spit out whatever JavaScript you want to the browser. What if we had something similar for CoffeeScript?", "group_id": 236, "id": 1497102}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309193855.614305, "message": "Sam suggested using the <script type=\"text/coffeescript\"> tags", "group_id": 236, "id": 1497134}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195297.44993, "message": "one workaround would be to put the coffeescript code in a webhook", "group_id": 236, "id": 1497375}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309193620.8663111, "message": "He suggested that languages like CoffeeScript will become more popular so that developers can get better syntax right now without waiting for browsers to implement it--all this without having to sacrifice backwards-compatibility with older browsers that run regular JavaScript/ECMAScript.", "group_id": 236, "id": 1497101}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194242.9201839, "message": "pre { mycoffeescript = << cs code ... >>; }\nemit_cs(mycoffeescript);", "group_id": 236, "id": 1497213}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195816.344614, "message": "yep", "group_id": 236, "id": 1497537}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194380.9921751, "message": "they would have the same names, wouldn't they?", "group_id": 236, "id": 1497236}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194392.0457771, "message": "but the CS compiler would have to know not to hide them", "group_id": 236, "id": 1497240}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309194646.1994579, "message": "you also think http:post should work as a function ?", "group_id": 236, "id": 1497265}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194414.1702311, "message": "or re-initialize their values", "group_id": 236, "id": 1497244}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309193890.2648871, "message": "My idea was to have some way of pre-compiling the CoffeeScript into JS and then emitting that as usual with KRL. But that would be a little more complicated.", "group_id": 236, "id": 1497142}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309194204.5615029, "message": "compile_cs could be a web service and the result could be cached in a app var", "group_id": 236, "id": 1497206}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309194251.6387761, "message": "web service is a good idea", "group_id": 236, "id": 1497217}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309193893.4216809, "message": "What are your thoughts?", "group_id": 236, "id": 1497145}, {"user_id": 30462, "stars": [], "topic_id": 40564, "date_created": 1309194098.9878719, "message": "If you wrote your KRL offline you could have a pre-processor compile the CoffeScript before you 'commit' the ruleset.", "group_id": 236, "id": 1497185}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309194272.8446989, "message": "yep an action", "group_id": 236, "id": 1497220}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309194154.8110211, "message": "we could think of something like this:\npre{ mycoffeesript = << cs code .... >>; cs_compiled_js=compile_cs(mycoffeesript ); } emit << cs_compiled_js >>; ", "group_id": 236, "id": 1497195}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309194355.144901, "message": "the thing is how do krl vars translated to javascript behave with the compiled code", "group_id": 236, "id": 1497233}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195116.264138, "message": "I don't think it needs a change in the language design. GET and POST are not that different. What I do think is that the kynetx team wants to stick to the philosophy behind the http \"verbs\" . It's an ideological debate in my opinion.", "group_id": 236, "id": 1497324}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195432.042521, "message": "the js code which would then be cached", "group_id": 236, "id": 1497417}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309195814.5521901, "message": "Brilliant!", "group_id": 236, "id": 1497535}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195372.0109489, "message": "so we would call the webservice with GET passing the webhook url and the webservice would ping the webhoook, get the code, compile it and return", "group_id": 236, "id": 1497395}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309195411.953465, "message": "Where does it get the code from?", "group_id": 236, "id": 1497411}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195474.627933, "message": "the webservice would call the webhoook to get the coffeescript code", "group_id": 236, "id": 1497434}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309195759.686729, "message": "http://coffeescriptcompiler.org?getmycode=http://webhooks.kynetxapps.net/h/appid/mycoffeescript_code", "group_id": 236, "id": 1497512}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309196078.4910991, "message": "I could write an yql webservice that compiles the code", "group_id": 236, "id": 1497627}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309195808.5156169, "message": "Ah, so there's a rule in the app that returns just the CoffeeScript code to the webhook. then the compiler calls that webhook, compiles the code, and returns it", "group_id": 236, "id": 1497533}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309196038.1397469, "message": "Yeah. I'm going to give that a try right now.", "group_id": 236, "id": 1497614}, {"user_id": 30461, "stars": [], "topic_id": 40564, "date_created": 1309196093.7461159, "message": "do it", "group_id": 236, "id": 1497633}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309196093.9212101, "message": "(need to go, bye for now)", "group_id": 236, "id": 1497634}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309196019.150831, "message": "Sam's solution is worth a try though. a simple apps that includes the coffeescript compiler on every page makes all browsers coffeescript compatible!", "group_id": 236, "id": 1497602}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309227690.115413, "message": "check the web service in the yql console :", "group_id": 236, "id": 1502147}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309228332.6231461, "message": "and the json response : http://goo.gl/D060w", "group_id": 236, "id": 1502235}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309227348.0844729, "message": "here we go", "group_id": 236, "id": 1502084}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309227784.0177729, "message": "http://goo.gl/c11ny", "group_id": 236, "id": 1502164}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309228381.6102729, "message": "compiled code is found in query.results.js_code", "group_id": 236, "id": 1502244}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309228449.4635601, "message": "alert \"Hello CoffeeScript!\" => (function() {\n  alert(\"Hello CoffeeScript!\");\n}).call(this);", "group_id": 236, "id": 1502257}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309228552.580591, "message": "bedtime", "group_id": 236, "id": 1502268}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309353459.651221, "message": "@snay2 : check this out : http://docs.kynetx.com/docs/HTTP#post", "group_id": 236, "id": 1516731}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309403464.209022, "message": "get coffeescriptAnywhere :http://apps.kynetx.com/installable_apps/4460-coffeescriptAnywhere", "group_id": 236, "id": 1524999}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309402711.6064761, "message": "It's more like a proof of concept", "group_id": 236, "id": 1524907}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309402430.433583, "message": " CoffeeScriptAnywhere detects <script type=\"text/coffeescript\"> and <script type=\"text/coffeescript\" cs_src=\"some_cs_file\"> tags in a page, compiles and executes the coffeescript code. CoffeeScriptAnywhere apps exposes two defactions for developers : cs_eval('cs_code') and cs_file_eval('cs_file_url') to compile and run coffeescript in a KRL ruleset. CoffeeScriptAnywhere uses a YQL webservice to compile the code. Demo pages: http://lolo.asia/kynetx_cs/html/cs_comp.html ( tag detection) and http://lolo.asia/kynetx_cs/html/cs_eval.html ( cs_eval & cs_file_eval )", "group_id": 236, "id": 1524858}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309402525.268656, "message": "To be honest, I have no idea if this app will actually be useful to anyone", "group_id": 236, "id": 1524872}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309402823.234031, "message": "I'd like to extend it with a caching module so the compilation only occurs when really needed.", "group_id": 236, "id": 1524917}, {"user_id": 30494, "stars": [], "topic_id": 40564, "date_created": 1309403822.1274531, "message": "now I just need to learn the language :)", "group_id": 236, "id": 1525042}]