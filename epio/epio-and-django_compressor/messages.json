[{"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783039.935271, "message": "Anyone else using django-compressor with an ep.io hosted project?", "group_id": 2873, "id": 1230087}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783238.3099511, "message": "But setting COMPRESS_OUTPUT_DIR to \"cache\" and doing everything in lower-case took care of that.", "group_id": 2873, "id": 1230097}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783084.530267, "message": "I got it working, though it took some fiddling; curious if others are using the same approach.", "group_id": 2873, "id": 1230089}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783165.6456659, "message": "I have a symlink in my epio.ini for a \"cache\" subdirectory of my STATIC_ROOT, pointing over to my read-write storage so compressor can dump compressed files there.", "group_id": 2873, "id": 1230092}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783301.4169099, "message": "I was hoping to use compressor's new offline compression support to do the compression locally and upload everything to the normal read-only storage. I'd still have to run the \"compress\" management command on the server, to fill the cache, but it shouldn't have to generate any new compressed files on the server.", "group_id": 2873, "id": 1230101}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783388.413214, "message": "Unfortunately that didn't work; for some reason the hash for one of my CSS blocks was turning out different on the server than it was locally, so it was trying to regenerate that compressed file with the new hash-name and failing due to the read-only filesystem.", "group_id": 2873, "id": 1230104}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783433.8372941, "message": "Still haven't figured out the cause of the different hash result, but for now using read/write storage is working ok. I hope the performance of serving files off read-write storage isn't too much worse.", "group_id": 2873, "id": 1230105}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306783218.823216, "message": "One of the gotchas I ran into is that either squashfs or epio's symlink-handling munges case, so with the default COMPRESS_OUTPUT_DIR of \"CACHE\" and an attempted symlink named \"CACHE\", ep.io silently converted the symlink to \"cache\".", "group_id": 2873, "id": 1230095}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306785884.925555, "message": "@andrewgodwin Good thought, I'll check if there are any line endings other than /n in that file.", "group_id": 2873, "id": 1230622}, {"user_id": 8740, "stars": [], "topic_id": 37436, "date_created": 1306785263.5188999, "message": "@carljm Good to hear your experiences; the performance of things on read/write storage is obviously worse, but they should get cached locally if they get served a lot", "group_id": 2873, "id": 1230487}, {"user_id": 8740, "stars": [], "topic_id": 37436, "date_created": 1306785316.868454, "message": "the hash change might be a line endings thing, perhaps - git is known to fiddle with them", "group_id": 2873, "id": 1230494}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306785916.98158, "message": "The only item above that might be worth some action on your part would be to document the case-munging of the symlinks, or fix it, whichever is more feasible ;-)", "group_id": 2873, "id": 1230631}, {"user_id": 30953, "stars": [], "topic_id": 37436, "date_created": 1306824908.238169, "message": "I have used a similar approach using the rw storage to hold the output of the compressor. Last time I checked csslint wasn't installed on the servers, did you leave the CSS uncompressed or did you find a workaround?", "group_id": 2873, "id": 1235217}, {"user_id": 8740, "stars": [], "topic_id": 37436, "date_created": 1306832904.622129, "message": "@carljm Yeah, I'm not sure where the case-munging is happening, I'll need to look into that", "group_id": 2873, "id": 1236108}, {"user_id": 7, "stars": [], "topic_id": 37436, "date_created": 1306850479.5505731, "message": "@andrewgodwin is using windows", "group_id": 2873, "id": 1237593}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306853363.7076001, "message": "@mbi I wrote a three-line custom filter that uses slimmer, a pure-Python CSS optimizer available on PyPI. Though I think the latest version of compressor also has a filter in it that works with Zach Voase's Python port of YUI's cssmin.", "group_id": 2873, "id": 1237990}, {"user_id": 214, "stars": [], "topic_id": 37436, "date_created": 1306853388.5138099, "message": "@alex Ah, that's the secret sauce of ep.io ;-)", "group_id": 2873, "id": 1237995}, {"user_id": 7, "stars": [], "topic_id": 37436, "date_created": 1306857209.825346, "message": "@carljm yes, @andrewgodwin took enough VC funding to take down a small elephant, all for that one windows server license.  What can he say?  He really likes case insensitive file systems.", "group_id": 2873, "id": 1238405}, {"user_id": 8740, "stars": [{"date_created": 1306913979.605078, "user_id": 29682}, {"date_created": 1306929869.1826251, "user_id": 1243}], "topic_id": 37436, "date_created": 1306878425.5918901, "message": "@alex I would ask you kindly not to spread bad rumours; we, of course, run everything off of Solaris SPARC, with a custom FUSE filesystem.", "group_id": 2873, "id": 1242739}, {"user_id": 16551, "stars": [{"date_created": 1306913989.7872829, "user_id": 29682}, {"date_created": 1306929872.988651, "user_id": 1243}], "topic_id": 37436, "date_created": 1306883217.6880939, "message": "And here I thought you were running the whole of ep.io off that netbook you were carrying around at PyCon.", "group_id": 2873, "id": 1244243}, {"user_id": 29682, "stars": [{"date_created": 1306929886.342257, "user_id": 1243}], "topic_id": 37436, "date_created": 1306914076.6635361, "message": "Is Solaris SPARC web-scale?", "group_id": 2873, "id": 1250932}, {"user_id": 8740, "stars": [{"date_created": 1306929883.3112819, "user_id": 1243}], "topic_id": 37436, "date_created": 1306918080.1134319, "message": "@bradwhittington It is when we run it on our node.js virtual machine, using MongoDB as a block device.", "group_id": 2873, "id": 1251417}, {"user_id": 7, "stars": [], "topic_id": 37436, "date_created": 1306979116.2546539, "message": "/me starts to point out node.js isn't a VM", "group_id": 2873, "id": 1261408}, {"user_id": 8740, "stars": [{"date_created": 1307018871.839967, "user_id": 1081}, {"date_created": 1307091188.468513, "user_id": 1}], "topic_id": 37436, "date_created": 1307006587.057935, "message": "@alex That's no obstacle - Ben's written JSNES, so we have the skills for JavaScript VMs.", "group_id": 2873, "id": 1264672}]