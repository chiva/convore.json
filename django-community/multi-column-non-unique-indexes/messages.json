[{"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1299860109.1374371, "message": "so we could bash one in via South, but then new dbs won't get it. I assume there's a handy way to issue extra DDL for models?", "group_id": 81, "id": 323851}, {"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1299860077.1764779, "message": "One of our devs wanted to establish a multi-column index that isn't unique.. which Django apparently doesn't support (ref: http://stackoverflow.com/questions/1578195/django-create-index-non-unique-multiple-column)", "group_id": 81, "id": 323841}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1299930094.9334929, "message": "Doesn't South run all your migrations when you create a new db? Hence the 'initial' migration...", "group_id": 81, "id": 331310}, {"user_id": 17897, "stars": [{"date_created": 1300034797.2999721, "user_id": 3580}], "topic_id": 12352, "date_created": 1299961777.2809169, "message": "@phil there is a post_syncdb signal that you can hook into. http://docs.djangoproject.com/en/1.2/ref/signals/#post-syncdb", "group_id": 81, "id": 336011}, {"user_id": 20278, "stars": [], "topic_id": 12352, "date_created": 1300024493.47614, "message": "If you have South installed for an app, syncdb won't be used for that app, instead you have to use migrations, so new DBs will get the index.", "group_id": 81, "id": 341010}, {"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1300034895.96295, "message": "My hesitation to involve south is twofold.. First, dbs created via unit tests won't get the index. Second, I'd like to sort of re-base my south migrations periodically, and I don't want to carry this along in initials forever.", "group_id": 81, "id": 341594}, {"user_id": 1243, "stars": [], "topic_id": 12352, "date_created": 1300036203.715759, "message": "@phill By rebase, do you mean \"throw away the old history and create a new one using  ./manage.py convert_to_south myapp\" ?", "group_id": 81, "id": 341690}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1300095818.4765749, "message": "http://code.djangoproject.com/ticket/5805 - feel free to write a patch :)", "group_id": 81, "id": 345729}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1300096570.0451429, "message": "ie what type should an index on (integer_field, varchar_field, geometry_field) be", "group_id": 81, "id": 345763}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1300096527.354197, "message": "One problem with implementing this is that the index type is no longer inferrable from the column type", "group_id": 81, "id": 345759}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1300096637.2580121, "message": "so i don't know if you can just add a Meta option `index_together = (('integer_field', 'varchar_field', 'geometry_field'),)", "group_id": 81, "id": 345764}, {"user_id": 1736, "stars": [], "topic_id": 12352, "date_created": 1300108417.778245, "message": "@phill You can let South create DBs for tests, just a flag in settings.py", "group_id": 81, "id": 347091}, {"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1300121408.472559, "message": "specifically, I'm not sure why it's different than issuing a unique index.", "group_id": 81, "id": 349032}, {"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1300121344.3692069, "message": "@gthank yep @coderanger that's awesome, but at this point I really need to clean-house on my migrations. There are well over 150 of them.", "group_id": 81, "id": 349024}, {"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1300121372.019541, "message": "@craigds - I'd be happy to work on a patch, thanks for the ticket! I think I'm misunderstanding your question about type inference though.", "group_id": 81, "id": 349028}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1300183597.3970151, "message": "@phill on second thought, ignore me, I think the database can probably take care of determining the index type", "group_id": 81, "id": 354401}, {"user_id": 3580, "stars": [], "topic_id": 12352, "date_created": 1300203010.6580069, "message": "@craigds k. consider yourself ignored :)  I plan to dig in and throw a patch together this week.. though I'm scared, since it seems like something that would already be done if it was easy. Wish me luck :|", "group_id": 81, "id": 357365}, {"user_id": 6894, "stars": [], "topic_id": 12352, "date_created": 1300214617.3513589, "message": "Good luck! It probably hasn't ben done because people have just gotten by with chucking it in a migration up till now", "group_id": 81, "id": 359317}, {"user_id": 5669, "stars": [{"date_created": 1300519835.702126, "user_id": 22279}, {"date_created": 1300642578.9495389, "user_id": 3580}], "topic_id": 12352, "date_created": 1300501073.6251249, "message": "I may be late to the game here but you might check out http://djangosnippets.org/snippets/1534/ ... It's not the prettiest but it works. On mysql at least. Might be helpful", "group_id": 81, "id": 386579}]