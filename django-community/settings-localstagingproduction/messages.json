[{"user_id": 5108, "stars": [], "topic_id": 37373, "date_created": 1306753456.8223021, "message": "david is using an environment variable DJANGO_CONF to select the approriate settings", "group_id": 81, "id": 1226224}, {"user_id": 3656, "stars": [], "topic_id": 37373, "date_created": 1306753078.929394, "message": "but it's quite cumbersome when I always have to remember to put --settings on ./manage.py commands", "group_id": 81, "id": 1226154}, {"user_id": 3656, "stars": [], "topic_id": 37373, "date_created": 1306752973.4936681, "message": "How do people manage multiple settings for django app?", "group_id": 81, "id": 1226137}, {"user_id": 3656, "stars": [], "topic_id": 37373, "date_created": 1306753062.255614, "message": "Especially, in combination with gunicorn/mod_wsgi and celeryd?", "group_id": 81, "id": 1226151}, {"user_id": 3656, "stars": [], "topic_id": 37373, "date_created": 1306753069.017978, "message": "I just have multiple settings files;", "group_id": 81, "id": 1226152}, {"user_id": 3656, "stars": [], "topic_id": 37373, "date_created": 1306753074.2808659, "message": "settings.py settingsstage.py settingsprod.py", "group_id": 81, "id": 1226153}, {"user_id": 13403, "stars": [], "topic_id": 37373, "date_created": 1306753842.2696409, "message": "There was a previous thread about this: https://convore.com/django-community/using-settings-per-environment/", "group_id": 81, "id": 1226273}, {"user_id": 5108, "stars": [{"date_created": 1306753768.572439, "user_id": 3656}], "topic_id": 37373, "date_created": 1306753385.7815239, "message": "I'm using an approach similiar to this: http://justcramer.com/2011/01/13/settings-in-django/", "group_id": 81, "id": 1226207}, {"user_id": 3656, "stars": [], "topic_id": 37373, "date_created": 1306753590.7264211, "message": "Sounds interesting.", "group_id": 81, "id": 1226257}, {"user_id": 31418, "stars": [], "topic_id": 37373, "date_created": 1306753849.717453, "message": "I guess you are using something similar to what is described here http://toastdriven.com/blog/2010/jan/05/better-local-settings/. You don't really need to specify --settings all the time, you can set the DJANGO_SETTINGS_MODULE env. variable.", "group_id": 81, "id": 1226276}, {"user_id": 1147, "stars": [], "topic_id": 37373, "date_created": 1306763470.181407, "message": "I keep settings for all the environments in the code repository under a settings_local directory and use the hostname to specify overrides for each environment. This gives me the ability to add settings to all the local settings from anywhere if a new setting is added. It also keeps the settings somewhere safe. Here's the code I add to the bottom of settings.py to do that: http://dpaste.com/548260/", "group_id": 81, "id": 1227379}, {"user_id": 32426, "stars": [], "topic_id": 37373, "date_created": 1306763497.436605, "message": "i don't know how common this is, found it online and tweeked it slightly: i put a serversettings folder with a base.py (common settings) and override it with server_name.py gist: https://gist.github.com/962776", "group_id": 81, "id": 1227387}, {"user_id": 6587, "stars": [], "topic_id": 37373, "date_created": 1306785870.63078, "message": "There is actually a whole section of the Django wiki dedicated to this https://code.djangoproject.com/wiki/SplitSettings", "group_id": 81, "id": 1230618}, {"user_id": 6587, "stars": [], "topic_id": 37373, "date_created": 1306786891.65521, "message": "you can set environment variables in cron jobs", "group_id": 81, "id": 1230866}, {"user_id": 1806, "stars": [], "topic_id": 37373, "date_created": 1306786669.5450261, "message": "With the David Cramer method, what's the best way of running a cron job where you need an environmental variable set in order to pick up the right settings? /cc @zeeg", "group_id": 81, "id": 1230814}, {"user_id": 1806, "stars": [], "topic_id": 37373, "date_created": 1306789998.7914259, "message": "@keegan How?  I can write a wrapper script of course, but that seems ugly.  I need the variable to be per cron job as I might have multiple environments running on the same server.  I also thought of putting it in the bin/postactivate script of the virtualenv but again, it seems clunky.", "group_id": 81, "id": 1231654}, {"user_id": 1127, "stars": [], "topic_id": 37373, "date_created": 1306801419.182584, "message": "FOO=bar python bar.py", "group_id": 81, "id": 1232956}, {"user_id": 1736, "stars": [], "topic_id": 37373, "date_created": 1306804842.622719, "message": "Minor note, you should really be using celery(beat), not cron jobs, it would take care of this problem even more directly ;-)", "group_id": 81, "id": 1233258}]