[{"user_id": 18129, "stars": [{"date_created": 1299839693.1988909, "user_id": 5367}], "topic_id": 12291, "date_created": 1299832137.9468789, "message": "For example, how many users signed in today, how many times did action Y happen in the last month.  What are the growth rates?  I've used munin with a bunch of customized munin scripts but it felt inelegant.", "group_id": 81, "id": 320547}, {"user_id": 1147, "stars": [{"date_created": 1299867505.2868609, "user_id": 20170}, {"date_created": 1299916675.4567821, "user_id": 6807}, {"date_created": 1300187793.1227579, "user_id": 978}], "topic_id": 12291, "date_created": 1299853944.484493, "message": "Google Analytics with goals setup to track conversions. ChartBeat for live stats. Kissanalytics for more advanced metrics.", "group_id": 81, "id": 322537}, {"user_id": 275, "stars": [], "topic_id": 12291, "date_created": 1299856321.4565599, "message": "pystatsd includes both a client for etsy's node-based server, as well as a python-based implementation of the statsd server", "group_id": 81, "id": 322923}, {"user_id": 275, "stars": [], "topic_id": 12291, "date_created": 1299855362.263082, "message": "We're using statsd and graphite", "group_id": 81, "id": 322811}, {"user_id": 275, "stars": [], "topic_id": 12291, "date_created": 1299856483.016053, "message": "@micrypt - thanks", "group_id": 81, "id": 322963}, {"user_id": 275, "stars": [], "topic_id": 12291, "date_created": 1299856279.6462901, "message": "http://github.com/etsy/statsd", "group_id": 81, "id": 322913}, {"user_id": 719, "stars": [], "topic_id": 12291, "date_created": 1299856444.77529, "message": "https://github.com/sivy/py-statsd", "group_id": 81, "id": 322954}, {"user_id": 275, "stars": [{"date_created": 1299916677.8070841, "user_id": 6807}, {"date_created": 1299988290.8304689, "user_id": 18129}], "topic_id": 12291, "date_created": 1299855521.062535, "message": "Statsd is a front end proxy for Graphite that Etsy came up with", "group_id": 81, "id": 322836}, {"user_id": 6439, "stars": [], "topic_id": 12291, "date_created": 1299878545.395184, "message": "Oooh statsd looks nice.  I wrote up https://github.com/frankwiles/django-app-metrics for a similar reason, but statsd looks more full featured.", "group_id": 81, "id": 327239}, {"user_id": 4077, "stars": [], "topic_id": 12291, "date_created": 1300159490.333533, "message": "to track particular links that are clicked, I can do something like this (even though it's overly ornate): $(\".get_it_now_link\").click(function() {\n                        var id = $(this).attr(\"id\");\n                        var href = $(this).attr(\"href\");\n                        mpmetrics.track('buy_link', {\n                                'id': id,\n                                'url': window.location,\n                                'bucket': id\n                        }, function() { window.location = href; });\n                        // mpmetrics.track(\"Get it now link: \" + id);\n                        return false;\n                });", "group_id": 81, "id": 353197}, {"user_id": 4077, "stars": [], "topic_id": 12291, "date_created": 1300159222.567986, "message": "If you're not averse to having your metrics offsite, I'm using MixPanel for most of this.  After you've added the boilerplace JS include, it's easy to track anything.", "group_id": 81, "id": 353173}, {"user_id": 4077, "stars": [], "topic_id": 12291, "date_created": 1300159448.0276661, "message": "To track a pageview (with any arbitrary metadata I want), I just do this: mpmetrics.track('pageview', {\n                                'url': window.location,\n                        })", "group_id": 81, "id": 353192}, {"user_id": 4077, "stars": [], "topic_id": 12291, "date_created": 1300159522.835381, "message": "That will intercept the click, send the log data to mixpanel, and then redirect the user where they were going anyway.", "group_id": 81, "id": 353201}, {"user_id": 4077, "stars": [], "topic_id": 12291, "date_created": 1300159615.229161, "message": "The interesting thing about that is the 'bucket' line -- if I include bucket data, then I can create gorgeous vendor reports with a few lines of javascript.  If I were hosting a blog, for example, I could give realtime analytics to users of the blog service by having the 'bucket' value be their blog id, and then querying mixpanel for all stats relating to that bucket", "group_id": 81, "id": 353216}, {"user_id": 4077, "stars": [], "topic_id": 12291, "date_created": 1300159630.641355, "message": "They also have Python APIs as well, but I haven't played with them any yet.", "group_id": 81, "id": 353218}]