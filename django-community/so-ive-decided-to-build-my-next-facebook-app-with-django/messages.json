[{"user_id": 4077, "stars": [], "topic_id": 3939, "date_created": 1297374601.6124821, "message": "The first thing I ran into was having to dump django.contrib.auth, and implement my own authentication schema to support facebook authentication. Of course, nowadays I believe there is a django-facebook app that drops in, but I haven't got any significant experience with it.  Start reading those documents.", "group_id": 81, "id": 75049}, {"user_id": 5939, "stars": [], "topic_id": 3939, "date_created": 1297373942.985496, "message": "What should I watch out for? Any advice?", "group_id": 81, "id": 74923}, {"user_id": 1916, "stars": [], "topic_id": 3939, "date_created": 1297374618.3618281, "message": "Be sure to steer clear of FBML, and make your app an iframe type. That allows you to use regular web technologies. After that, the only thing you really need to worry about is page width and authentication.", "group_id": 81, "id": 75054}, {"user_id": 3580, "stars": [], "topic_id": 3939, "date_created": 1297375169.508538, "message": "Haven't done facebook w/ Django, but in general w/ Django I'd say to be relatively wary about your dependence on the ORM.", "group_id": 81, "id": 75130}, {"user_id": 7, "stars": [{"date_created": 1297392401.338531, "user_id": 521}], "topic_id": 3939, "date_created": 1297376456.2450631, "message": "/me has slightly more ORM knowledge than the average user", "group_id": 81, "id": 75433}, {"user_id": 3580, "stars": [], "topic_id": 3939, "date_created": 1297376605.3990099, "message": "and yes, listening to me talk about the Django ORM when @alex is in the thread is basically ridiculous. For the record, I've got loads of ORM and backend experience (MySQL/Hibernate).. but only a year or so of Django.", "group_id": 81, "id": 75448}, {"user_id": 5939, "stars": [], "topic_id": 3939, "date_created": 1297376376.366833, "message": "@phill Really? That is one of my main attractions to Django. Could you elaborate?", "group_id": 81, "id": 75422}, {"user_id": 3580, "stars": [], "topic_id": 3939, "date_created": 1297376538.501091, "message": "@tekromancer Sorry.. was a pretty glib remark. I think the Django ORM is handy, for sure.. but once your application, data-model, or queries get fairly complex I find it cumbersome to ensure it's producing efficient SQL. I also think the strategies available for caching in Django aren't ideal for transactional web apps (as opposed to apps serving mostly-static content.. blogs, news sites, etc)", "group_id": 81, "id": 75439}, {"user_id": 7, "stars": [], "topic_id": 3939, "date_created": 1297376445.5405531, "message": "Not sure what he's talking about TBH :)", "group_id": 81, "id": 75432}, {"user_id": 1187, "stars": [], "topic_id": 3939, "date_created": 1297391229.0043111, "message": "@phill Are suggesting that he use another ORM like SqlAchemy?", "group_id": 81, "id": 77669}, {"user_id": 3580, "stars": [{"date_created": 1297416061.6686511, "user_id": 1}, {"date_created": 1297460563.191618, "user_id": 774}], "topic_id": 3939, "date_created": 1297394245.8965399, "message": "I've not used SQLAlchemy, though I've heard good things. I think if you're using Django, stick with the Django ORM if you can for sure. Just in general, I think it's a good idea to not let extensive use of the models leak all over your view and template code in a complex app.. gets difficult to keep a hold on your queries and cache interactions. Also, keep in mind that I'm building web apps that may not be typical applications of Django...  ORMs in general are a very Leaky Abstraction. They don't absolve you from caring about your SQL queries, and in some cases they make it harder to.", "group_id": 81, "id": 78084}]