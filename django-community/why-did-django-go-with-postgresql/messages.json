[{"user_id": 1736, "stars": [{"date_created": 1299531186.8176589, "user_id": 4156}, {"date_created": 1299658850.6600549, "user_id": 592}], "topic_id": 11343, "date_created": 1299525417.8452301, "message": "Mostly it boils down to MySQL not being designed for efficient transactional support early on, InnoDB bolted it on later but the damage was done", "group_id": 81, "id": 289852}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525611.180922, "message": "It is mostly a matter of personal preference and old grudges :-)", "group_id": 81, "id": 289875}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525745.9259839, "message": "one hopes you don't do that during normal use ...", "group_id": 81, "id": 289894}, {"user_id": 4935, "stars": [], "topic_id": 11343, "date_created": 1299526191.7625711, "message": "http://www.amazon.com/Refactoring-Databases-Evolutionary-Database-Design/dp/0321293533", "group_id": 81, "id": 289944}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299526192.066277, "message": "@gthank Apparently I'm wrong and DDL is now transacted, one more point for Postgres :-)", "group_id": 81, "id": 289946}, {"user_id": 1, "stars": [], "topic_id": 11343, "date_created": 1299525532.7418549, "message": "Also I think Python's PostgreSQL bindings were superior about 5 years ago too. MySQLdb had memory leaks and stuff IIRC.", "group_id": 81, "id": 289862}, {"user_id": 1736, "stars": [{"date_created": 1299525408.7041841, "user_id": 1243}, {"date_created": 1299658841.7802329, "user_id": 592}], "topic_id": 11343, "date_created": 1299525369.661576, "message": "If you mean \"Why does the Django community prefer Postgres over MySQL?\" thats a much longer story :-)", "group_id": 81, "id": 289840}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525597.2273779, "message": "Almost all of the actual technical reasons to use one over the other are long-since gone these days", "group_id": 81, "id": 289874}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525836.9297979, "message": "DDL changes (ALTER TABLE and friends) take effect instantly and globally, they can't rolled back or done in groups", "group_id": 81, "id": 289901}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525868.4696729, "message": "This is true of Postgres, MySQL, and SQLite. I don't know how Oracle does it or if transactions work on them there", "group_id": 81, "id": 289909}, {"user_id": 1736, "stars": [{"date_created": 1299525431.606432, "user_id": 1}, {"date_created": 1299658843.967629, "user_id": 592}], "topic_id": 11343, "date_created": 1299525346.4798701, "message": "Not sure what you mean, Django works fine with a large number of DBs", "group_id": 81, "id": 289833}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525471.913892, "message": "So now most people see MySQL as somewhat pointless", "group_id": 81, "id": 289855}, {"user_id": 1736, "stars": [{"date_created": 1299528549.5100009, "user_id": 1147}, {"date_created": 1299531184.1300499, "user_id": 4156}, {"date_created": 1299569499.94348, "user_id": 5778}, {"date_created": 1299647537.8506401, "user_id": 12142}, {"date_created": 1299658883.8943851, "user_id": 592}, {"date_created": 1299705359.1889009, "user_id": 18129}, {"date_created": 1299721986.982487, "user_id": 4967}, {"date_created": 1299728212.060894, "user_id": 5069}], "topic_id": 11343, "date_created": 1299525511.493619, "message": "Personally, I see Oracle as a looming cloud of doom and won't touch anything of theirs if I can help it", "group_id": 81, "id": 289859}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525709.2162011, "message": "@convy Columns? Yes", "group_id": 81, "id": 289885}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525878.7449219, "message": "Did you mean adding rows perhaps?", "group_id": 81, "id": 289910}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525453.561228, "message": "Postgres was, in the past, much harder to install and manage but this distinction has largely been eliminated in recent years", "group_id": 81, "id": 289854}, {"user_id": 4219, "stars": [], "topic_id": 11343, "date_created": 1299525580.385607, "message": "Yes I mean prefer then.", "group_id": 81, "id": 289870}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525721.4962859, "message": "DDL changes are still not transacted in Postgres", "group_id": 81, "id": 289887}, {"user_id": 214, "stars": [], "topic_id": 11343, "date_created": 1299527126.1445191, "message": "(Re deferrable constraints, that tends to come up when people dump a fixture with circular references and then try to load it. Not as common as the South/DDL issue, but it does happen, even to newbies.)", "group_id": 81, "id": 290156}, {"user_id": 214, "stars": [], "topic_id": 11343, "date_created": 1299526693.726393, "message": "@coderanger Transactional DDL and deferrable constraints are current \"technical differences\" that I run into regularly (and see others having problems with regularly on IRC etc), so not sure I can agree that there aren't any current technical reasons to choose one over the other.", "group_id": 81, "id": 290062}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525482.613852, "message": "Also PostGIS is a big factor for many people", "group_id": 81, "id": 289857}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525543.124738, "message": "Imagine if what happened to Jenkins happened to MySQL, the general chaos that would cause", "group_id": 81, "id": 289864}, {"user_id": 4935, "stars": [], "topic_id": 11343, "date_created": 1299525562.6778059, "message": "Django's poll tutorial and South both mention PostgreSQL and then MySQL.", "group_id": 81, "id": 289865}, {"user_id": 4219, "stars": [], "topic_id": 11343, "date_created": 1299525672.422245, "message": "does postgresql lock the db (or table) when u add columns?", "group_id": 81, "id": 289878}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299525728.4519839, "message": "(nor are they in MySQL)", "group_id": 81, "id": 289890}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299526822.5554211, "message": "And I would say those represent that large majority of people using Django", "group_id": 81, "id": 290087}, {"user_id": 4219, "stars": [], "topic_id": 11343, "date_created": 1299525849.5976379, "message": "gotcha", "group_id": 81, "id": 289906}, {"user_id": 4219, "stars": [], "topic_id": 11343, "date_created": 1299525778.886528, "message": "still not transacted?", "group_id": 81, "id": 289897}, {"user_id": 214, "stars": [{"date_created": 1299705461.1978469, "user_id": 6396}], "topic_id": 11343, "date_created": 1299526866.6780889, "message": "And \"your average CMS/blog/whatever\" is quite likely to use South, these days.", "group_id": 81, "id": 290094}, {"user_id": 1243, "stars": [], "topic_id": 11343, "date_created": 1299526082.7156179, "message": "For the Postgres side of this argument, see http://wiki.postgresql.org/wiki/Why_PostgreSQL_Instead_of_MySQL_2009", "group_id": 81, "id": 289926}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299527457.3146551, "message": "@carljm - Oooh, yeah. Transactional DDL would be nice :) I'm a big MySQL/South user, and it does cause pain. You get used to testing your migrations very aggressively, though.", "group_id": 81, "id": 290263}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299527575.8528619, "message": "@phill And 9.0 improves that greatly", "group_id": 81, "id": 290290}, {"user_id": 4935, "stars": [], "topic_id": 11343, "date_created": 1299526191.1831191, "message": "there's this, if you're worried about using a relational db", "group_id": 81, "id": 289943}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299526897.0574031, "message": "@carljm Perhaps, I am definitely not as familiar with MySQL as a I once was :-)", "group_id": 81, "id": 290101}, {"user_id": 214, "stars": [], "topic_id": 11343, "date_created": 1299527038.3727541, "message": "@coderanger Riiiight, yes, that is precisely what all the CMS/blog/whatever sites are doing ;-)", "group_id": 81, "id": 290131}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299526809.3104, "message": "@carljm For your average CMS/blog/whatever those aren't exactly likely to come up :-)", "group_id": 81, "id": 290084}, {"user_id": 1243, "stars": [], "topic_id": 11343, "date_created": 1299526368.0737441, "message": "@coderanger I'm looking forward to the day I get to play around with that in anger :-)", "group_id": 81, "id": 289995}, {"user_id": 214, "stars": [], "topic_id": 11343, "date_created": 1299526825.7632921, "message": "@coderanger With South, that is no longer true re transactional DDL.", "group_id": 81, "id": 290088}, {"user_id": 214, "stars": [{"date_created": 1299528174.221108, "user_id": 4581}, {"date_created": 1299659067.4542019, "user_id": 592}, {"date_created": 1299705456.6756029, "user_id": 6396}], "topic_id": 11343, "date_created": 1299526844.464154, "message": "Anyone using South and MySQL is quite likely to be bitten, usually painfully, by MySQL's lack of it.", "group_id": 81, "id": 290090}, {"user_id": 214, "stars": [{"date_created": 1299527784.363734, "user_id": 1}, {"date_created": 1299572429.3049419, "user_id": 6415}, {"date_created": 1299659089.127054, "user_id": 592}], "topic_id": 11343, "date_created": 1299526936.7339959, "message": "Me neither, I just happen to hang out in #django-south and see the almost daily \"I'm using MySQL and a migration failed and now I'm in a broken halfway state!\" pleas for help ;-)", "group_id": 81, "id": 290108}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299527676.686224, "message": "@coderanger.. thanks.. couldn't remember if it was v8 or v9, so I was vague :)", "group_id": 81, "id": 290304}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299527006.8757551, "message": "@carljm But of course everyone lets south run migrations during unittests so they would know ahead of time that this would break ;-)", "group_id": 81, "id": 290122}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299527065.957423, "message": "@carljm Touche, sir.", "group_id": 81, "id": 290138}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299527795.559128, "message": "Unfortunately Ubuntu 10.04 (the current LTS) is still on 8.4, but there is a PPA run by the maintainer of the postgresql package.", "group_id": 81, "id": 290326}, {"user_id": 4219, "stars": [{"date_created": 1299528288.561621, "user_id": 3580}], "topic_id": 11343, "date_created": 1299528275.1521289, "message": "@phill for an auction app I'm sure it would help!", "group_id": 81, "id": 290450}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299528383.2961299, "message": "@convy haha. great point. In my case, I think it mostly burned us in places where the datetimes were being used as part of a unique-constraint (probably foolishly), and the move to mysql was painful as a result.", "group_id": 81, "id": 290461}, {"user_id": 1736, "stars": [], "topic_id": 11343, "date_created": 1299527605.0063729, "message": "(just make the \"now resolved\" part clear)", "group_id": 81, "id": 290295}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299527535.5965431, "message": "The biggest (now-resolved) reason that I moved from MySQL to Postgres in the past was Postgres' lack of a reasonable slaving mechanism. Having done both extensively, I'd favor Postgres for a number of reasons.", "group_id": 81, "id": 290283}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299527663.4081349, "message": "Reasons not-yet-mentioned include: schema changes are stupidly painful and un-performant in MySQL and Oracle's MySQL secret-police chasing you down to collect payment if you ever need to use the JDBC driver.", "group_id": 81, "id": 290301}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299527918.9179471, "message": "ooooh, another one. MySQL datetime/timestamp fields only store to seconds, accuracy. Postgres to millis. Probably doesn't sound that awful, until you move from one to the other or run into a specific need :|", "group_id": 81, "id": 290357}, {"user_id": 13340, "stars": [], "topic_id": 11343, "date_created": 1299531102.180089, "message": "Have a look at this comparison of PostgreSQL to most of the popular RDBMSes out there to see why it is superior: http://support.summersault.com/why_postgresql.html", "group_id": 81, "id": 290966}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299608722.0401821, "message": "I think that article is a bit meh, in both directions. A lot of the items in the list deserve more than a boolean. For example, sub-select is checked on mysql, but the difference between sub-select's real usability in mysql and postgres is gi-normous.", "group_id": 81, "id": 298126}, {"user_id": 13912, "stars": [{"date_created": 1299627743.8991029, "user_id": 13893}], "topic_id": 11343, "date_created": 1299627553.756269, "message": "because it's a real database", "group_id": 81, "id": 300496}, {"user_id": 1736, "stars": [{"date_created": 1299629768.332078, "user_id": 3580}, {"date_created": 1299630581.2287769, "user_id": 261}, {"date_created": 1299705614.4880121, "user_id": 6396}, {"date_created": 1299733775.9781971, "user_id": 5778}], "topic_id": 11343, "date_created": 1299629671.8710201, "message": "@Vasil It is answers like that which don't add anything useful to the discussion nor address anything asked. There is no need to propagate old stereotypes here.", "group_id": 81, "id": 300663}, {"user_id": 5939, "stars": [], "topic_id": 11343, "date_created": 1299647301.838438, "message": "I have spent the better part of last week trying to set up a system that will let you enter a post_code, then a radius, and have it return a list of zipcodes within that radius. I finally settled on postgresql because postGIS makes that task so easy.", "group_id": 81, "id": 302125}, {"user_id": 12142, "stars": [{"date_created": 1299660771.807276, "user_id": 13912}], "topic_id": 11343, "date_created": 1299648120.0916691, "message": "on a couple of projects I have seen mysql deadlock on very complex writes where postgres didn't.  I have also seen where a very complex read takes forever with mysql and the same code runs fine with postgres.  These projects were using django's orm so, some chicken and egg that I never fully investigated.\n\nMore importantly, the prefix \"my\" in front of anything related to software is patronizing.", "group_id": 81, "id": 302166}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299649731.430975, "message": "Okay.. I like postgres, a lot... and I used it for quite a while, but since this has turned into a pretty anti-mysql thread.. I'm honestly curious - what are some of the biggest, most serious postgres deployments?", "group_id": 81, "id": 302239}, {"user_id": 3354, "stars": [{"date_created": 1299652303.242137, "user_id": 4156}, {"date_created": 1299733839.5287659, "user_id": 5778}], "topic_id": 11343, "date_created": 1299651424.589015, "message": "From a personal point of view I don't much like the way MySQL played fast and loose with the standards, particularly around their implementation of default values and its interaction with NULLs. I believe PostgreSQL is not only more closely conformant with SQL standards but that it has been more thoroughly architected for performance under load.", "group_id": 81, "id": 302279}, {"user_id": 4935, "stars": [], "topic_id": 11343, "date_created": 1299651279.0588341, "message": "that's not a great way of evaluating tech, but here you go: http://www.postgresql.org/about/users", "group_id": 81, "id": 302277}, {"user_id": 4156, "stars": [{"date_created": 1299733856.870362, "user_id": 5778}], "topic_id": 11343, "date_created": 1299652371.233176, "message": "I have the same sense @holdenweb does -- I often say that MySQL matches PHP in that both appear to favor quick, slapdash, get-it-done methodologies over being correct or well thought out. Which, in the long run, rarely leads to good places.", "group_id": 81, "id": 302321}, {"user_id": 1, "stars": [{"date_created": 1299704157.1308999, "user_id": 3580}], "topic_id": 11343, "date_created": 1299656415.5258491, "message": "From a business and marketing perspective it means #winning, just like how mongodb is doing now. If I were starting a database company today I'd do it the same way mysql and mongodb did it, to maximize profits and market share at least.", "group_id": 81, "id": 302485}, {"user_id": 1, "stars": [], "topic_id": 11343, "date_created": 1299656464.688581, "message": "Also PHP won too in terms of marketshare", "group_id": 81, "id": 302490}, {"user_id": 7, "stars": [], "topic_id": 11343, "date_created": 1299656307.5902829, "message": "or the short run...", "group_id": 81, "id": 302482}, {"user_id": 1, "stars": [], "topic_id": 11343, "date_created": 1299656437.433002, "message": "(I'm only kind of trolling)", "group_id": 81, "id": 302488}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299661847.988097, "message": "After years I tried using mysql again for something serious (other than a 1000 visits/day drupal or wp site). I used it for a research project where I gathered data with a web crawler in it. First I had problems with it deadlocking because the crawler did a few concurrent writes and updates. After I had enough data there (6M+ rows) I decided I needed a unique key on 2 rows. Anyone who's used mysql for a half-serious deployment will know what this means. It's 10k times faster to just dump data truncate tables alter table and import data. Ended up transferring the data to postgres to do what I needed with it. Seriously PHP and MySQL deserve eachother.", "group_id": 81, "id": 302855}, {"user_id": 3354, "stars": [], "topic_id": 11343, "date_created": 1299665334.63328, "message": "PHP and MySQL do some pretty good things when used in a disciplined way. And let's not forget that Google are heavy MySQL users - within its limitations the engine performs well, but you have to accept those limitations and lock in to MySQL.", "group_id": 81, "id": 303330}, {"user_id": 4156, "stars": [{"date_created": 1299733932.2360871, "user_id": 5778}], "topic_id": 11343, "date_created": 1299690856.098594, "message": "@ericflo Don't forget Windows...", "group_id": 81, "id": 306828}, {"user_id": 4156, "stars": [], "topic_id": 11343, "date_created": 1299690915.3116691, "message": "@holdenweb If I wanted my tools to require a lot of discipline to work correctly, I would still be coding in PHP or using Perl, not Python :) just saying.", "group_id": 81, "id": 306834}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299704027.8423841, "message": "@holdenweb yeah. Google... and... Facebook. I gripe about MySQL as much as the next guy, but to suggest it's not up for the job is demonstrably false.", "group_id": 81, "id": 308244}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299703917.59218, "message": "@holdenweb - The ANSI SQL standard is very overrated in my opinion. That said, I really appreciate that the Postgres team thinks long and hard before implementing things.", "group_id": 81, "id": 308231}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299703882.4242561, "message": "@bat Thanks, and I tend to agree..but was curious if Postgres is deployed on anything close to the giant mysql deployments. Nothing in that list jumps out, but I barely glanced.", "group_id": 81, "id": 308224}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299706812.32971, "message": "so maybe Postgres is a big win somewhere in the middle? guess I'd buy that.", "group_id": 81, "id": 308652}, {"user_id": 281, "stars": [{"date_created": 1299707671.096993, "user_id": 1243}, {"date_created": 1299709636.979991, "user_id": 13912}], "topic_id": 11343, "date_created": 1299705244.7006669, "message": "postgres will generally handle complex transactional/rdbms stuff (e.g. large/complex joins) much better on large data sets than mysql will", "group_id": 81, "id": 308399}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299704034.6792109, "message": "but yeah.. modifying tables sure sucks :|", "group_id": 81, "id": 308247}, {"user_id": 281, "stars": [], "topic_id": 11343, "date_created": 1299705193.1851709, "message": "@phill something to keep in mind is when you see the monster mysql deployments like facebook or google, they are almost always just using mysql as a distributed key value store", "group_id": 81, "id": 308393}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299708059.7428911, "message": "because that conf is intended for machines with 128mb ram", "group_id": 81, "id": 308856}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299706768.154583, "message": "I guess when it comes to performance, for small things I've had an easier time getting MySQL to go fast than Postgres (mind you I last used pg in v7 something)..", "group_id": 81, "id": 308644}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299707673.1090789, "message": "the problem with postgresql is: people install it see it working slow out of the box with a few hundred or thousand rows and turn their back on it", "group_id": 81, "id": 308792}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299707887.1255729, "message": "especially in 8.3 onward", "group_id": 81, "id": 308831}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299708494.8806059, "message": "and the fact it forks processes instead of threads, they should just integrate pgbouncer in it", "group_id": 81, "id": 308900}, {"user_id": 603, "stars": [], "topic_id": 11343, "date_created": 1299706478.294714, "message": "@phill, I know that the skype installation is pretty big", "group_id": 81, "id": 308605}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299707687.9683111, "message": "it's the problem of the default configuration file", "group_id": 81, "id": 308798}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299706696.380549, "message": "@SeanOC - sure... and it makes sense why, considering traditional ideas about things like schema migrations are pretty much off the table at a certain point.", "group_id": 81, "id": 308633}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299706796.6485059, "message": "and in large scale work, I don't tend to use complex joins anyways.", "group_id": 81, "id": 308650}, {"user_id": 4219, "stars": [], "topic_id": 11343, "date_created": 1299707008.94333, "message": "joins are bad if you really need to scale true", "group_id": 81, "id": 308682}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299708232.469173, "message": "yeah, asides from a 128mb VPS deployment I can't imagine why it's like that with these latest versions", "group_id": 81, "id": 308873}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299707763.714993, "message": "@Vasil yeah, the default conf is awful.. but also tuning it up always felt confusing.. something about \"How many of the magic blocks do I need for this?\".. and Vacuuming, that was always a strange bum-out.", "group_id": 81, "id": 308810}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299707860.8550799, "message": "@phill that's stuff has improved in 8.x tho", "group_id": 81, "id": 308828}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299708187.242851, "message": "not that it matters. just seems like a weird decision.", "group_id": 81, "id": 308870}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299708596.275594, "message": "I always stick that in front for webapps, I've measured 80% increase in performace on a simple django app", "group_id": 81, "id": 308911}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299708151.3965321, "message": "right, and why? where's the database server with 128mb of ram that we're so afraid of screwing up?", "group_id": 81, "id": 308866}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299707808.7833381, "message": "so yeah.. postgres always forced you to figure that stuff out really, really early (probly a good thing). MySQL will let you launch and get some traffic before even considering indexes (probably a bad thing).", "group_id": 81, "id": 308818}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299707850.4453981, "message": "either way, that, in a nutshell is probably in part responsible for why there are more MySQL deployments than Postgres ones.", "group_id": 81, "id": 308824}, {"user_id": 3580, "stars": [], "topic_id": 11343, "date_created": 1299707898.1064081, "message": "nice. I keep meaning to find a project to pull down recent postgres for. I have one in mind that would really benefit from PostGIS so maybe that'll be my chance.", "group_id": 81, "id": 308834}, {"user_id": 13912, "stars": [], "topic_id": 11343, "date_created": 1299708021.765635, "message": "you could use it out of the box and forget about it, but it rally benefits from 3 line tweaks in the conf", "group_id": 81, "id": 308851}, {"user_id": 4935, "stars": [], "topic_id": 11343, "date_created": 1299715256.6893289, "message": ":p", "group_id": 81, "id": 309448}, {"user_id": 4935, "stars": [], "topic_id": 11343, "date_created": 1299715252.14063, "message": "mysql and mongodb and that celeb are #washedup", "group_id": 81, "id": 309447}, {"user_id": 4383, "stars": [], "topic_id": 11343, "date_created": 1299726364.471349, "message": "I think that MySQL is generally liked (at least at my company) because it has wide acceptance, InnoDB is solid and generally does not break, it has built in binary replication which is not hard to set up, and generally easy to install.", "group_id": 81, "id": 310325}, {"user_id": 4383, "stars": [], "topic_id": 11343, "date_created": 1299726403.1869111, "message": "I'd like to try out using PostGRE but it means getting other folks to get used to it  and that takes time.", "group_id": 81, "id": 310327}]