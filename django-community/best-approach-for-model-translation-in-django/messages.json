[{"user_id": 11405, "stars": [{"date_created": 1298617346.5366831, "user_id": 1736}, {"date_created": 1298633707.748771, "user_id": 2725}, {"date_created": 1298653432.563324, "user_id": 1296}, {"date_created": 1298806646.0058861, "user_id": 1147}], "topic_id": 8988, "date_created": 1298615129.2906561, "message": "Lets assume I have a News model and I want some fields of that model to be multilingual. There are dozens of repos out there dealing with that topic, most seem to be discontinued, none seems to be the ultimate way to go. How can it be that such a common usecase has not been perfectly solved already? Am I missing any relevant ressources? How do you guys deal with this?", "group_id": 81, "id": 206361}, {"user_id": 214, "stars": [{"date_created": 1298653459.4566939, "user_id": 1296}], "topic_id": 8988, "date_created": 1298646500.878691, "message": "Sites that want to support many languages and constantly add new ones have different needs from sites that want to target a fixed list of three languages.", "group_id": 81, "id": 208428}, {"user_id": 214, "stars": [], "topic_id": 8988, "date_created": 1298646559.8059969, "message": "For the former case, a linked-separate-models solution like django-multilingual may be more appropriate. For the latter case, adding an extra field per language to the main model (like django-modeltranslation) will be much more efficient.", "group_id": 81, "id": 208433}, {"user_id": 214, "stars": [], "topic_id": 8988, "date_created": 1298646419.2350211, "message": "One reason it's not \"perfectly solved\" already is that there are actually several quite distinct use cases with different needs hiding within what seems like a single use case.", "group_id": 81, "id": 208405}, {"user_id": 214, "stars": [], "topic_id": 8988, "date_created": 1298646733.87256, "message": "Personally I've only dealt with the latter case (small fixed set of languages), and I used django-modeltranslation with success. It wasn't exactly stable, and had some serious bugs I had to fix, but the approach was what I needed. It allowed seamless translation of models without modifying them (so I could translate third-party models too), and the templates could be transparent to the translation. It's been a couple years now, so I don't know what state that project is in now - I still see activity on the ticket tracker, though.", "group_id": 81, "id": 208453}, {"user_id": 11405, "stars": [], "topic_id": 8988, "date_created": 1298649384.409579, "message": "ok I will give django-modeltranslation a try...", "group_id": 81, "id": 208898}, {"user_id": 927, "stars": [], "topic_id": 8988, "date_created": 1298650943.0393231, "message": "I've been using django-modeltranslation, too, and it's worked out pretty well. I contributed some jQuery UI tabs enhancement for the admin area but I believe that was reworked substantially before making it into the current trunk.", "group_id": 81, "id": 209186}, {"user_id": 7517, "stars": [{"date_created": 1298876385.8066151, "user_id": 11405}], "topic_id": 8988, "date_created": 1298756681.5783899, "message": "I have been using django-datatrans for few static Models and it has been working out great", "group_id": 81, "id": 215752}, {"user_id": 11405, "stars": [], "topic_id": 8988, "date_created": 1298876414.7329271, "message": "@jorilallo thank you so much! you saved my ass! django-datatrans does what I need...", "group_id": 81, "id": 223968}, {"user_id": 16446, "stars": [{"date_created": 1298907931.2811639, "user_id": 5367}, {"date_created": 1298910083.3391931, "user_id": 214}, {"date_created": 1298914295.2383831, "user_id": 6415}, {"date_created": 1298982400.625545, "user_id": 927}, {"date_created": 1299071551.6759551, "user_id": 3751}], "topic_id": 8988, "date_created": 1298902606.6144929, "message": "I recommend a \"combo\", django-modeltranslation + django-localeurl + django-rosetta", "group_id": 81, "id": 225838}, {"user_id": 6415, "stars": [{"date_created": 1298914437.4040689, "user_id": 214}], "topic_id": 8988, "date_created": 1298914056.1205201, "message": "I've used django-modeltranslation + south + django-localeurl. The nice thing about django-modeltranslation is that you can translate app models without forking.", "group_id": 81, "id": 227501}, {"user_id": 11405, "stars": [{"date_created": 1299089866.8134389, "user_id": 209}, {"date_created": 1299147878.807595, "user_id": 6415}], "topic_id": 8988, "date_created": 1298956853.2786191, "message": "django-datatrans allows translating any model without forking as well. plus it comes with a rosetta-like admin area for managing all your translations. it is awesome...", "group_id": 81, "id": 232022}, {"user_id": 7517, "stars": [], "topic_id": 8988, "date_created": 1299089521.1087389, "message": "@mbrochh Happy to help out!", "group_id": 81, "id": 250079}]