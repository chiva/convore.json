[{"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312642641.4239531, "message": "stupid paste bugs", "group_id": 81, "id": 1809782}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312642727.8579161, "message": "https://gist.github.com/0ca07b3057be5d215184", "group_id": 81, "id": 1809790}, {"user_id": 275, "stars": [{"date_created": 1312868026.294919, "user_id": 23352}], "topic_id": 43398, "date_created": 1312642613.3439071, "message": "I'm trying to get Sentry working on my app, and while it *does* catch uncaught exceptions, I'm unable to get it to log errors where I used log.error() or the like. I have some code that looks like this:", "group_id": 81, "id": 1809778}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312642748.7711711, "message": "log is created with:", "group_id": 81, "id": 1809792}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312642760.9782839, "message": "import logging\nlog = logging.getLogger(__name__)\n", "group_id": 81, "id": 1809793}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312642554.475553, "message": "paging @dcramer...", "group_id": 81, "id": 1809770}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312642633.2840719, "message": "try:\n    config = yaml.load(self.config_cache)return AttributeDict(config)\n            except Exception, e:\n                log.error('Bad YAML', exc_info=True, extra={\n                    'data': {\n                        'yaml': self.config_cache,\n                        'app': self,\n                        # You may specify any values here and Sentry will log and output them\n                        'user': self.user\n                    }\n                })\n                return empty_config", "group_id": 81, "id": 1809781}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312650358.228508, "message": "LOGGING = {\n    'version': 1,\n    'handlers': {\n        'null': {\n            'level':'DEBUG',\n            'class':'django.utils.log.NullHandler',\n        },\n        'console':{\n            'level':'DEBUG',\n            'class':'logging.StreamHandler',\n        },\n        'mail_admins': {\n            'level': 'ERROR',\n            'class': 'django.utils.log.AdminEmailHandler'\n        },\n        'sentry': {\n            'level': 'DEBUG',\n            'class': 'sentry.client.handlers.SentryHandler',\n        },\n    },\n    'loggers': {\n        '()': {\n            'level': 'INFO',\n            'handlers': ['sentry'],\n        },\n        'django.request': {\n            'handlers': ['console'],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'django.db.backends': {\n            'handlers': ['null'],\n            'level': 'DEBUG',\n            'propagate': False,\n        },\n        'pushcode': {\n            'handlers': ['console', 'sentry'],\n            'level': 'DEBUG',\n            'propogate': False,\n        },\n        'pushcode.deployer': {\n            'handlers': ['console', 'sentry'],\n            'level': 'DEBUG',\n            'propogate': True,\n        },\n        'paramiko.transport': {\n            'handlers': ['null'],\n        },\n        'sentry.errors': {\n            'level': 'DEBUG',\n            'handlers': ['console'],\n            'propagate': False,\n        },\n    }\n}", "group_id": 81, "id": 1810324}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312650397.503279, "message": "any ideas?", "group_id": 81, "id": 1810328}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312650314.41643, "message": "my logging config is like so:", "group_id": 81, "id": 1810318}, {"user_id": 275, "stars": [], "topic_id": 43398, "date_created": 1312650391.9095221, "message": "Sentry catches actual uncaught exceptions, but not errors that are logged.", "group_id": 81, "id": 1810326}, {"user_id": 1806, "stars": [], "topic_id": 43398, "date_created": 1313066687.711659, "message": "I'm still learning sentry too but I reckon you need to declare a logger for your particular module (ie add a new entry to your LOGGING['loggers'] dict which sets sentry as a handler.  I don't think the '()' keyed logger will pick up your logged messages.", "group_id": 81, "id": 1847804}, {"user_id": 1806, "stars": [], "topic_id": 43398, "date_created": 1313088927.410784, "message": "I'd appreciate it if someone could explain how the '()' keyed logger works.  Does it catch all messages that are allowed to propagate?  There's not much in the sentry docs on it.", "group_id": 81, "id": 1850502}, {"user_id": 26888, "stars": [], "topic_id": 43398, "date_created": 1313102057.6561019, "message": "Have you read the doc, esp: http://readthedocs.org/docs/sentry/en/latest/config/index.html#usage ?", "group_id": 81, "id": 1851996}, {"user_id": 1806, "stars": [], "topic_id": 43398, "date_created": 1313136863.421762, "message": "I have.  Does the '()' keyed logger catch everything from loggers set up using `logger = logging.getLogger(__name__)` without you having to explicitly set up loggers for that module?", "group_id": 81, "id": 1855601}, {"user_id": 1126, "stars": [], "topic_id": 43398, "date_created": 1313177814.4907019, "message": "@steveivy some of the 'propagate' keys in 'loggers' are misspelled fyi, but I have no idea if that would be causing your problem", "group_id": 81, "id": 1859034}, {"user_id": 1782, "stars": [], "topic_id": 43398, "date_created": 1323706353.841301, "message": "Save problem here", "group_id": 81, "id": 2740577}]