[{"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203487.5498719, "message": "you know what I mean", "group_id": 81, "id": 49766}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203251.374547, "message": "http://dpaste.de/9Uqv/", "group_id": 81, "id": 49757}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203252.592613, "message": "Just sayin'", "group_id": 81, "id": 49758}, {"user_id": 7, "stars": [], "topic_id": 1927, "date_created": 1297203396.6868, "message": "why not use the ORM?", "group_id": 81, "id": 49760}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203448.645345, "message": "Couldn't figure out how to get it to filter out the categories whos number of groups whose number of non-banned members are > 0", "group_id": 81, "id": 49762}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203483.7261059, "message": "that didn't come out right", "group_id": 81, "id": 49765}, {"user_id": 7, "stars": [], "topic_id": 1927, "date_created": 1297203489.8544481, "message": "can you show a small example of the models, with minimal fields?", "group_id": 81, "id": 49767}, {"user_id": 214, "stars": [], "topic_id": 1927, "date_created": 1297203506.5465829, "message": "Oh man. I spent like an entire day on a problem like that a couple weeks ago. I think I solved it, too, but don't really remember :-)", "group_id": 81, "id": 49768}, {"user_id": 7, "stars": [], "topic_id": 1927, "date_created": 1297203538.244662, "message": "@carljm last time I had a complicated query to write in the ORM I ended up fixing like 3 bugs in Django", "group_id": 81, "id": 49772}, {"user_id": 7, "stars": [], "topic_id": 1927, "date_created": 1297203538.8775661, "message": ":)", "group_id": 81, "id": 49773}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203642.422204, "message": "@alex http://dpaste.de/yeoU/", "group_id": 81, "id": 49778}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203699.657012, "message": "So I want to show the categories and their group counts, but only count a group if it has more than one (non-banned) member", "group_id": 81, "id": 49779}, {"user_id": 214, "stars": [{"date_created": 1297203775.882267, "user_id": 1}], "topic_id": 1927, "date_created": 1297203738.5527129, "message": "I'm leaving before I get sucked into this. Look forward to seeing your solution, Alex :-)", "group_id": 81, "id": 49780}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203750.8774719, "message": "My solution was Category.objects.raw() :)", "group_id": 81, "id": 49782}, {"user_id": 7, "stars": [{"date_created": 1297283158.9361241, "user_id": 261}], "topic_id": 1927, "date_created": 1297203781.28283, "message": "Category.objects.filter(user_not_banned_crap).annotate(c=Count(\"group__members\")).annotate(group_count=Count(\"groups\"))", "group_id": 81, "id": 49783}, {"user_id": 7, "stars": [{"date_created": 1297203860.869137, "user_id": 218}, {"date_created": 1297203911.4481959, "user_id": 1}, {"date_created": 1297203929.4468451, "user_id": 177}], "topic_id": 1927, "date_created": 1297203799.726826, "message": "so convore sucks at long ass messages", "group_id": 81, "id": 49785}, {"user_id": 1, "stars": [], "topic_id": 1927, "date_created": 1297203951.3614371, "message": "aww poo, have to go, back in a while", "group_id": 81, "id": 49789}, {"user_id": 177, "stars": [], "topic_id": 1927, "date_created": 1297203924.3979709, "message": "I find it amusing that @alex helped me with a very similar problem a few weeks ago (one where annotation was the answer).", "group_id": 81, "id": 49787}, {"user_id": 5, "stars": [], "topic_id": 1927, "date_created": 1297207375.506212, "message": "I don't really know sql.  Everytime I need it I can look up a reference and figure out how to do it generally. But if I had to do a written test, I would fail hard.", "group_id": 81, "id": 49954}]