[{"user_id": 20519, "stars": [], "topic_id": 12267, "date_created": 1299820994.7244279, "message": "-__- more details please", "group_id": 81, "id": 319553}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821083.316175, "message": "i'm using 0.3.3 but by the time it gets to the \u201ccomplete\u201d\u00a0view in views.py line 46 it's already made a new user and replaces the existing one with it", "group_id": 81, "id": 319565}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299820893.7235711, "message": "i know it's supposed to since it says so and the demo does", "group_id": 81, "id": 319544}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821100.5977659, "message": "--- views.py.orig\t2011-03-10 21:22:33.000000000 -0800\n+++ views.py\t2011-03-10 21:22:35.000000000 -0800\n@@ -43,6 +43,7 @@\n             request.session[error_key] = str(e)\n \n     if user and getattr(user, 'is_active', True):\n+        import sys; print >>sys.stderr, 'Logging user in as %r even though they are already %r' % (user, request.user)\n         login(request, user)\n         if getattr(settings, 'SOCIAL_AUTH_SESSION_EXPIRATION', True):\n             # Set session expiration date if present and not disabled by\n", "group_id": 81, "id": 319566}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821203.7520671, "message": "when i sign into my app with twitter, request.user is AnonymousUser as it should be, but when i sign in with facebook also, request.user is the auth.User associated with the twitter user", "group_id": 81, "id": 319573}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821265.200727, "message": "so the problem must be way before that, when it decides it needs to make a new auth.User, but i was hoping somebody might have seen this problem already instead of me having to dig for it", "group_id": 81, "id": 319577}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821145.995954, "message": "hmm, could be that i'm using django 1.3 maybe", "group_id": 81, "id": 319569}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299820856.6761391, "message": "ugh, django-social-auth isn't associating new sign-ins with the already-signed-in auth.User for me", "group_id": 81, "id": 319536}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821009.859396, "message": "yeah i'm getting there", "group_id": 81, "id": 319556}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299822650.260093, "message": "oh, and i see in the code it's supposed to raise a ValueError in that case anyway", "group_id": 81, "id": 319674}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821408.2227311, "message": "i didn't see anything in the example app that looked like it would make it work differently (other than it setting SOCIAL_AUTH_CREATE_USERS explicitly in its example local_settings.py, but since it is making users for me when i sign in the first time that's already effective seems like)", "group_id": 81, "id": 319582}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299821506.1270151, "message": "has anybody else seen multiple social-auths per user misbehave like this? i'll keep digging into it if not", "group_id": 81, "id": 319596}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299823827.816973, "message": "but that means it has to get passed into backend.auth_complete() in views.py line 38 as a kwarg too, to jump from view land where there's a request context into auth backend land?", "group_id": 81, "id": 319779}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299822453.6742871, "message": "hmm, i was afraid it was because i had signed in with the accounts separately first, but if i (a) delete the facebook UserSocialAuth, (b) sign in as the auth.User with the twitter account, and (c) try to associate the facebook account, it makes another new auth.User instead of associating with the twitter account's User.", "group_id": 81, "id": 319657}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299824574.012105, "message": "wtf", "group_id": 81, "id": 319875}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299823628.0369489, "message": "so the user is supposed to end up in the credentials bag so it gets passed into SocialAuthBackend.authenticate() as a kwarg", "group_id": 81, "id": 319767}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299824562.844137, "message": "ohhhh there are two whole different views for logging in and associating with an existing account", "group_id": 81, "id": 319873}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299825671.962203, "message": "the more you know \u266a\u266b", "group_id": 81, "id": 320048}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299825502.9908559, "message": "yeah, that's all it is. have to make sure to use \u201cassociate_begin\u201d\u00a0instead of regular \u201cbegin\u201d when there's supposed to already be a logged-in user. i assumed they'd be the same flow with the same views since i did it that way when i've rolled my own.", "group_id": 81, "id": 320013}, {"user_id": 3354, "stars": [{"date_created": 1299854984.5330181, "user_id": 4581}, {"date_created": 1299864564.3820951, "user_id": 12002}], "topic_id": 12267, "date_created": 1299829816.4930689, "message": "For a one-man thread this is pretty interesting stuff. Rem inds me of dialogs I have with myself.", "group_id": 81, "id": 320392}, {"user_id": 13817, "stars": [{"date_created": 1299915655.9170401, "user_id": 141}], "topic_id": 12267, "date_created": 1299834758.575269, "message": ":) +1 for @markpasc", "group_id": 81, "id": 320779}, {"user_id": 719, "stars": [{"date_created": 1299842253.8421111, "user_id": 1243}, {"date_created": 1299856302.4211559, "user_id": 1822}, {"date_created": 1299864574.359571, "user_id": 12002}, {"date_created": 1299915654.5367479, "user_id": 141}], "topic_id": 12267, "date_created": 1299833649.0474241, "message": "@markpasc You could probably tweak this thread & add it to the documentation. :)", "group_id": 81, "id": 320661}, {"user_id": 17897, "stars": [{"date_created": 1299864567.560138, "user_id": 12002}], "topic_id": 12267, "date_created": 1299833361.27865, "message": "cool thread. :)", "group_id": 81, "id": 320646}, {"user_id": 20656, "stars": [{"date_created": 1299864585.6131179, "user_id": 12002}, {"date_created": 1299917275.274538, "user_id": 141}], "topic_id": 12267, "date_created": 1299864410.2844651, "message": "Hey, nice thread.I'm django-social-auth developer. As you found there are two views, one for registering and another for associations, this is to avoid messing with the processes and have responsibilities separated on each view. Association is only possible if user is already logged in, so it doesn't make sense to check user validity, etc as in registration view.", "group_id": 81, "id": 324968}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299963333.2352209, "message": "@omab thanks! when i've written views for that i've used the same flow but branched on whether request.user is the AnonymousUser to see if a new User needed created, so i didn't expect a separate view", "group_id": 81, "id": 336178}, {"user_id": 141, "stars": [], "topic_id": 12267, "date_created": 1299963372.1466811, "message": "e.g. https://github.com/markpasc/leapfrog/blob/master/leapfrog/views.py#L191 (which has an extra layer of indirection through \u201cPerson\u201d\u00a0but i hope is understandable)", "group_id": 81, "id": 336180}]