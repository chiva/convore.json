[{"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298482250.1827879, "message": "and it appears in the editor, and is available to templates, etc", "group_id": 81, "id": 188964}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298482265.271589, "message": "I'm not at all sure how to describe this in django-speak", "group_id": 81, "id": 188967}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298482228.476716, "message": "kind of like how, in Wordpress, you can say \"I want to add a text field with this name to Posts\"", "group_id": 81, "id": 188957}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298482193.1028211, "message": "I'm working on a project for which one of the requirements is that users in the admin should be able to add arbitrary meta data to any one of several models, without having to add code to do so", "group_id": 81, "id": 188946}, {"user_id": 141, "stars": [], "topic_id": 8374, "date_created": 1298483019.77742, "message": "have you figured out how you want to store it? are you more looking for how to support it in the admin?", "group_id": 81, "id": 189047}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298482814.557349, "message": "any ideas?", "group_id": 81, "id": 189008}, {"user_id": 6396, "stars": [], "topic_id": 8374, "date_created": 1298483160.114733, "message": "You'll need to be dynamically generating your forms at runtime based upon another model which keeps track of the fields you need for a specific model I guess. Are you adding these extra fields at the model level or instance level?", "group_id": 81, "id": 189081}, {"user_id": 141, "stars": [], "topic_id": 8374, "date_created": 1298482952.181859, "message": "i've seen something like that", "group_id": 81, "id": 189036}, {"user_id": 141, "stars": [], "topic_id": 8374, "date_created": 1298483142.42365, "message": "the thing i'm remembering was just how to make the extra fields available to the narrow model, not sure if it had admin support", "group_id": 81, "id": 189077}, {"user_id": 214, "stars": [], "topic_id": 8374, "date_created": 1298484113.206598, "message": "Presuming you aren't going to be modifying database schema at runtime (I wouldn't!), you're either going to be storing this using some kind of EAV (entity-attribute-value) schema, or potentially using a schemaless store.", "group_id": 81, "id": 189304}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298484300.849297, "message": "@djm - actually, something in between", "group_id": 81, "id": 189347}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298484342.2329421, "message": "model level, but only for instances of that model that are related to another", "group_id": 81, "id": 189355}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298484345.7514141, "message": "model", "group_id": 81, "id": 189356}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298484356.514873, "message": "the requirement is still in flux", "group_id": 81, "id": 189358}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298484283.6746061, "message": "@djm - instance level", "group_id": 81, "id": 189344}, {"user_id": 13814, "stars": [], "topic_id": 8374, "date_created": 1298485522.209748, "message": "If the amount of data and performance requirements are low, then this is trivial to do. Scaling it is potentially challenging so try to get a handle on how much data will be managed with this approach.", "group_id": 81, "id": 189536}, {"user_id": 6396, "stars": [], "topic_id": 8374, "date_created": 1298484614.155875, "message": "Model level = easy. Instance level = harder.", "group_id": 81, "id": 189401}, {"user_id": 5367, "stars": [], "topic_id": 8374, "date_created": 1298488856.3415909, "message": "From what I understand @carljm answer on using an eav schema is the way to go. There are a few apps that can help out there (e.g. check http://mvpdev.github.com/django-eav/ )", "group_id": 81, "id": 190097}, {"user_id": 275, "stars": [], "topic_id": 8374, "date_created": 1298497360.466635, "message": "django-eav actually looks pretty good, including dynamcily creating forms for your models. With a little tweaking to let the user define fields from the admin, this might do it.", "group_id": 81, "id": 191478}]