[{"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976197.1804421, "message": "we use virtualenv not to pollute systems. we separate the underlying system (admin space) from the application (user space). our admins just create empty env and home directories which our application staff populates with data. for deployment we either use vcs or our own in-house-built system.", "group_id": 81, "id": 426920}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976213.904541, "message": "it looks like a lot of the noops sites are on the pip side", "group_id": 81, "id": 426925}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976317.8002989, "message": "I agree, I think :)", "group_id": 81, "id": 426942}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976637.5966589, "message": "I believe", "group_id": 81, "id": 426998}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976171.0977671, "message": "well a little of both", "group_id": 81, "id": 426917}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976194.701714, "message": "if virtualenv + pip is better for distribution and deployment that would be good to knpw", "group_id": 81, "id": 426919}, {"user_id": 22386, "stars": [{"date_created": 1300980238.903686, "user_id": 21209}], "topic_id": 14956, "date_created": 1300974672.4653931, "message": "which is everyone using? we started with virtualenv but found using buildout accomplished the same type of things", "group_id": 81, "id": 426749}, {"user_id": 5981, "stars": [{"date_created": 1300975528.2186821, "user_id": 13325}], "topic_id": 14956, "date_created": 1300975401.8717959, "message": "I kind of make the opposite journey - buildout, then pip+virtualenv. I found virtualenv easier to deal with over the (longer) lifetime of a project. Plus, having an actual python \"interpreter\" for the environment makes working with code analysis and completion tools (pycharm/pydev) easier. More than that, buildout requires that you study it (and its various recipes) as a separate tool, versus pip (which you should know already, right?)", "group_id": 81, "id": 426816}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976413.435643, "message": "the eggs the application needs are in user space", "group_id": 81, "id": 426949}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976505.284678, "message": "but it sounds that you're ok with that. you have a deployment and you have your capsulation.", "group_id": 81, "id": 426969}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976481.1505949, "message": "perhaps you should also consider whether you have multiple apps on one server and if they need different versions of eggs etc. it was really easy to combine this with cvs.", "group_id": 81, "id": 426963}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976690.0443239, "message": "otherwise you could always use virtualenv for capsulation and put everything in it with buildout :)", "group_id": 81, "id": 427012}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300975954.6719289, "message": "do we talk about distribution/deployment or just grouping project based packages and keeping the system clean?", "group_id": 81, "id": 426873}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976316.399071, "message": "so you have your eggs in your user space?", "group_id": 81, "id": 426941}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976357.60339, "message": "we are a bit away from true deployment so I am not sure what we are going to do", "group_id": 81, "id": 426945}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976285.0679791, "message": "i would say that virtualenv, pip and buildout are different things.", "group_id": 81, "id": 426936}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976294.164835, "message": "the way we have it setup buildout doesn't pollute the system. All eggs are stored in a directory and the django recipe creates wrapper around manage.py that adds the eggs to the python path before running server, etc.", "group_id": 81, "id": 426938}, {"user_id": 22386, "stars": [], "topic_id": 14956, "date_created": 1300976367.490104, "message": "right now it is mostly dev environment", "group_id": 81, "id": 426946}, {"user_id": 2810, "stars": [], "topic_id": 14956, "date_created": 1300976581.801897, "message": "i would try to minimize all dependencies so that my app only depends on python itself. everything else would be deployed with it. but that's what you can do with buildout, right?", "group_id": 81, "id": 426979}, {"user_id": 13524, "stars": [], "topic_id": 14956, "date_created": 1300978459.937428, "message": "I used to use buildout, but it had been giving me headaches for a while, so I switched over to virtualenv + pip (with --no-site-packages to avoid system pollution) and I quite like it", "group_id": 81, "id": 427440}, {"user_id": 2588, "stars": [], "topic_id": 14956, "date_created": 1300984476.0003891, "message": "My experience working on a big buildout-based project entailed a decent amount of frustration since the docs weren't well organized IMO.", "group_id": 81, "id": 428449}, {"user_id": 2588, "stars": [], "topic_id": 14956, "date_created": 1300984616.71311, "message": "From the perspective of the Django community there's a lot of momentum behind virtualenv+pip (prob. the wider Python community as well)  pip works great most of the time but it is definitely still maturing.", "group_id": 81, "id": 428480}, {"user_id": 2588, "stars": [], "topic_id": 14956, "date_created": 1300984310.6766109, "message": "Using buildout recipes and related packages you can specify non-trivial environment setup/installation steps, build rpms/debs, etc. whereas virtualenv+pip doesn't provide these types of capabilities", "group_id": 81, "id": 428412}, {"user_id": 2588, "stars": [], "topic_id": 14956, "date_created": 1300984098.348165, "message": "Like @theblacklion mentioned, virtualenv+pip is more like (very generally speaking) a subset of what buildout can provide you - with the common ground being the ability to create isolated* Python environments", "group_id": 81, "id": 428375}, {"user_id": 2588, "stars": [], "topic_id": 14956, "date_created": 1300984006.7931011, "message": "buildout came out of the Zope/Plone communities and as such has been around for a while. The benefit here is an existing ecosystem of components for customizing, managing, and deploying your buildout environments.", "group_id": 81, "id": 428365}, {"user_id": 2588, "stars": [], "topic_id": 14956, "date_created": 1300984518.680362, "message": "buildout is a beast but there's some good stuff in there", "group_id": 81, "id": 428456}, {"user_id": 7129, "stars": [], "topic_id": 14956, "date_created": 1300986828.091264, "message": "Heretical view: use your distro's package manager to deploy your software. It solved all of these problems years ago.", "group_id": 81, "id": 428875}, {"user_id": 5778, "stars": [{"date_created": 1301052616.54145, "user_id": 1243}], "topic_id": 14956, "date_created": 1300989504.0549901, "message": "@lamby your distro has all of the useful 3rd party Django apps out there??? what on earth are you using?", "group_id": 81, "id": 429120}, {"user_id": 1736, "stars": [], "topic_id": 14956, "date_created": 1300991679.400707, "message": "@codekoala Building .debs or .rpms from Python code is easy these days and there are many tools to streamline the process", "group_id": 81, "id": 429549}, {"user_id": 4077, "stars": [], "topic_id": 14956, "date_created": 1300996725.0410631, "message": "My deployment process, as described above, is this: fab deploy", "group_id": 81, "id": 430416}, {"user_id": 4077, "stars": [{"date_created": 1301059627.1371861, "user_id": 13524}, {"date_created": 1301274351.250551, "user_id": 275}], "topic_id": 14956, "date_created": 1300996709.7067571, "message": "virtualenv + pip + fabric is what I'm using.  My fabric basically does this: commit local source to git, git checkout on the targets, run a pip -r against requirements, run south migrations, and bounce flup.  I've got a separate fab command for bouncing nginx.", "group_id": 81, "id": 430412}, {"user_id": 3354, "stars": [], "topic_id": 14956, "date_created": 1301028023.501816, "message": "@coderanger just because it's easy doesn't mean people are doing it. Packaging for a distro is normally regarded as a fairly specialist skill.", "group_id": 81, "id": 435637}, {"user_id": 1736, "stars": [], "topic_id": 14956, "date_created": 1301030807.354892, "message": "@holdenweb Sure, it just seemed like @codekoala was under the impression that \"use your distro package tools\" also meant \"use only packages from your distro\" :-)", "group_id": 81, "id": 435934}, {"user_id": 13550, "stars": [{"date_created": 1301052662.5905149, "user_id": 1243}, {"date_created": 1301070060.5378909, "user_id": 5778}], "topic_id": 14956, "date_created": 1301041854.9402809, "message": "@coderanger I agree that if it is easy to build a .deb from a pip requirement file the whole process is not super documented and I don't see many people discussing this. In addition there is the whole concept of isolation that is not supported documented. Also it is possible to create a \".deb\" that will create a virtualenv, in /opt/webapps/, and install all your python packages in it. Tool like checkinstall allows you to do this today. I would be interested to know if when you create a .deb you have the need/capability to create a virtualenv ?", "group_id": 81, "id": 436785}, {"user_id": 1736, "stars": [], "topic_id": 14956, "date_created": 1301071475.1213701, "message": "@gwadeloop All of the places I know of that use debs for deployment have reached the point where each server is doing only one thing and is certainly only running one app, so installing globally is fine (no chance of needing multiple versions of things).", "group_id": 81, "id": 440004}, {"user_id": 25337, "stars": [], "topic_id": 14956, "date_created": 1301073654.1697221, "message": "I use pip+virtualenv for most projects. However, where a more complicated build needs to be done (or there are C deps, like libxml2/libxslt, and developers are on different OSs) then I'll use buildout. I'm also using buildout on one project where we need to apply a couple of patches to Django during the build process. But for 80% project, pip+virtualenv are fine.", "group_id": 81, "id": 440337}, {"user_id": 553, "stars": [], "topic_id": 14956, "date_created": 1301075527.433542, "message": "i like pip+virtualenv, but one thing that's annoys me is git deps in pip, if i specify not just a repo but commit, it will install fine, then on next install it stops at this dep saying that git is off branch and you need to do something before update", "group_id": 81, "id": 440733}, {"user_id": 213, "stars": [], "topic_id": 14956, "date_created": 1301077343.4093001, "message": "@dmishe That should be fixed in the latest version of pip.", "group_id": 81, "id": 440951}, {"user_id": 8490, "stars": [], "topic_id": 14956, "date_created": 1301265439.7601161, "message": "Didn't wanna make a new topic since my question is semi related. I am about to deploy my first django project to Dotcloud. Now I was wonder what the best 'pre-deployment' technique is to get a clean repository to deploy? I mean one without the settings_local.py and without my sass/coffeescript source files.", "group_id": 81, "id": 453226}]