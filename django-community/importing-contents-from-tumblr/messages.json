[{"user_id": 1101, "stars": [], "topic_id": 21406, "date_created": 1303829118.400811, "message": "Hey, I am considering to build a website for a book store with django. It will need books catalogue and a blog. Store owners have tumblr where they publish all new books as posts and tag them with needed data (author, if the book is available to buy and a category). They've got a plenty of posts already ( > 500 ). I am front-end developer and I've got limited experience with Django, but it seems to me that it'd be more flexible solution than to use WordPress (which is suited for blog, but for a catalogue I'd need to use many plugins etc.). \n\nOnly problem is, there are many ready Tumblr to WP solutions, and to import content to Django I'd need to write a script myself. So my question is this: could I use Django ORM in my script instead of writing SQL? (I really-really hate SQL for some reason).", "group_id": 81, "id": 815163}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303832753.8669429, "message": "The docs are pretty easy to figure out", "group_id": 81, "id": 815803}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303832796.6607721, "message": "Then I'd probably read from the tumblr blog's ras/atom feed", "group_id": 81, "id": 815808}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303833072.197989, "message": "good luck!", "group_id": 81, "id": 815855}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303832956.7921591, "message": "docs: http://docs.djangoproject.com/en/dev/howto/custom-management-commands/", "group_id": 81, "id": 815833}, {"user_id": 275, "stars": [{"date_created": 1303843511.3651309, "user_id": 141}], "topic_id": 21406, "date_created": 1303832735.0259809, "message": "Sure, the easiest way to do this is probably to write a manage.py command", "group_id": 81, "id": 815798}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303832831.839937, "message": "And store any imported item's atom I'd with it, so you van check for dypes", "group_id": 81, "id": 815816}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303832927.1720321, "message": "ugh, iphone fingers.", "group_id": 81, "id": 815831}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303833068.207289, "message": "I just noticed you're a front-end guy; you may want to team up with a more experienced django developer depending on time/budget; it will make this kind of thing easier.", "group_id": 81, "id": 815854}, {"user_id": 275, "stars": [], "topic_id": 21406, "date_created": 1303832864.3540051, "message": "Then just run python manage.py tumblrimport", "group_id": 81, "id": 815822}, {"user_id": 141, "stars": [], "topic_id": 21406, "date_created": 1303843826.2466631, "message": "if you want to keep the special Tumblr post type information, you might be able to use the Tumblr API instead of feeds. you can also page back through the history with the API (i don't see an obvious way to do that with the feeds)", "group_id": 81, "id": 817612}, {"user_id": 141, "stars": [], "topic_id": 21406, "date_created": 1303843920.0339351, "message": "as @steveivy said you can easily use the Django ORM in a management command, so your script just needs to convert the post fields you want to keep from feed or API output into some ORM model instances.", "group_id": 81, "id": 817627}, {"user_id": 141, "stars": [], "topic_id": 21406, "date_created": 1303843849.0834379, "message": "i haven't used it myself but this looks like a good Python library for using the Tumblr API: https://github.com/cobralibre/tumblr-api", "group_id": 81, "id": 817614}, {"user_id": 30618, "stars": [], "topic_id": 21406, "date_created": 1303915338.7834661, "message": "Throwing this out there.  I maintain/actively work on my django-tumblr fork which is great if you wanted to build the site with Django and integrate tumblr into it - https://github.com/mgan59/django-tumblr\n\nThough if you are still looking to just pull things out of tumblr there is also the https://github.com/mgan59/python-tumblr  though it might be overkill for what you are trying to do.\n\nI've built a few django websites that run the django-tumblr app as part of the publishing system.  So let me know if you have any questions.", "group_id": 81, "id": 826631}, {"user_id": 1101, "stars": [{"date_created": 1303939125.902998, "user_id": 141}], "topic_id": 21406, "date_created": 1303918469.145195, "message": "@steveivy @markpasc @mgan thank you guys! \nI'll definitely look into docs regarding writing custom management command, that's a nice direction I think.", "group_id": 81, "id": 827282}, {"user_id": 1101, "stars": [], "topic_id": 21406, "date_created": 1303918610.868973, "message": "I'll see if RSS/Atom will be sufficient for my needs or I'll need to use the API \u2013 which must be more fun, than parsing XMLs, mustn't it :-) Anyway, cool, I may come back with some more specific questions once I get my hands on this. If it turns out to be generic enough I'll also post the code I've written in a gist or something.", "group_id": 81, "id": 827321}, {"user_id": 141, "stars": [], "topic_id": 21406, "date_created": 1303939190.9157529, "message": "@mgan that looks nice! have you considered using OAuth authentication instead of putting Tumblr passwords in the settings?", "group_id": 81, "id": 832853}, {"user_id": 30618, "stars": [], "topic_id": 21406, "date_created": 1304003716.6357551, "message": "@gryzzly if need be my django-tumblr thing has a management command already written.  might save you some time :)  It does quite abit of the sorting of content types which can be time consuming.", "group_id": 81, "id": 842241}, {"user_id": 30618, "stars": [{"date_created": 1304006219.046313, "user_id": 141}], "topic_id": 21406, "date_created": 1304004069.9668369, "message": "@markpasc Honestly hadn't crossed my mind really, mainly because I use it just for one tumblr and it integrates into my overall site and I already have other user-creds in my settings file for things like my stmp-server and other services.  Of course I use a settings_local.py file which contains all my actually credentials, I just left the stubs in place so people could see that you need those in place.  \n\nI do see the use of OAuth however if one were to build an application that would allow users of the site to sync their tumblr app where-by you would need to support multiple accounts.  So it is a possibility for sure as I have an upcoming project that I had intended on adding tumblr as a source but just using RSS/ATOM.  But OAuth may be the best way to go....  problem is I thought about doing that project in nodejs so guess we'll see :)  But thanks for the idea.", "group_id": 81, "id": 842302}]