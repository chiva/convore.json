[{"user_id": 24931, "stars": [], "topic_id": 42267, "date_created": 1311053171.605123, "message": "What cache libraries do people use with django?", "group_id": 81, "id": 1669246}, {"user_id": 11592, "stars": [], "topic_id": 42267, "date_created": 1311057027.72509, "message": "I think more appropriate question would be: \u00abwhat cache backends do people use with django?\u00bb.", "group_id": 81, "id": 1669482}, {"user_id": 11592, "stars": [], "topic_id": 42267, "date_created": 1311057036.437243, "message": "Anyway, https://github.com/sebleier/django-redis-cache/", "group_id": 81, "id": 1669483}, {"user_id": 28671, "stars": [], "topic_id": 42267, "date_created": 1311057509.3057699, "message": "If you meant backend, you can take a look at memcached", "group_id": 81, "id": 1669509}, {"user_id": 28671, "stars": [], "topic_id": 42267, "date_created": 1311057484.814369, "message": "You can take a look at https://github.com/dziegler/django-cachebot", "group_id": 81, "id": 1669507}, {"user_id": 1126, "stars": [], "topic_id": 42267, "date_created": 1311086262.3584039, "message": "Most use memcached, some have started to use redis", "group_id": 81, "id": 1671532}, {"user_id": 11592, "stars": [], "topic_id": 42267, "date_created": 1311145737.324913, "message": "Actually, if you're still deciding for yourself what to use, django core filecache/locmem/db backend will suffice.", "group_id": 81, "id": 1679188}, {"user_id": 24931, "stars": [], "topic_id": 42267, "date_created": 1311203893.9113281, "message": "@dpwiz actually, I was hoping for a better wrapper that did caching a bit more transparently. Having an ORM means that you can access a model from a bunch of different places, and I was hoping for a common wrapper around the Django core cache library.", "group_id": 81, "id": 1685587}, {"user_id": 11592, "stars": [], "topic_id": 42267, "date_created": 1311239372.592262, "message": "Then you could just put cache stuff into models to get a consistent behavior in views, scripts etc.", "group_id": 81, "id": 1687937}, {"user_id": 33202, "stars": [], "topic_id": 42267, "date_created": 1311254536.011976, "message": "you should probably look into writing a caching Manager that you can subclass (or just use) on your models", "group_id": 81, "id": 1689019}, {"user_id": 4581, "stars": [{"date_created": 1311280158.3518989, "user_id": 1126}], "topic_id": 42267, "date_created": 1311259691.8951769, "message": "@streeter take a look at johnny-cache: http://packages.python.org/johnny-cache/  - IF your site is read-heavy, I've heard it works very well.", "group_id": 81, "id": 1689939}, {"user_id": 24931, "stars": [], "topic_id": 42267, "date_created": 1311274663.8329239, "message": "@Jiaaro yeah, though I was hoping for good suggestions on what others have used.", "group_id": 81, "id": 1691557}, {"user_id": 2588, "stars": [], "topic_id": 42267, "date_created": 1311359803.09197, "message": "http://djangopackages.com/grids/g/caching/  We've used a mix of Johnny Cache, newcache, and cache-machine. Each has tradeoffs depending on what your use cases are.", "group_id": 81, "id": 1700765}, {"user_id": 28981, "stars": [{"date_created": 1311487309.5569351, "user_id": 24931}], "topic_id": 42267, "date_created": 1311404810.7728069, "message": "Johhny-cache is also pretty good, but you should run some numbers to see if your site really is read heavy, otherwise thrashing might be an issue", "group_id": 81, "id": 1704712}, {"user_id": 28981, "stars": [{"date_created": 1311487308.114228, "user_id": 24931}], "topic_id": 42267, "date_created": 1311404754.857491, "message": "I tend to make sure the queries are as optimal as possible first. Then i throw in full page caching middleware first. If i need to squeeze in more performance, start off with caching some model properties methods. Eg. https://bitbucket.org/kmike/django-cache-utils", "group_id": 81, "id": 1704671}, {"user_id": 28981, "stars": [], "topic_id": 42267, "date_created": 1311404723.2314949, "message": "Although do beware of premature optimization, i ended up caching too early and it hid quite a few subtle bugs which came up later as we grew to more traffic.", "group_id": 81, "id": 1704638}]