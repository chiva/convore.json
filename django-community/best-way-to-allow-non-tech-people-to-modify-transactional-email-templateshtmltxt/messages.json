[{"user_id": 28981, "stars": [], "topic_id": 38733, "date_created": 1307615541.470844, "message": "Quite a few of my clients need the ability to change copy on those emails quite often, right now their normal templates that are rendered by the app.", "group_id": 81, "id": 1348089}, {"user_id": 28981, "stars": [], "topic_id": 38733, "date_created": 1307615568.8809941, "message": "I've looked at mailchimp, mad-mimi, but they don't really work for transactional emails.", "group_id": 81, "id": 1348093}, {"user_id": 28981, "stars": [], "topic_id": 38733, "date_created": 1307615636.4659951, "message": "Are there other alternatives, that let me store templates(by a unique id?) and pass data along. So non-tech admins/managers, can easily copy and A/B test emails.", "group_id": 81, "id": 1348106}, {"user_id": 34431, "stars": [], "topic_id": 38733, "date_created": 1307619179.098958, "message": "Why not save the templates in the database with dbtemplates or something? Or just store the body of the emails in the database?", "group_id": 81, "id": 1348479}, {"user_id": 12843, "stars": [], "topic_id": 38733, "date_created": 1307624400.5491769, "message": "I put this together by hand (have to fix for django 1.3 which removed loader.select_template_source). But it was basically just passing the template source in a context variable and then presenting it in a wysiwyg editor. When it's posted you can confirm the syntax by creating a django.template.Template and catching TemplateSyntaxError. Then finally write it out to the filesystem with the user id in the filename.", "group_id": 81, "id": 1349673}, {"user_id": 12843, "stars": [], "topic_id": 38733, "date_created": 1307624457.239397, "message": "when rendering with that template you can just give loader.select_template a tuple, and make sure the userid version of the template is before the \"base\" template - that way it will find the userid version first if it exists", "group_id": 81, "id": 1349688}, {"user_id": 28981, "stars": [], "topic_id": 38733, "date_created": 1307628462.223449, "message": "There's also http://postmarkapp.com/, but i haven't signed up to see if they have a similar feature.", "group_id": 81, "id": 1350351}, {"user_id": 35758, "stars": [], "topic_id": 38733, "date_created": 1307627555.803098, "message": "JangoMail.com does transactional emails through the same interface as marketing emails, so it's very non-tech friendly. They also have a tech-only service at JangoSMTP.com.", "group_id": 81, "id": 1350242}, {"user_id": 28981, "stars": [], "topic_id": 38733, "date_created": 1307628396.9838209, "message": "@sidmitra Hey Siddharth, \nPostageApp.com lets you create templates in HTML/CSS that you can edit on our backend! Let me know if you have q's. -  http://twitter.com/#!/postagebird/status/78822053804900352", "group_id": 81, "id": 1350337}, {"user_id": 28981, "stars": [], "topic_id": 38733, "date_created": 1307628650.223361, "message": "@ethanmiller, interesting i've been meaning to roll something like that on my own, but figured there must be something out there. Looks like there's still room to play!", "group_id": 81, "id": 1350375}, {"user_id": 34431, "stars": [], "topic_id": 38733, "date_created": 1307631667.989737, "message": "@ethanmiller that's a cool idea. That's a very useful app to provide for clients who want to control their websites/html/content once they are developed. I was thinking if putting together a webservice that did something similar", "group_id": 81, "id": 1350882}, {"user_id": 1644, "stars": [], "topic_id": 38733, "date_created": 1307721157.924751, "message": "+1 for PostageApp. I've started using it recently and love it. My clients can log in and see & modify email templates and I don't have to maintain them in my project. Check out django-templated-email as it has a postageapp backend.", "group_id": 81, "id": 1362263}]