[{"user_id": 548, "stars": [], "topic_id": 37628, "date_created": 1306901755.0004151, "message": "I imagine the email from header would need to encode whatever data is needed to associate the email reply with the original source.  Another aspect would be parsing the email body and stripping out the original message that is likely quoted, plus signatures, etc.", "group_id": 81, "id": 1248082}, {"user_id": 548, "stars": [], "topic_id": 37628, "date_created": 1306901697.0922451, "message": "I'm curious if there are any known solutions already for setting up a way to reply to an email notification that was sent out by a system, and parsing that reply and adding it as a comment.", "group_id": 81, "id": 1248058}, {"user_id": 1127, "stars": [], "topic_id": 37628, "date_created": 1306906017.4463251, "message": "Pretty sure our solution is awful :)", "group_id": 81, "id": 1249597}, {"user_id": 6688, "stars": [], "topic_id": 37628, "date_created": 1306908227.6823609, "message": "I've built such an solution a couple of times; I don't have anything especially reusable, though. It's always been a simple task that I've never gone back to refactor it into a reusable app.", "group_id": 81, "id": 1250162}, {"user_id": 6688, "stars": [], "topic_id": 37628, "date_created": 1306908258.3156421, "message": "(or the parsing has been so specialized that it's not reusable)", "group_id": 81, "id": 1250168}, {"user_id": 1736, "stars": [], "topic_id": 37628, "date_created": 1306911973.727937, "message": "Lamson was built to make this at least somewhat easier, but yeah, still pretty terrible.", "group_id": 81, "id": 1250796}, {"user_id": 4812, "stars": [{"date_created": 1307031354.911489, "user_id": 19240}], "topic_id": 37628, "date_created": 1306932417.4841781, "message": "http://postmarkapp.com has this parsing feature in a private beta right now - we take the inbound email, parse all of the goodies through our battle-tested parser, and sling a json object with all of the header and message data broken up against an HTTP endpoint - you can do anything you like with it from there.", "group_id": 81, "id": 1252658}, {"user_id": 4812, "stars": [], "topic_id": 37628, "date_created": 1306932480.816994, "message": "I don't have any sample python/django code for processing that JSON yet, but you can check out this sample ruby \"mitt\" for inspiration: https://github.com/r38y/postmark-mitt https://github.com/r38y/postmark-mitt-example", "group_id": 81, "id": 1252670}, {"user_id": 4812, "stars": [], "topic_id": 37628, "date_created": 1306932503.577621, "message": "If anyone wants access to the beta for Postmark inbound parsing, email me: alex@wildbit.com", "group_id": 81, "id": 1252673}, {"user_id": 32911, "stars": [], "topic_id": 37628, "date_created": 1306934098.801687, "message": "We hand-built a solution, but I'll echo @zeeg's sentiments about its quality.  Email interaction is a key feature of our site, but honestly, it's not a game I'd get into again if I could avoid it.", "group_id": 81, "id": 1252937}, {"user_id": 3375, "stars": [{"date_created": 1307031587.51952, "user_id": 19240}], "topic_id": 37628, "date_created": 1306956051.8359759, "message": "Take a look at http://mailgun.net/ and http://www.emailyak.com/", "group_id": 81, "id": 1257265}, {"user_id": 3375, "stars": [], "topic_id": 37628, "date_created": 1306956227.1050911, "message": "Mailgun also has a python helper library and an a django example: https://github.com/mailgun/mailgun.py/tree/master/samples/receiving", "group_id": 81, "id": 1257301}, {"user_id": 22943, "stars": [], "topic_id": 37628, "date_created": 1307073315.9997399, "message": "there is no such thing for just a local network?", "group_id": 81, "id": 1274243}, {"user_id": 548, "stars": [], "topic_id": 37628, "date_created": 1307078267.6442981, "message": "My intent was to start playing with lamson. Happy to hear there are a lot of other options to consider.   Appreciate all the feedback.", "group_id": 81, "id": 1274835}, {"user_id": 4383, "stars": [], "topic_id": 37628, "date_created": 1307080101.7721181, "message": "I wrote a snippet a long time ago that parses a multipart email. It's sort of re-usable: http://www.smipple.net/snippet/IanLewis/Multipart%20Mail%20Processing%20in%20Python", "group_id": 81, "id": 1274994}]