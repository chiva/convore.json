[{"user_id": 9650, "stars": [{"date_created": 1298779767.1408851, "user_id": 12002}], "topic_id": 8558, "date_created": 1298515436.9498899, "message": "I remember a talk of James Bennett saying that he doesn't ship templates at all -- an approach, but I don't like it.", "group_id": 81, "id": 194925}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298515544.656621, "message": "That must be a big app.", "group_id": 81, "id": 194931}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515156.6816151, "message": "For example, I'd loved to include Pootle into my project so that people could help with translating it -- no chance.", "group_id": 81, "id": 194915}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298515417.0749609, "message": "Why does a reusable app need to have templates?", "group_id": 81, "id": 194924}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298515547.92768, "message": "But, so?", "group_id": 81, "id": 194932}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515094.6527171, "message": "Actually, I haven't seen really reusable Django apps so far.  While Django's architecture would allow for them, conventions are missing, e.g. for the templates.  I've always had to put other people's apps into independent projects.", "group_id": 81, "id": 194914}, {"user_id": 4077, "stars": [], "topic_id": 8558, "date_created": 1298515385.836925, "message": "There's no REAL convention for template structure.  I mean, generally speaking, the 'content' area could be 'content', 'body', or whatever.  Title could be 'title', 'page_title', 'head', etc.  It's hard to bundle templates with an app and expect them to work, dropped in all alone.", "group_id": 81, "id": 194923}, {"user_id": 214, "stars": [{"date_created": 1298529655.2704239, "user_id": 521}, {"date_created": 1298723709.220505, "user_id": 16058}], "topic_id": 8558, "date_created": 1298515456.6417069, "message": "I think it's the only workable approach.", "group_id": 81, "id": 194926}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298515472.2964039, "message": "HTML structure is far too idiosyncratic per project.", "group_id": 81, "id": 194927}, {"user_id": 214, "stars": [{"date_created": 1298515902.323518, "user_id": 7}, {"date_created": 1298515945.0346389, "user_id": 209}, {"date_created": 1298516118.7094381, "user_id": 5778}, {"date_created": 1298529685.6963799, "user_id": 521}, {"date_created": 1298529788.557718, "user_id": 4858}, {"date_created": 1298540469.936336, "user_id": 15180}, {"date_created": 1298549991.981869, "user_id": 978}], "topic_id": 8558, "date_created": 1298515783.6835589, "message": "I mentioned in another topic that I think get_profile is a bad idea anyway. Just use a OneToOneField and regular ORM  methods to access it.", "group_id": 81, "id": 194942}, {"user_id": 214, "stars": [{"date_created": 1298515907.406009, "user_id": 7}, {"date_created": 1298550008.871887, "user_id": 978}], "topic_id": 8558, "date_created": 1298515815.515079, "message": "I know several other core devs feel similarly, though I'm not sure there's consensus (which is why it isn't deprecated yet, I guess).", "group_id": 81, "id": 194944}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298515970.0518689, "message": "I actually do agree, though, that it's pretty hard to make a really reusable app. Most of the most successful reusable apps in the wild are utility or support apps, not primary content apps.", "group_id": 81, "id": 194952}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298516297.4821711, "message": "BTW, unittesting an intentionally dysfuctional app is hell -- but that's another story.  ;-)", "group_id": 81, "id": 194967}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515478.2508931, "message": "If I delivered our apps without templates, the user would have to work for weeks on them.", "group_id": 81, "id": 194928}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515558.350132, "message": "A convention of a site_base.html with two or three well-defined blocks (and their names) would certainly help.", "group_id": 81, "id": 194933}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515615.165113, "message": "Well, at least the low-level templates (the one that are not extended anymore) should be present.", "group_id": 81, "id": 194936}, {"user_id": 212, "stars": [{"date_created": 1298516771.1395941, "user_id": 9650}], "topic_id": 8558, "date_created": 1298516528.3833621, "message": "I'd love to see that finished/extended and (most of all) adhered to", "group_id": 81, "id": 194981}, {"user_id": 214, "stars": [{"date_created": 1298603524.7157381, "user_id": 12142}], "topic_id": 8558, "date_created": 1298515577.322145, "message": "I can't imagine a reusable app author providing templates that I (or  my designer) wouldn't rewrite anyway.", "group_id": 81, "id": 194935}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298516093.8152411, "message": "@bronger Hey, if you want to write up some documentation or a blog post on good practices for reusable app authors, please do!", "group_id": 81, "id": 194960}, {"user_id": 214, "stars": [{"date_created": 1298779787.488723, "user_id": 12002}], "topic_id": 8558, "date_created": 1298515625.3830969, "message": "I  don't have any problem with someone providing sample templates, if it might help me understand how to use the app.", "group_id": 81, "id": 194937}, {"user_id": 3354, "stars": [{"date_created": 1298516682.01335, "user_id": 214}, {"date_created": 1298916038.1834331, "user_id": 1243}], "topic_id": 8558, "date_created": 1298515675.7401209, "message": "Template \"API\" documentation is necessary when no templates are provided. You need to know what context is going to be provided.", "group_id": 81, "id": 194938}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515745.764287, "message": "Another thing is get_profile.  Bad if two apps want to use it.", "group_id": 81, "id": 194939}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298516001.908937, "message": "I generally want to control my content models myself.", "group_id": 81, "id": 194955}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298516186.2297471, "message": "I propably will.  Our in-house project is even more complex because one of the apps is meant to be extended, which makes things even more complicated.  The app simply doesn't work unless another app extends it.", "group_id": 81, "id": 194962}, {"user_id": 9650, "stars": [{"date_created": 1298516104.0025499, "user_id": 5778}, {"date_created": 1298516650.5496681, "user_id": 214}, {"date_created": 1298700277.783056, "user_id": 12817}], "topic_id": 8558, "date_created": 1298516050.9766929, "message": "templates/ and static/ should contain directories rather than files.  This way, apps have their own namespace in them.", "group_id": 81, "id": 194957}, {"user_id": 214, "stars": [{"date_created": 1298515844.5106599, "user_id": 9650}], "topic_id": 8558, "date_created": 1298515824.390085, "message": "I don't think it really offers any benefits.", "group_id": 81, "id": 194946}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298515978.0910349, "message": "And there's nothing really wrong with that.", "group_id": 81, "id": 194953}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298515987.957294, "message": "Then, some apps use monkey patching in settings.py.  I must skim the (great) Django documentation again, but I think beginners should know best common practices earlier.", "group_id": 81, "id": 194954}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298516405.763768, "message": "My \"dream\" is that some apps can simply be dropped into an existing project.  For example, that you simple add Pootle to your INSTALLED_APPS and it uses your site_base.html and auth system.", "group_id": 81, "id": 194973}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298516277.5419171, "message": "There are also several levels of reusability. When I hear \"reusable apps\" I think \"for the public\" -- but there are also apps meant to be reused internally within an organization that builds more than one site, and the sites share some functionality. Apps meant for that level of reuse can assume a lot more, including possibly template structure.", "group_id": 81, "id": 194966}, {"user_id": 212, "stars": [], "topic_id": 8558, "date_created": 1298516493.6895959, "message": "there is a start here: http://readthedocs.org/docs/django-reusable-app-docs/en/latest/index.html", "group_id": 81, "id": 194979}, {"user_id": 212, "stars": [], "topic_id": 8558, "date_created": 1298516909.352061, "message": "(source is here: http://github.com/ericholscher/django-reusable-app-docs)", "group_id": 81, "id": 194990}, {"user_id": 209, "stars": [], "topic_id": 8558, "date_created": 1298518310.7817659, "message": "@bronger django-shop does a nice job of being a reusable app IMO, no templates, but has examples, only extendable content models, and decent idea of being pluggable.  That's also what I hope for servee to be.", "group_id": 81, "id": 195019}, {"user_id": 1822, "stars": [], "topic_id": 8558, "date_created": 1298520379.5807869, "message": "Is there going to be any more progress on the GSOC work on app as a class?", "group_id": 81, "id": 195142}, {"user_id": 214, "stars": [], "topic_id": 8558, "date_created": 1298525461.2689459, "message": "@ptone It's planned for merge in the 1.4 timeframe. So yes.", "group_id": 81, "id": 195542}, {"user_id": 1126, "stars": [], "topic_id": 8558, "date_created": 1298563845.2536709, "message": "plug-and-play full template files are almost never going to work", "group_id": 81, "id": 198676}, {"user_id": 1126, "stars": [], "topic_id": 8558, "date_created": 1298563824.98615, "message": "the only templates that you *should* be shipping with a reusable app are examples of displaying and manipulating your data from views or w/e", "group_id": 81, "id": 198675}, {"user_id": 521, "stars": [], "topic_id": 8558, "date_created": 1298577492.7029221, "message": "I've even been doing less and less views in my reusable apps", "group_id": 81, "id": 201344}, {"user_id": 521, "stars": [], "topic_id": 8558, "date_created": 1298577470.1361639, "message": "agreed", "group_id": 81, "id": 201338}, {"user_id": 9650, "stars": [], "topic_id": 8558, "date_created": 1298581763.4737861, "message": "Why not drop the models, too?  ;-)  Seriously: I think there is nothing bad about full-fedged templates bundled with an app.  If done right, the \"high-level\" templates (site_base.html, base.html) can easily be overridden, and the rest is still used and fits well into the general appearance of the site.  However, this only works with well-defined semantics of e.g. site_base.html (in particular, its blocks).", "group_id": 81, "id": 202153}, {"user_id": 1736, "stars": [], "topic_id": 8558, "date_created": 1298595258.6192141, "message": "@jmoiron With stuff like comments, some sample templates can greatly accelerate prototyping even if they don't match the style of anything else.", "group_id": 81, "id": 204588}, {"user_id": 14923, "stars": [{"date_created": 1298733992.3224499, "user_id": 521}], "topic_id": 8558, "date_created": 1298593782.0052619, "message": "put too many hooks and conventions and the like into a reusable app, and you lose the 'usable' from reusable.  if you're going to provide some templates, you have to define a space and then own it (like sentry, or contrib.admin);  it's difficult to have drop-in \"widgets\" that don't suffer integration friction (comments app suffers from this, and others)", "group_id": 81, "id": 204427}, {"user_id": 7, "stars": [], "topic_id": 8558, "date_created": 1298711773.302366, "message": "so does using related_name=\"profile\", and so does using related_name=\"profile\"", "group_id": 81, "id": 213399}, {"user_id": 553, "stars": [], "topic_id": 8558, "date_created": 1298711670.8792191, "message": "ah i got it, you're talking about the case where there are more than one profile", "group_id": 81, "id": 213393}, {"user_id": 1736, "stars": [], "topic_id": 8558, "date_created": 1298712406.796978, "message": "@dmishe o2o related endpoints are cached on the model, so as long as you use the same user model (presumably request.user) then yes. As for that issue, pluggable apps can't expect to control the profile model entirely, so having a common interface doesn't help that much for their own data (it does still help for being able to display the user profile and whatnot).", "group_id": 81, "id": 213430}, {"user_id": 553, "stars": [], "topic_id": 8558, "date_created": 1298711555.9121649, "message": "why is get_profile bad? it offers common interface and internal caching", "group_id": 81, "id": 213391}, {"user_id": 7, "stars": [], "topic_id": 8558, "date_created": 1298711773.7401111, "message": "so does using related_name=\"profile\", and so does using related_name=\"profile\"", "group_id": 81, "id": 213400}, {"user_id": 553, "stars": [], "topic_id": 8558, "date_created": 1298711965.2832179, "message": "wait, so o2o will be cached and queried only once during whole request/response ?", "group_id": 81, "id": 213416}, {"user_id": 1736, "stars": [], "topic_id": 8558, "date_created": 1298712428.7040501, "message": "@dmishe get_profile() is also cached in the same way FWIW", "group_id": 81, "id": 213431}, {"user_id": 553, "stars": [], "topic_id": 8558, "date_created": 1298712469.236656, "message": "hm interesting", "group_id": 81, "id": 213432}, {"user_id": 553, "stars": [], "topic_id": 8558, "date_created": 1298712718.277837, "message": "that raises a question, can you invalidate that cache? e.g. you have request.user.some_profile.some_field", "group_id": 81, "id": 213436}, {"user_id": 553, "stars": [], "topic_id": 8558, "date_created": 1298712741.2201099, "message": "if you change some_field model (it's FK) some_profile won't get the update and so the data is old", "group_id": 81, "id": 213437}, {"user_id": 1822, "stars": [], "topic_id": 8558, "date_created": 1298735275.011595, "message": "@alex seems to have morphed into some maxheadroom like bot... :)", "group_id": 81, "id": 214449}]