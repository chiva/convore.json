[{"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306324288.401089, "message": "i need to build a \"platform\" with many web apps (app1.example.com, app2.example.com), but i need that users sign in with the same username (SSO) and that their profiles are the same on app1 and app2", "group_id": 81, "id": 1176855}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306324381.211724, "message": "i looked at https://github.com/easel/django-shared-auth/ and i think i'm going to use a third service (auth.example.com) to authenticate against the DB or facebook or twitter (with django-social-auth)", "group_id": 81, "id": 1176876}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306324456.1445479, "message": "now i need to share users' profiles. A REST with django-piston? Too slow?", "group_id": 81, "id": 1176898}, {"user_id": 32294, "stars": [], "topic_id": 36721, "date_created": 1306327545.316426, "message": "I would build a centralized login and profilemanagement, \ntake a look at\n python-openid, django-openid-auth, django-guardian, django_openid_provider and django-userena.", "group_id": 81, "id": 1177211}, {"user_id": 32294, "stars": [], "topic_id": 36721, "date_created": 1306327647.296474, "message": "a kind of chained openid_provider, and the real services use a openid backend for authentication that points to your sso component", "group_id": 81, "id": 1177226}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306328376.184058, "message": "isn't openid overkill? my consumers are trusted", "group_id": 81, "id": 1177348}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306331335.659256, "message": "@penkin: seems like django-cas-* only supports authentication. I also need to share user profile data. For example name and surname should be shared on the two apps (but also structured data, like lists, or photos)", "group_id": 81, "id": 1178153}, {"user_id": 13817, "stars": [], "topic_id": 36721, "date_created": 1306330943.2536671, "message": "You can also have a look at https://github.com/zuber/django-cas-provider and https://github.com/Nitron/django-cas-consumer", "group_id": 81, "id": 1178012}, {"user_id": 33202, "stars": [], "topic_id": 36721, "date_created": 1306342172.046174, "message": "I think using piston is reasonable... presumably these other apps will be in the same data center (same server?) so the requests will come back very fast.", "group_id": 81, "id": 1180697}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306347247.014154, "message": "so it's not crazy to do a syncronous internal HTTP request within a view, right? I think we'll need a lot to cache profiles (and to invalidate) on appN.example.com", "group_id": 81, "id": 1181796}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306347036.74575, "message": "@Jiaaro: you're right. Different virtual machines on the same physical server", "group_id": 81, "id": 1181763}, {"user_id": 31418, "stars": [], "topic_id": 36721, "date_created": 1306358146.7728159, "message": "what about doing some magic on User with django's multi-db support? I think it should be possible to monkey-patch User and set .using for the queries...", "group_id": 81, "id": 1184423}, {"user_id": 1736, "stars": [], "topic_id": 36721, "date_created": 1306361254.331491, "message": "@vad Not crazy per se, but make sure you put a tight timeout on it and deal with all possible failure modes.", "group_id": 81, "id": 1184717}, {"user_id": 32294, "stars": [], "topic_id": 36721, "date_created": 1306366257.368968, "message": "We decided to use open ID, as it is possible to have a centralized login/logout/registration/profilemanagement and through ax, or sreg, an profile data push to the apps at every login. so after the login, every app can run on its own. Everything is nicely seperated and easy MAINTAINABLE", "group_id": 81, "id": 1185529}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306394697.4774179, "message": "@dgerzo it's not maintainable, we don't want to deploy every appN when we just change one.", "group_id": 81, "id": 1189531}, {"user_id": 1982, "stars": [], "topic_id": 36721, "date_created": 1306396452.7617259, "message": "@vad if you are making multiple http requests, you'll probably want to have keep-alive enabled. you may also want to look into other transport/serializations libraries eg: thrift, protocol buffers, msg pack.", "group_id": 81, "id": 1189811}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306405319.5517659, "message": "@andrewwatts: is there something embeddable in django (almost) out-of-the-box?", "group_id": 81, "id": 1190724}, {"user_id": 1982, "stars": [], "topic_id": 36721, "date_created": 1306422339.4537921, "message": "@vad: not that I'm aware of but it sounds like you're headed towards a custom solution, and if performance is a concern you may want to look at alternatives to http and json.  I am currently working on a custom auth backend for django using thrift, however in this case the authenticating service is written in ruby and very customized.  We discussed http, but decided we didnt want to incur the overhead.  But, we're also going to be using thrift for a lot more than auth.", "group_id": 81, "id": 1192855}, {"user_id": 22109, "stars": [{"date_created": 1306483144.0140409, "user_id": 2116}], "topic_id": 36721, "date_created": 1306463597.274477, "message": "Just use a centralized database with a custom router.", "group_id": 81, "id": 1199204}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306523709.5949631, "message": "@andrewwatts: can you give me some info about the transport layer? i like protocol buffers but i don't think they have a \"standard\" transport layer. ZeroMQ is cool, but low level. ZeroC's Ice seems a good solution. Is thrift simple enough?", "group_id": 81, "id": 1208075}, {"user_id": 19532, "stars": [], "topic_id": 36721, "date_created": 1306523411.212914, "message": "@crisisking simple solution, but hard to maintain", "group_id": 81, "id": 1208053}, {"user_id": 22109, "stars": [], "topic_id": 36721, "date_created": 1306535409.0979619, "message": "It sounds like whatever it is you're going to do is going to be complex and hard to maintain because of that. Better to simplify when you can IMHO.", "group_id": 81, "id": 1209542}, {"user_id": 37532, "stars": [], "topic_id": 36721, "date_created": 1309887171.9529669, "message": "hello", "group_id": 81, "id": 1569060}, {"user_id": 37532, "stars": [], "topic_id": 36721, "date_created": 1309888910.9771791, "message": "Can someone help me find a sample django project implementing multi-db", "group_id": 81, "id": 1569233}]