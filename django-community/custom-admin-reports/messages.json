[{"user_id": 11827, "stars": [], "topic_id": 42565, "date_created": 1311496916.692086, "message": "I love the Django admin interface. However, it is very hard to extend. I need a dead simple option for showing the result of a query for my admin users. I can describe my query as a model query set. I just need the ability to add it as a page to the admin interface with as little coding as possible. Any ideas?", "group_id": 81, "id": 1709285}, {"user_id": 27890, "stars": [], "topic_id": 42565, "date_created": 1311513098.112803, "message": "Instead you could re-register the model with a custom ModelAdmin that defines your custom view. You'll need to subclass the model (with \"Meta: proxy=True\" because django admin does not allow registering the same model twice)). All you'd need to override is get_queryset on your ModelAdmin and provide a custom template for the changelist_view.", "group_id": 81, "id": 1709727}, {"user_id": 27890, "stars": [], "topic_id": 42565, "date_created": 1311513230.904685, "message": "If you're interested I can provide an example once I get back to my workstation. Code examples are a bit tedious to enter on a mobile phone ;-)", "group_id": 81, "id": 1709735}, {"user_id": 27890, "stars": [], "topic_id": 42565, "date_created": 1311512884.429306, "message": "You could just link any custom url and extend one of the admin templates. But you'd have to mind providing the correct context (for the breadcrumbs and stuff).", "group_id": 81, "id": 1709719}, {"user_id": 1822, "stars": [{"date_created": 1311661601.8819361, "user_id": 23352}], "topic_id": 42565, "date_created": 1311520015.3396389, "message": "a couple apps that might be helpful: https://github.com/bkonkle/django-reporter  https://github.com/bradleyayers/django-tables2", "group_id": 81, "id": 1710016}, {"user_id": 11827, "stars": [], "topic_id": 42565, "date_created": 1311532806.914454, "message": "@ptone thanks for that. Both look interesting.", "group_id": 81, "id": 1710734}, {"user_id": 11827, "stars": [], "topic_id": 42565, "date_created": 1311532618.076622, "message": "@stefanfoulis thanks. I was not familiar with the Meta: proxy=True option. However, it all sounds very tedious. If the query has custom values (like aggregation) you need to create the fields in the model.", "group_id": 81, "id": 1710728}, {"user_id": 213, "stars": [{"date_created": 1311597032.489203, "user_id": 15988}, {"date_created": 1311661597.6924729, "user_id": 23352}], "topic_id": 42565, "date_created": 1311584622.895694, "message": "I think http://versae.github.com/qbe/ or http://pypi.python.org/pypi/django-autoreports/ might be useful.", "group_id": 81, "id": 1714341}, {"user_id": 14679, "stars": [], "topic_id": 42565, "date_created": 1311599931.1529281, "message": "I typically create an \"admintools\" app in every django project I work on, and put custom admin-only stuff in there. Then I link to it from the admin home page by providing a custom admin/index.html template.", "group_id": 81, "id": 1715116}, {"user_id": 960, "stars": [], "topic_id": 42565, "date_created": 1311733435.1793089, "message": "License gnome warning: qbe is AGPL, so if you were to run a query generated by it, you're pretty much AGPL code now.  Not an issue for internal apps, but could be an issue if you plan on distributing them.  It's too bad, cause it looks really cool.", "group_id": 81, "id": 1728185}, {"user_id": 8391, "stars": [{"date_created": 1311744728.27281, "user_id": 23352}], "topic_id": 42565, "date_created": 1311744019.4379711, "message": "django-tablib is awesome for generating xls/csv/json/etc from query sets for reporting purposes: http://pypi.python.org/pypi/django-tablib", "group_id": 81, "id": 1728977}, {"user_id": 35281, "stars": [], "topic_id": 42565, "date_created": 1311761698.664016, "message": "@shimon sounds interesting. Can you share some in depth about it. I will try into my site as well.", "group_id": 81, "id": 1730044}]