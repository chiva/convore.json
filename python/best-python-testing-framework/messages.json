[{"user_id": 33200, "stars": [], "topic_id": 41200, "date_created": 1309892106.2509639, "message": "I wondered what is considered the best testing framework for python in the general sense. Which one would be the best in most of the cases. Or even which one is your favorite.", "group_id": 292, "id": 1569488}, {"user_id": 32144, "stars": [], "topic_id": 41200, "date_created": 1309932279.3074341, "message": "I'm relatively new to python as well, but when I did some research a while back I decided that Nose was probably the best framework available. YMMV. You may also want to check the Python IRC channel.", "group_id": 292, "id": 1573558}, {"user_id": 6704, "stars": [{"date_created": 1310050226.9848299, "user_id": 1243}], "topic_id": 41200, "date_created": 1309955362.450238, "message": "\u2026 and if you do decide that \"nose\" or \"py.test\" has a cool feature you can't live without (like nose's ability to re-run the last failing test automatically over and over again until you've fixed it), then you still might want to think about laying out your tests so that \"unittest discover\" can find and run them too \u2014 so that you're not locked into one way of doing things, but will have choices going forward.", "group_id": 292, "id": 1575019}, {"user_id": 6704, "stars": [{"date_created": 1310061627.113265, "user_id": 20326}], "topic_id": 41200, "date_created": 1309955281.503648, "message": "I think the largest reason for the popularity of frameworks like \"nose\" and \"py.test\" is auto-discovery, which as of 2.7 is now something that comes built-in to Python: you can run \"python -m unittest discover my.module\" and it will find all of the tests as long as you stick to very simple rules in how you lay out your module. If you are using Python <2.7, then you can \"pip install unittest2\" which is the old prototype for the 2.7 \"unittest\" module, and provides a \"unit2\" command-line tool that acts just like the new \"unittest discover\".", "group_id": 292, "id": 1575006}, {"user_id": 13403, "stars": [{"date_created": 1317016189.5679059, "user_id": 23707}], "topic_id": 41200, "date_created": 1309965630.8929231, "message": "Another reason for nose\u2019s popularity is the plugin support, making it much easier, for instance, to generate JUnit-style XML reports for Hudson, or to check code coverage, or to mark certain tests as skipped.", "group_id": 292, "id": 1576199}, {"user_id": 33200, "stars": [], "topic_id": 41200, "date_created": 1309967007.910496, "message": "But from what I understand nose is only a test running utility. Its not a framework itself, don't know if I'm wrong here. From what I've seen and read online is kind of a 'make' for running tests. Please correct if wrong.", "group_id": 292, "id": 1576331}, {"user_id": 7376, "stars": [], "topic_id": 41200, "date_created": 1309969567.8984151, "message": "I like nose for two reasons, the --pdb, --pdb-failure flags and the --coverage flag.", "group_id": 292, "id": 1576735}, {"user_id": 7376, "stars": [{"date_created": 1310025678.4860711, "user_id": 26925}], "topic_id": 41200, "date_created": 1309969776.070534, "message": "@joanbarros The python unittest module is a good enough standard solution.  doctests are tempting but in practice they're limited.  Prior to 2.7 you basically had to write your own test runner if your tests spanned multiple modules.  That's one of the main reasons why nose is popular.", "group_id": 292, "id": 1576764}, {"user_id": 2435, "stars": [], "topic_id": 41200, "date_created": 1310056397.5769949, "message": "I vouch for py.test, its ability to have brutally descriptive comparisons in asserts, parallel test execution and simplicity have been very rewarding to use.", "group_id": 292, "id": 1585466}, {"user_id": 2435, "stars": [], "topic_id": 41200, "date_created": 1310056453.8995521, "message": "Now, I am not sure if I would call it a \"framework\". But it does offer a whole load of functionality that is impressive. I would at least give it a try: http://doc.pytest.org/en/latest/", "group_id": 292, "id": 1585475}, {"user_id": 2435, "stars": [{"date_created": 1315055076.287329, "user_id": 5778}], "topic_id": 41200, "date_created": 1310056643.3340089, "message": "I also wrote a DSL Testing Framework called Konira: http://konira.cafepais.com and I think its syntax (although a DSL) is way more terse and easy to get started than using plain old UnitTest.", "group_id": 292, "id": 1585491}, {"user_id": 32520, "stars": [], "topic_id": 41200, "date_created": 1310311185.5128109, "message": "@alfredodeza I really liked Konira ...very nice ..congrats", "group_id": 292, "id": 1604844}, {"user_id": 5388, "stars": [], "topic_id": 41200, "date_created": 1314264502.6403, "message": "@alfredodeza Konira looks like the testing tool I've been dreaming about!", "group_id": 292, "id": 1957290}, {"user_id": 36872, "stars": [], "topic_id": 41200, "date_created": 1315300682.945575, "message": "Hi", "group_id": 292, "id": 2058152}, {"user_id": 25864, "stars": [], "topic_id": 41200, "date_created": 1317839878.5540049, "message": "I like trial. It supports returning Twisted deferreds from unit tests, I mostly understand what it is going to do, and it is well-maintained.", "group_id": 292, "id": 2286257}, {"user_id": 38714, "stars": [], "topic_id": 41200, "date_created": 1318882725.5026951, "message": "how does Trial work with non-Twisted projects?", "group_id": 292, "id": 2370175}, {"user_id": 19460, "stars": [], "topic_id": 41200, "date_created": 1318918849.562782, "message": "@timClicks - Trial works great with non-Twisted projects. Test discovery, nicely formatted (and extensible) report output, coverage, profiling, pdb integration...worth taking a look. http://twistedmatrix.com/trac/wiki/TwistedTrial", "group_id": 292, "id": 2374511}, {"user_id": 11972, "stars": [], "topic_id": 41200, "date_created": 1318955652.0705061, "message": "@alfredodeza awesome framework! I'm starting to use it!", "group_id": 292, "id": 2377321}]