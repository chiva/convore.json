[{"user_id": 29746, "stars": [], "topic_id": 47828, "date_created": 1321369138.7620111, "message": "with the purpose being to map out a \"runlist\" as used in the FAT filesystem", "group_id": 292, "id": 2578296}, {"user_id": 29746, "stars": [], "topic_id": 47828, "date_created": 1321368930.730248, "message": "I'm seeking advice on ways to implement a program that will take two files, one being a regular file like an jpeg, and the other being an image file, like maybe an unknown filesystem image. With these files the program tries to find the fragments of the first file in the larger file.", "group_id": 292, "id": 2578277}, {"user_id": 29746, "stars": [], "topic_id": 47828, "date_created": 1321369079.476846, "message": "My idea so far is a greedy type algorithm that will look for a minimum number of bytes of the first file and once found in the big file it will keep matching bytes til they differ. In other words acquire the first largest chunk it can find, it will then keep scanning the entire big file to try and find the largest first chunk it can. After it has found the largest chunk, it will move on and find the next largest chunk of the main file in the second file til it has found all chunks of the first file.", "group_id": 292, "id": 2578287}]