[{"user_id": 24302, "stars": [], "topic_id": 14803, "date_created": 1300918507.8601611, "message": "Though to be fair, I'm tempted to ask what it is you're actually trying to accomplish.", "group_id": 292, "id": 421348}, {"user_id": 141, "stars": [], "topic_id": 14803, "date_created": 1300918063.7603149, "message": "no, if you have a dependency between two modules you should make it explicit by referring to the other module.", "group_id": 292, "id": 421319}, {"user_id": 24302, "stars": [], "topic_id": 14803, "date_created": 1300918447.0338869, "message": "Most definitely not.", "group_id": 292, "id": 421344}, {"user_id": 20326, "stars": [{"date_created": 1300980443.6897621, "user_id": 12791}, {"date_created": 1300988833.8053069, "user_id": 141}], "topic_id": 14803, "date_created": 1300974301.9469359, "message": "Certainly not. Using __builtin__ is bad for this because it's implicit\u2014it's not clear what you're doing\u2014and because it uses global state. Global state makes programs less testable, less flexible, less cooperative, less clear, and less modular.", "group_id": 292, "id": 426707}, {"user_id": 3354, "stars": [{"date_created": 1301121111.2713039, "user_id": 141}, {"date_created": 1301188552.8806009, "user_id": 20326}], "topic_id": 14803, "date_created": 1301116690.181169, "message": "Just leave __builtin__ for the built-in stuff, right?", "group_id": 292, "id": 444877}, {"user_id": 24439, "stars": [{"date_created": 1301121109.5172601, "user_id": 141}], "topic_id": 14803, "date_created": 1301116993.0683141, "message": "If you want to use a module to share data between other modules, then you can use any module, it doesn't have to be __builtin__, since all modules are global in Python :( Ideally, you would avoid doing something like that entirely, but if you feel you have to do it, then rather use a module you created than __builtin__.", "group_id": 292, "id": 444914}, {"user_id": 20326, "stars": [], "topic_id": 14803, "date_created": 1301188590.738287, "message": "You can also use another object which you explicitly pass rather than using a module to share it implicitly, globally.", "group_id": 292, "id": 448902}]