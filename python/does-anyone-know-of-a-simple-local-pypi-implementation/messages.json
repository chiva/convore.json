[{"user_id": 3997, "stars": [], "topic_id": 8676, "date_created": 1298530416.2262869, "message": "chishop++", "group_id": 292, "id": 195842}, {"user_id": 6543, "stars": [], "topic_id": 8676, "date_created": 1298528364.636831, "message": "http://pypi.python.org/pypi/basketweaver/0.1.3-r0 just generates static files from a directory of eggs", "group_id": 292, "id": 195746}, {"user_id": 9229, "stars": [], "topic_id": 8676, "date_created": 1298527946.612797, "message": "Just something that can hold a small subset of the packages and may be used by a local install tool (buildout, pip, ...) Manually updated, so it's always using known versions of packages. The whole thing could be static on disk served by Apache. There's a bunch of \"local PyPI\" projects that all seem keen to implement way more than would just be needed for a simple local cache usable by buildout...", "group_id": 292, "id": 195727}, {"user_id": 1736, "stars": [], "topic_id": 8676, "date_created": 1298528165.322973, "message": "We use Chishop at work for local package handling.", "group_id": 292, "id": 195740}, {"user_id": 1736, "stars": [], "topic_id": 8676, "date_created": 1298528097.7454121, "message": "I think eggbasket is a pretty common tool for that case.", "group_id": 292, "id": 195737}, {"user_id": 9229, "stars": [], "topic_id": 8676, "date_created": 1298533147.1456621, "message": "Chishop is way too heavy for this purpose. Basketweaver looks ideal, thanks @chrismcdonough !", "group_id": 292, "id": 195898}, {"user_id": 14957, "stars": [], "topic_id": 8676, "date_created": 1298534291.731776, "message": "How do you cross post to buzz?", "group_id": 292, "id": 195969}, {"user_id": 14957, "stars": [], "topic_id": 8676, "date_created": 1298534509.033922, "message": "Anyway, at work we use pip requirements files which specify the exact versions of packages required. For the tools/packages which the build system uses, the build system verifies that the packages being used match the build requirements file. The standard tests include tests which verify the packages being used match those in the runtime pip requirements file. Everything should be run under a virtualenv which pulls in the packages from the requirements files. Works quite well, and means that there is no maintainance headache of having to update a local PyPi with new or new versions of packages. Just update the requirements files.", "group_id": 292, "id": 195976}, {"user_id": 14957, "stars": [], "topic_id": 8676, "date_created": 1298535421.113961, "message": "Almost forgot, when we make a release or a rollout to the private grid (not  directly connected to the internet) we package up the virtualenv with the packages. We are still setting up buildbot for nightly builds, but the initial workspace setup (we have a custom wrapper around Perforce) pulls the update from the SCM and updates the local virtualenv if the pip requirements files have changed. This does require writing a custom SCM hook, but it is not that hard (says the person whom has yet to get it fully working).", "group_id": 292, "id": 196016}, {"user_id": 5367, "stars": [], "topic_id": 8676, "date_created": 1298544062.5783689, "message": "@r1chardj0n3s Can you elaborate on the use case? I was thinking about something like this for deployments as a default package repository with fallback to pypi (or the other way around I am still not sure on how I 'd like to handle this but I 'm sure I 'll need it)", "group_id": 292, "id": 196630}, {"user_id": 2435, "stars": [], "topic_id": 8676, "date_created": 1298553373.6682301, "message": "I recently had to implement a 'private' PyPI solution and was overwhelmed by suggestions that were not documented or not maintained. So I started one based on a small framework. The biggest issues is that most of the PyPI 'gotchas' are also *not* documented. For example, did you know that if your private PyPI is at http://example.com:8000/simple it will not work for installers? It *has* to run at port 80.", "group_id": 292, "id": 197386}, {"user_id": 2435, "stars": [], "topic_id": 8676, "date_created": 1298553526.598063, "message": "Another reason I had to roll my own was that we didn't need a complete PyPI mirror, but rather a combination of 2 things: local/private packages and dependencies of those packages. So my current implementation workflow is a bit like this: you request FOO but the repo doesn't have it: it redirects you to the public PyPI but in turn spawns a thread to grab all of FOO's versions. Next time, if you request FOO, you get FOO :) As a user, you never see a \"package not found\" because it is all handled with redirects.", "group_id": 292, "id": 197406}, {"user_id": 5639, "stars": [], "topic_id": 8676, "date_created": 1298554481.446707, "message": "I'm actually working on a project to do this in a way that's easy to deploy & maintain. Some working prototype code is here: https://github.com/bkjones/MinistryOfPackages", "group_id": 292, "id": 197467}, {"user_id": 5639, "stars": [], "topic_id": 8676, "date_created": 1298554499.036829, "message": "see the readme at the bottom. I try to keep it updated as I make progress.", "group_id": 292, "id": 197469}, {"user_id": 5639, "stars": [], "topic_id": 8676, "date_created": 1298555026.8641391, "message": "btw, I'd love to see forks of MoP and collaboration. There should be enough there to see the general direction, but a lot of the actual code is 'prototype' so don't be overly critical. There are one or two places where things get slightly messy. Nothing disastrous though :)", "group_id": 292, "id": 197508}, {"user_id": 5981, "stars": [], "topic_id": 8676, "date_created": 1298555889.804378, "message": "I'm yet to be in a situation where I needed a full on index implementation (ie, people can \"push\" dists to the index). Usually what ends up happening is we use a lighttpd instance with directory listings turned on. Folks with access to the server scp dists they build (or ones they depend on from the outside world). In our pip requirements, we use -f to direct it to search our local host, rather than the usual indexes. Same thing works with setuptools/easy_install.", "group_id": 292, "id": 197563}, {"user_id": 1963, "stars": [], "topic_id": 8676, "date_created": 1298565777.033179, "message": "@jonesy Looks awesome. Good luck!", "group_id": 292, "id": 199015}, {"user_id": 5694, "stars": [], "topic_id": 8676, "date_created": 1298566438.119499, "message": "My project runs like @theomn describes, but we haven't even found a need for an HTTP server. -f and similar flags accept file:/// urls to a directory of archives without issues.", "group_id": 292, "id": 199099}, {"user_id": 5694, "stars": [], "topic_id": 8676, "date_created": 1298566504.268095, "message": "Developers rsync the mix of private/public packages to their local box, which has a nice side effect of allowing disconnected virtualenv creation and bootstrapping.", "group_id": 292, "id": 199109}, {"user_id": 5694, "stars": [], "topic_id": 8676, "date_created": 1298566554.3366311, "message": "We explicitly do *not* allow fallback to pypi, we prefer to peg all requirements and don't like unpegged dependencies slipping in unseen.", "group_id": 292, "id": 199111}, {"user_id": 141, "stars": [], "topic_id": 8676, "date_created": 1298573430.846422, "message": "our main use case was letting Jenkins bootstrap new virtualenvs for the project without the internet, so it worked for that.", "group_id": 292, "id": 200266}, {"user_id": 141, "stars": [], "topic_id": 8676, "date_created": 1298573384.6961851, "message": "i had a good experience at my last place using Apache with automatic indexes, though that requires you place the source dist packages in the filesystem instead of using the toolchain to upload them.", "group_id": 292, "id": 200256}, {"user_id": 9229, "stars": [], "topic_id": 8676, "date_created": 1298588247.0166991, "message": "@alfredodeza you're describing my use-case :-)", "group_id": 292, "id": 203331}, {"user_id": 2435, "stars": [], "topic_id": 8676, "date_created": 1298671817.6123769, "message": "@r1chardj0n3s if you are really interested I might push the project to GitHub :) It is currently using a not-yet release webframework though...", "group_id": 292, "id": 211755}, {"user_id": 9229, "stars": [], "topic_id": 8676, "date_created": 1298850354.962682, "message": "@alfredodeza hmm, it requires a web framework? that sounds more complicated than what I need, which should be able to be handled entirely statically, with a command-line script to maintain the static contents.", "group_id": 292, "id": 222633}, {"user_id": 11592, "stars": [], "topic_id": 8676, "date_created": 1298873491.3966179, "message": "I've used collective.eggproxy recently. It's a fine caching proxy, but not without some usability warts.", "group_id": 292, "id": 223801}, {"user_id": 2435, "stars": [], "topic_id": 8676, "date_created": 1298905461.154201, "message": "@r1chardj0n3s well, we are completely distributed so file-based doesn't cut it for us :(", "group_id": 292, "id": 226068}]