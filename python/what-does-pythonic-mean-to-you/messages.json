[{"user_id": 4748, "stars": [{"date_created": 1305870921.076854, "user_id": 4156}, {"date_created": 1306135126.8763349, "user_id": 33915}, {"date_created": 1307108644.758487, "user_id": 4858}], "topic_id": 36052, "date_created": 1305869781.272089, "message": "Less code.", "group_id": 292, "id": 1120913}, {"user_id": 31883, "stars": [{"date_created": 1306143990.5429931, "user_id": 22200}], "topic_id": 36052, "date_created": 1305870156.753022, "message": "\"follows the zen of python\"", "group_id": 292, "id": 1120992}, {"user_id": 4156, "stars": [], "topic_id": 36052, "date_created": 1305871011.8278451, "message": "It's those solutions which are both simple/compact, and elegantly powerful, that define Pythonic to me", "group_id": 292, "id": 1121105}, {"user_id": 4156, "stars": [], "topic_id": 36052, "date_created": 1305870980.1928279, "message": "Corollary to @offby1: minimum possible code, while not sacrificing much (ideally any) power/flexibility. Anybody can write subroutines to save you work; ensuring they remain useful for power users can be a lot harder.", "group_id": 292, "id": 1121103}, {"user_id": 8291, "stars": [], "topic_id": 36052, "date_created": 1305899446.4617679, "message": "Pragmatic yet powerful", "group_id": 292, "id": 1125713}, {"user_id": 31561, "stars": [{"date_created": 1306101966.398685, "user_id": 12817}], "topic_id": 36052, "date_created": 1305900701.072216, "message": "Code that is flexible, readable, elegant, and makes use of the ideal python features to complete the task at hand.", "group_id": 292, "id": 1126018}, {"user_id": 33421, "stars": [{"date_created": 1305959643.3005581, "user_id": 11592}], "topic_id": 36052, "date_created": 1305900971.966316, "message": "being able to do something in 1 line instead of 12 but still maintaining legibility!", "group_id": 292, "id": 1126056}, {"user_id": 33745, "stars": [{"date_created": 1305907247.4248841, "user_id": 13893}, {"date_created": 1305959626.0041599, "user_id": 11592}, {"date_created": 1307012454.288033, "user_id": 5942}], "topic_id": 36052, "date_created": 1305906653.433908, "message": "The word Pythonic is Greek in origin and basically means prophetic. So to me I think it means the future", "group_id": 292, "id": 1127172}, {"user_id": 29716, "stars": [], "topic_id": 36052, "date_created": 1306040112.270591, "message": "Being pleasantly surprised 95% of the time and learning painlessly from the other 5%.", "group_id": 292, "id": 1139967}, {"user_id": 6543, "stars": [{"date_created": 1306076227.1892149, "user_id": 12404}, {"date_created": 1306082080.9610541, "user_id": 18972}, {"date_created": 1306085802.156306, "user_id": 960}, {"date_created": 1306640134.4434249, "user_id": 31790}, {"date_created": 1306831459.948602, "user_id": 6892}], "topic_id": 36052, "date_created": 1306042070.8674569, "message": "adjective used in arguments against code people were going to rewrite anyway", "group_id": 292, "id": 1140091}, {"user_id": 18665, "stars": [], "topic_id": 36052, "date_created": 1306053427.1514881, "message": "Looking at a piece of code with wonderful feeling of \"that couldn't be any better or more simple\".", "group_id": 292, "id": 1140486}, {"user_id": 5280, "stars": [], "topic_id": 36052, "date_created": 1306100670.2016661, "message": "elegant, but not at the expense of pragmatism", "group_id": 292, "id": 1144433}, {"user_id": 11421, "stars": [{"date_created": 1307035938.5219719, "user_id": 33300}], "topic_id": 36052, "date_created": 1307014890.291538, "message": "pythonic means: `del reg32['HKLM']['Software']['BonziBuddy']` instead of `hive = reg32.OpenHive('HKLM'); key = hive.GetKey('Software'); key.DeleteSubKey('BonziBuddy')`", "group_id": 292, "id": 1265616}]