[{"user_id": 942, "stars": [{"date_created": 1299515759.9420791, "user_id": 11369}], "topic_id": 9913, "date_created": 1299032571.9823141, "message": "Trying Backbone.js for a variety of app styles. Thinking of an application that sends user-submitted data to an API, results are returned and stored in a set of Collections, but they are never stored server-side nor are they modified (they can't be, in this case), so the idea of Backbone.Model is almost useless .. Should one be using Backbone.js in a scenario like this? Are the other features beneficial enough if you're not using Backbone.Model?", "group_id": 160, "id": 242583}, {"user_id": 17210, "stars": [], "topic_id": 9913, "date_created": 1299034263.59513, "message": "I'd say depends on what you are doing with the data. Sounds like you would mostly be utilizing the underscore methods on collections. So backbone.js would give you all the glue between the collection and view.", "group_id": 160, "id": 242752}, {"user_id": 3210, "stars": [], "topic_id": 9913, "date_created": 1299101678.3868201, "message": "I think it's worth it for the view organization/convention alone.", "group_id": 160, "id": 253396}, {"user_id": 18757, "stars": [], "topic_id": 9913, "date_created": 1299258002.6494131, "message": "I think Backbone.js is useful of you are developing a web app that has a feature to save data online and offline. Creating google chome web app will be the best example of using Backbone.js.", "group_id": 160, "id": 271225}, {"user_id": 6648, "stars": [], "topic_id": 9913, "date_created": 1299500132.3838971, "message": "If you aren't using a client-side model to store the data then you are basically using the DOM as your model. In this way you can think of something like backbone as extracting the model from the view related code.", "group_id": 160, "id": 287116}, {"user_id": 6648, "stars": [], "topic_id": 9913, "date_created": 1299500023.4406159, "message": "If the data you are getting from the server and/or user are always viewed and interacted with in one and only one way then it may be easier to store the data in the DOM. For example, if you find yourself watching many different buttons and events to then update data in many places it may be easier to have a dedicated model.", "group_id": 160, "id": 287111}, {"user_id": 15929, "stars": [], "topic_id": 9913, "date_created": 1299506071.185884, "message": "wow, super interesting, thanks for sharing this...", "group_id": 160, "id": 287596}, {"user_id": 15929, "stars": [], "topic_id": 9913, "date_created": 1299506326.1477079, "message": "and how well does backbone sync handle offline updates / deletes?", "group_id": 160, "id": 287617}, {"user_id": 15929, "stars": [], "topic_id": 9913, "date_created": 1299506263.063931, "message": "after a quick search around, seems like there's a way to marry backbone and node, although most tutorial makes the connection through socket.io... how does it handle authentication then?", "group_id": 160, "id": 287610}, {"user_id": 8708, "stars": [], "topic_id": 9913, "date_created": 1299585980.8436029, "message": "There is no direct support for offline/sync. One possible way is to overwrite Backbone.sync to support caching.", "group_id": 160, "id": 295643}, {"user_id": 3795, "stars": [], "topic_id": 9913, "date_created": 1299715127.244252, "message": "I have to agree with using Backbone even just for the conventions and structure. If you're not used to organizing your code in a similar way, Backbone is a great place to start.", "group_id": 160, "id": 309439}, {"user_id": 4935, "stars": [], "topic_id": 9913, "date_created": 1299715908.689997, "message": "yeah, it's a pretty sweet way to organize your code. It hasn't caught on like jQuery plugins, though, so someone who's trying to write a popular piece of reusable jQuery code might be wise to go with a jQuery plugin", "group_id": 160, "id": 309501}]