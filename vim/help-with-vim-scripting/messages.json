[{"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298533246.577044, "message": "Hi everyone, I need some help with a bit of vim scripting", "group_id": 100, "id": 195902}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298533274.1016231, "message": "I'm pretty new to vim and vimscript", "group_id": 100, "id": 195903}, {"user_id": 14024, "stars": [], "topic_id": 8706, "date_created": 1298533435.739486, "message": "You should then go ahead and ask your question so people can take a look and see if they can help you with your problem.", "group_id": 100, "id": 195906}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298533655.6071751, "message": "What I'm trying to do is have a \"while\" loop that gets input from the user, and performs the actions.", "group_id": 100, "id": 195918}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298533701.1288979, "message": "For example, I want a while loop that simply reads the user input. If the user presses \"j\", it moves the cursor down. If the user presses \"k\", it moves the cursor up. If the user presses \"dd\", it deletes a line. etc.", "group_id": 100, "id": 195923}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298533733.0721891, "message": "let char = nr2char(getchar())\n\twhile char =~ '^\\w$'\n\t\texecute \"normal \". char\n\t\tlet char = nr2char(getchar())\n\tendwhile", "group_id": 100, "id": 195927}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298533766.6104879, "message": "^^^ That's sample code of something that works for the basic movements (\"j\", \"k\") but breaks for things like \"dd\"", "group_id": 100, "id": 195932}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554484.718493, "message": "however, you would still need to know if it is a visual, normal or insert mode", "group_id": 100, "id": 197468}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554515.9493999, "message": "mmmmn but you still need to know what to map that to", "group_id": 100, "id": 197470}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298555273.98418, "message": "I wouldn't use such a feature, I prefer to harness the power of macros and repeat my stuff exactly where I know it is going to happen. Having multiple cursors can get very confusing, although I do not talk from experience", "group_id": 100, "id": 197523}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554331.1861169, "message": "This is something I discovered in Sublime Text, and it's an *amazing* feature, one that makes me *much* more productive", "group_id": 100, "id": 197457}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554030.231802, "message": "i.e. if someone presses \"dd\", then it performs that action, but also does something else", "group_id": 100, "id": 197428}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554301.3340111, "message": "I want to implement \"multiple-cursor\" support in vim. That means, you can have an arbitrary number of completely indepedent cursors, anywhere in your file. Each one performs the actions you do, at the same time.", "group_id": 100, "id": 197448}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554089.4670219, "message": "ahh ok, I see, you got me confused there for a second. Well that is even easier! You just need to map 'dd' to a function that performs your action and then deletes the line :)", "group_id": 100, "id": 197430}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554234.309113, "message": "can you give a use case for such a thing (mind blown)", "group_id": 100, "id": 197443}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298555081.777916, "message": "http://wolever.net/~wolever/wiki/vim-logging", "group_id": 100, "id": 197510}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298553987.969686, "message": "the problem is, I want every mapping that exists to work the same as it already does, but to also perform another action", "group_id": 100, "id": 197424}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554260.612293, "message": "sure, I'll give you my use case. I just didn't want to get into too many details earlier", "group_id": 100, "id": 197446}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554382.5870349, "message": "So to implement this, I'd like to keep around a list of cursor positions, then do the while loop, and for every action the user takes, make that action happen for each cursor (by literally moving the cursor, then perform the user action). But this breaks for things like \"dd\".", "group_id": 100, "id": 197464}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298555312.7865579, "message": "I didn't get why they're good either, but after using them in Sublime for a few days, I completely changed my mind", "group_id": 100, "id": 197524}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298555079.3053801, "message": "ok, found a guy that implemented a logging script that records all actions made", "group_id": 100, "id": 197509}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554179.8544209, "message": "yes, but I want this to work for everything, not just \"dd\". I don't want to remap *every* key, especially since I can't know ahead of time what mappings a user might have done on his own", "group_id": 100, "id": 197436}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554409.2983029, "message": "Any thoughts on how I can do this?", "group_id": 100, "id": 197465}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554558.311166, "message": "yeah I'm trying to avoid the mapping and find a clever, generic \"trick\" solution", "group_id": 100, "id": 197471}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554565.499758, "message": "otherwise, no idea how to do this", "group_id": 100, "id": 197472}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298555183.041496, "message": "But am I crazy. or does this require a new vim .exe?", "group_id": 100, "id": 197521}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298555362.048285, "message": "say you have two \"if\" statements which look almost the same (happens all the time in real code). You just select the first if, issue a command which creates a new cursor, then start editing. Both will be edited at the same time", "group_id": 100, "id": 197530}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298553912.9518089, "message": "I wouldn't do it with a while loop, but rather with mappings. VIM already handles your use case (e.g. if you press mapped key 1 do this, but mapped key 2 do that). If your intention is a plugin, your mappings could be set locally for the plugin itself.", "group_id": 100, "id": 197420}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298553960.5627711, "message": "The other thing that I couldn't tell from your examples is if you are talking about Insert, Normal or Visual mode. Again, VIM mappings are most certainly the way to go here.", "group_id": 100, "id": 197422}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554155.2466431, "message": "For example: function! MyDDFunc() echo \"dd being pressed!\" | execute 'normal dd' endfunction", "group_id": 100, "id": 197434}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554465.7432921, "message": "ok, so my example above would still work if you pass in the executed key combination as a function argument", "group_id": 100, "id": 197466}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298554605.3937089, "message": "here's another thought: is there a way to check if a key has a continuation? I.e., if I could check whether after pressing \"d\", vim is waiting for more input, then I could capture that input myself", "group_id": 100, "id": 197473}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298554852.9647939, "message": "not that I am aware of", "group_id": 100, "id": 197497}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298555110.6573911, "message": "I think that would help you out :)", "group_id": 100, "id": 197512}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298555421.1835899, "message": "and because you see things as they happen, you don't make any mistakes like you do in macros (forgetting to go bacfk to the beginning of a row, etc.).\nIt's just like macros, only it works better 99% of the time.\nthat's been my experience", "group_id": 100, "id": 197534}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298555103.6682119, "message": "the cool thing is that he displays if it is NORMAL or VISUAL or whatever", "group_id": 100, "id": 197511}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298555166.974051, "message": "ooh", "group_id": 100, "id": 197519}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298555167.367877, "message": "very nice", "group_id": 100, "id": 197520}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298557287.935297, "message": "If you have a repo and need some help I'm in.", "group_id": 100, "id": 197809}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298557211.897337, "message": "AHHHHHHHHHHHHHHHHHHH! That looks frigging cool", "group_id": 100, "id": 197802}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557221.9924331, "message": "it is", "group_id": 100, "id": 197803}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557241.6931789, "message": "and I've added a few plugins to Sublime that make it even cooler", "group_id": 100, "id": 197806}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298557267.539923, "message": "ok, I'm sold. But let's stop adding to Sublime and start adding to VIM :)", "group_id": 100, "id": 197808}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298557020.4103451, "message": "but if you create a new cursor you need to then jump to the other position right? this might be ok for 2 cursors but for 2> it might be confusing. Again, this might be just me :)", "group_id": 100, "id": 197783}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557112.538537, "message": "take a look at the docs here: http://sublime.akalias.net/gettingstarted/concepts-multiple-selections.html", "group_id": 100, "id": 197792}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557123.4521711, "message": "especially the screencast at the end.", "group_id": 100, "id": 197793}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557131.473249, "message": "trust me, it works like a charm in real life", "group_id": 100, "id": 197795}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557292.1132519, "message": "exactly, I want this in vim! imagine the power of multi-select, together with the power of commands like \"f\" etc", "group_id": 100, "id": 197811}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298557322.38184, "message": "no, i'm just getting started with the idea really\nand I really want to implement this is a vim plugin, and not as a separate release of vim", "group_id": 100, "id": 197812}, {"user_id": 2125, "stars": [], "topic_id": 8706, "date_created": 1298626658.1089599, "message": "In case you don't know, you can make simple edits to multiple lines at once with the visual block mode (help v_b_I, v_b_A), and use most movement commands in this mode.", "group_id": 100, "id": 206833}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298640236.7125261, "message": "but that only works if all the lines you want are in the same block. You can't do that if say, the lines are spaced out, or if you need one block 10 lines up and another one 10 lines down.", "group_id": 100, "id": 207742}, {"user_id": 9242, "stars": [], "topic_id": 8706, "date_created": 1298655409.5654249, "message": "Doing this real time would very likely give you a headache considering with every action the screen could potentially jump as many times as you have cursors since the cursor in vim must be on screen at all times.", "group_id": 100, "id": 209874}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298664882.5410731, "message": "not necessarily.... I think he could do with extra hidden buffers of the same file, not necessarily have all the cursors be on the same buffer", "group_id": 100, "id": 211039}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298887550.674613, "message": "@rson I really don't have anything better to tell you than I tried it out for myself and it's not confusing at all. It's just a better way to work.", "group_id": 100, "id": 224693}, {"user_id": 3409, "stars": [], "topic_id": 8706, "date_created": 1298887477.7284589, "message": "@etienne I do know about it, but it's incredibly limited compared to true mulit-cursor. For example, if I want to do things to columns that have words with variable lengths, I can't. Not to mention the columns have to be next to each other, like alfredodeza mentioned.", "group_id": 100, "id": 224689}, {"user_id": 9242, "stars": [], "topic_id": 8706, "date_created": 1298906052.052067, "message": "@alfredodeza, yes I know what you're talkign about, but I've never attempted to write a script that modified a copy of the current file in a hidden buffer.  It would be interesting nonetheless.", "group_id": 100, "id": 226118}, {"user_id": 2435, "stars": [], "topic_id": 8706, "date_created": 1298905940.7340069, "message": "@rson you can actually try it :) Open FileA and then open split windows (same buffer). You can see that what you edit on one, propagates to the other ones. A vim plugin can handle that seamlessly", "group_id": 100, "id": 226108}, {"user_id": 9242, "stars": [], "topic_id": 8706, "date_created": 1298905785.7729819, "message": "@edanm I wasn't saying that the specific workflow would be confusing, but the implementation in vim itself could cause problems unless what @alfredodeza said is true.", "group_id": 100, "id": 226097}]