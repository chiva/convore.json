[{"user_id": 2887, "stars": [], "topic_id": 37339, "date_created": 1306720580.6259511, "message": "Enjoy folks. :)", "group_id": 100, "id": 1222919}, {"user_id": 2887, "stars": [], "topic_id": 37339, "date_created": 1306720578.474081, "message": "Also, if you have a common-source folder (e.g. global Python lib folder) you can also add it to this line.\n\nSee `:help tags-option` for more info.", "group_id": 100, "id": 1222918}, {"user_id": 2887, "stars": [{"date_created": 1306737369.25512, "user_id": 16058}, {"date_created": 1307282412.6208739, "user_id": 3885}, {"date_created": 1308843198.6497409, "user_id": 4130}], "topic_id": 37339, "date_created": 1306720410.179188, "message": "Finally got this working.\n\nIn short, you can use `ctags` to recursively generate tag lists.\n\n1. Go to the project's root folder.\n2. Execute `ctags -R` -- This will generate a `tags` file with tags for all source files in your project.\n3. Add this line to your `.vimrc`: `set tags=./tags;/`\n4. PROFIT.", "group_id": 100, "id": 1222879}, {"user_id": 2887, "stars": [], "topic_id": 37339, "date_created": 1306720516.6162159, "message": "The line added to your .vimrc tells Vim to first search for the tags file in the current working file's directory (in case it was already created, this isn't the global/project tag file), and after wards work it's way up the directory tree until it finds the tags file.", "group_id": 100, "id": 1222903}, {"user_id": 2887, "stars": [{"date_created": 1308843196.4290731, "user_id": 4130}], "topic_id": 37339, "date_created": 1306720813.3096211, "message": "Oh yeah, one more thing. If you want to update the global `tags` file, you can use the AutoTag plugin. It'll take care of it. https://github.com/vim-scripts/AutoTag", "group_id": 100, "id": 1222959}, {"user_id": 2887, "stars": [{"date_created": 1306737375.391439, "user_id": 16058}], "topic_id": 37339, "date_created": 1306723012.3491311, "message": "From here on you can just use `g]` to jump-to-defnition. In case of multiple matches, a list will be shown on screen and ask which defintion you would like to see.\n\nYou can also use `ctrl-]` to jump to the first match.\n\nSee `:help ctrl-]` for more info.", "group_id": 100, "id": 1223282}, {"user_id": 31883, "stars": [], "topic_id": 37339, "date_created": 1306747210.281611, "message": "@OryBand use += instead of =, e.g. set tags+=./tags;,$HOME/.cache/tags", "group_id": 100, "id": 1225580}, {"user_id": 30256, "stars": [], "topic_id": 37339, "date_created": 1306892074.0112081, "message": "The tags file generated for my project is big (around 75 MB). The AutoTag plugin ignores any tags file bigger than 7MB. I guess I could: a) Fork AutoTag, increase the max size, and see if it's not too slow; b) Create separate tags files for each subproject (but that would limit my ability to jump around); c) Give up on using AutoTag. Any suggestions?", "group_id": 100, "id": 1245836}, {"user_id": 31883, "stars": [], "topic_id": 37339, "date_created": 1306895936.3730431, "message": "how separate are your subprojects? you can use multiple tags files, and, of course, regenerating a single subproject's tags won't take as long as for all of them", "group_id": 100, "id": 1246453}, {"user_id": 30256, "stars": [], "topic_id": 37339, "date_created": 1306938351.7384379, "message": "They're not very separate, most of them depend on a couple of them. It just makes more sense to have them as subprojects for packaging and reuse. I'll try and use some '--exclude' patterns when generating the tags, it shouldn't be this big.", "group_id": 100, "id": 1253629}, {"user_id": 30256, "stars": [{"date_created": 1308843176.491082, "user_id": 4130}], "topic_id": 37339, "date_created": 1306954330.454675, "message": "I've found a solution! Apparently ctags doesn't like minified JavaScript. Running 'ctags --exclude=*.min.js -R' reduces the size of my tags file for the whole project from 75 MB to 1.8 MB. I'm surprised, it's almost 98% smaller, and I only have like 850KB of minified JavaScript.", "group_id": 100, "id": 1256712}, {"user_id": 31883, "stars": [], "topic_id": 37339, "date_created": 1307034249.2448001, "message": "nice! maybe the minifier you're using creates a ton of unique identifiers? \"only 850KB\" of *minified* JS does sound significant", "group_id": 100, "id": 1268745}, {"user_id": 30256, "stars": [], "topic_id": 37339, "date_created": 1307051581.549412, "message": "hehe \"only 850KB\" in comparison to the 75MB generated by ctags. It's definitely something I dislike but that's a rant for another place (maybe I'll add a group 'UX teams that (mis)use JS instead of CSS').", "group_id": 100, "id": 1272013}]