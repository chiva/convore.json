[{"user_id": 1398, "stars": [], "topic_id": 13794, "date_created": 1300464028.0377879, "message": "http://packaginator.readthedocs.org/en/latest/contributing.html", "group_id": 7079, "id": 383068}, {"user_id": 22480, "stars": [], "topic_id": 13794, "date_created": 1300643762.294179, "message": "Hi all :) Small question: I'm doing the i18n stuff.. if I see some error in the html, do i correct it ?? in templates/grid/add_grid_package.html there's a <h2>....<h2> (no closing).. Just wanted the know the rules for that :)", "group_id": 7079, "id": 392974}, {"user_id": 1822, "stars": [], "topic_id": 13794, "date_created": 1300645459.8424571, "message": "just create a different branch for that, and submit it seperately", "group_id": 7079, "id": 393046}, {"user_id": 19677, "stars": [], "topic_id": 13794, "date_created": 1302993015.034888, "message": "GitHub noob question: I still have an outdated fork of https://github.com/djangopackages/djangopackages, with a pending pull request (needs more testing)... Should I delete this and fork from packaginator instead? (GitHub only allows one related fork, it seems). Or rebase? Or...?", "group_id": 7079, "id": 713721}, {"user_id": 1398, "stars": [], "topic_id": 13794, "date_created": 1303000974.9949479, "message": "I would fork from Packaginator. Django Packages is way off what is going on now in Packaginator.", "group_id": 7079, "id": 714184}, {"user_id": 1398, "stars": [], "topic_id": 13794, "date_created": 1303001009.8131499, "message": "Hope that helps @jimallman", "group_id": 7079, "id": 714187}, {"user_id": 19677, "stars": [], "topic_id": 13794, "date_created": 1303006831.4876871, "message": "thanks @pydanny! will do..", "group_id": 7079, "id": 714908}, {"user_id": 9896, "stars": [], "topic_id": 13794, "date_created": 1303078607.8385799, "message": "@pydanny why did you fork djangopackages instead of asking github to move/rename the package?", "group_id": 7079, "id": 719045}, {"user_id": 9896, "stars": [], "topic_id": 13794, "date_created": 1303078554.5094471, "message": "@jimallman you can also chose alternative targets in pull requests, but that's probably more annoying than re-forking", "group_id": 7079, "id": 719027}, {"user_id": 1398, "stars": [], "topic_id": 13794, "date_created": 1303086075.66223, "message": "Cause it was in the middle of PyCon, late in the night, and we didn't think to ask. :P", "group_id": 7079, "id": 719875}, {"user_id": 9896, "stars": [], "topic_id": 13794, "date_created": 1303123072.1372089, "message": "@pydanny good point ;-)", "group_id": 7079, "id": 724848}, {"user_id": 3354, "stars": [], "topic_id": 13794, "date_created": 1303127870.3064909, "message": "[slightly OT] I find my total uselessness with git and github limits my ability to contribute. Anyone know of online classes that would help with visual examples and the like?", "group_id": 7079, "id": 725421}, {"user_id": 19677, "stars": [], "topic_id": 13794, "date_created": 1303129845.2622199, "message": "@pydanny FYI, I'm up and running now, with both old and new code. I'm sorting out the browser craziness now, should have stuff to commit Real Soon Now:\nhttps://github.com/cartwheelweb/packaginator/issues/156", "group_id": 7079, "id": 725618}, {"user_id": 19677, "stars": [], "topic_id": 13794, "date_created": 1303130225.525696, "message": "@holdenweb: FWIW, the How to Contribute page for Packaginator seems very thorough. It's a demanding process for a beginner, but protects the core folks from drowing in chaos:\nhttp://readthedocs.org/docs/packaginator/en/latest/contributing.html", "group_id": 7079, "id": 725665}, {"user_id": 19677, "stars": [], "topic_id": 13794, "date_created": 1303130147.128047, "message": "@holdenweb: I'm still learning the dance too, mostly by trial and error. GitHub has an interesting social model. As I understand it, its forks are a sort of overlay on \"vanilla\" git cloning, a social convention that helps people to collaborate at arms length (via pull requests), without having to trust just anyone with commit privileges.", "group_id": 7079, "id": 725655}, {"user_id": 1398, "stars": [], "topic_id": 13794, "date_created": 1303137639.7447901, "message": "@holdenweb, @jmallman - I've got this plan to really ramp up my git-fu a bit more, then teach classes.", "group_id": 7079, "id": 726725}, {"user_id": 3354, "stars": [], "topic_id": 13794, "date_created": 1303185359.38938, "message": "Teachme Git?", "group_id": 7079, "id": 736477}, {"user_id": 1398, "stars": [], "topic_id": 13794, "date_created": 1303190561.6563771, "message": "Sure1", "group_id": 7079, "id": 738351}, {"user_id": 19677, "stars": [], "topic_id": 13794, "date_created": 1303214774.176445, "message": "@holdenweb: here's a short piece I found (WARNING: perl-ish) on managing a project with GitHub. Talks about the routine of reviewing GitHub pull requests, approval/commenting process, and how things look from the \"core\" team's point of view:\nhttp://lumberjaph.net/dancer/2011/03/06/how_to_use_github_effectively_for_your_project.html", "group_id": 7079, "id": 740008}, {"user_id": 15773, "stars": [], "topic_id": 13794, "date_created": 1303248011.7801521, "message": "@pydanny I'd add to the rules - all new templates must support i18n, or else it will be harder to keep track of what has been i18n'd and what was not", "group_id": 7079, "id": 747390}, {"user_id": 15773, "stars": [], "topic_id": 13794, "date_created": 1303253392.104295, "message": "@holdenweb this tutorial page is pretty good http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html", "group_id": 7079, "id": 748340}, {"user_id": 15773, "stars": [], "topic_id": 13794, "date_created": 1303253722.7018709, "message": "probably \"making changes\", \"managing branches\" and \"collaboration\" sections are most useful, also \"git status\" is a handy command. There is a small subset that will be more than enough in the beginning. One should remember to use \"git mv\" when renaming files and directories.", "group_id": 7079, "id": 748399}]