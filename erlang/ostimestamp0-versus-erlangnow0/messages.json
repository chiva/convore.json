[{"user_id": 32, "stars": [], "topic_id": 490, "date_created": 1290405272.6976299, "message": "blup", "group_id": 21, "id": 12013}, {"user_id": 242, "stars": [], "topic_id": 490, "date_created": 1296683935.9084499, "message": "In my informal testing the difference was negligible.", "group_id": 21, "id": 43015}, {"user_id": 507, "stars": [], "topic_id": 490, "date_created": 1297292390.8225069, "message": "Does os:timestamp/0 have the same monotonicity guarantee?", "group_id": 21, "id": 59671}, {"user_id": 507, "stars": [], "topic_id": 490, "date_created": 1297292423.0023301, "message": "Noper, that's the diff: \"The difference is that this function returns what the operating system thinks (a.k.a. the wall clock time) without any attempts at time correction. The result of two different calls to this function is not guaranteed to be different.\"", "group_id": 21, "id": 59674}, {"user_id": 242, "stars": [], "topic_id": 490, "date_created": 1297296108.516165, "message": "Correct.  Interestingly in my tests it didn't seem to be any faster.  Also interesting it's really really hard to call now() fast enough to cause significant skew.", "group_id": 21, "id": 60791}, {"user_id": 19202, "stars": [], "topic_id": 490, "date_created": 1299456157.0573919, "message": "The now() thing can happen if you have more than one CPU I guess, but single-CPU it is probably quite hard to impossible", "group_id": 21, "id": 282464}]