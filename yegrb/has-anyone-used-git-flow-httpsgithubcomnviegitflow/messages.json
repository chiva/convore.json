[{"user_id": 13919, "stars": [], "topic_id": 14970, "date_created": 1300980400.5835049, "message": "I've been trying to use this git workflow, http://nvie.com/posts/a-successful-git-branching-model/, in my new projects and git-flow was recommended as a way to do that.", "group_id": 4606, "id": 427737}, {"user_id": 21846, "stars": [], "topic_id": 14970, "date_created": 1300982303.296808, "message": "But we don't tag versions with that product.. the points of code which are merged in to production are considered to have been tested and stable (we do rapid production deployment, a minimum of three-five deployments a week)", "group_id": 4606, "id": 428074}, {"user_id": 21846, "stars": [], "topic_id": 14970, "date_created": 1300982214.4077561, "message": "I haven't used that exact setup. Our team (for our mainline product) utilizes a master and production branch, with feature branches used for local testing or team-driven feature development.", "group_id": 4606, "id": 428051}, {"user_id": 14826, "stars": [], "topic_id": 14970, "date_created": 1300997825.438076, "message": "My team has been using the nvie model for projects but hasn't jumped into git-flow yet.  git-flow is really just a bunch of shortcuts for common git commands.", "group_id": 4606, "id": 430574}, {"user_id": 14826, "stars": [], "topic_id": 14970, "date_created": 1300997928.123316, "message": "@MarkBennett How big is your dev team and how much ceremony is in your deployment process?  (i.e. UAT, sign-offs, etc.).  While the nvie system works, it creates a lot of branches and makes everything more complicated.", "group_id": 4606, "id": 430593}, {"user_id": 21844, "stars": [], "topic_id": 14970, "date_created": 1301022554.3067479, "message": "I've been using it for my latest rails project at work (coding solo, mind you) and so far I'm liking it. @mm53bar is right, they are just shell scripts around convention and if I have a criticism it's that the current project is way under documented. For example, after publishing a feature, how to delete the remote branch on finish? Use the -F flag for fetching before merge (WTF?). However, the code isn't too cryptic and I'm learning even more about git this way so it's been positive so far", "group_id": 4606, "id": 434659}, {"user_id": 21844, "stars": [], "topic_id": 14970, "date_created": 1301022881.621568, "message": "@MarkBennett if you're interested I've been adding some common initial clone rake tasks that get fired off `rake init' and I have one to ensure git flow is set up so you don't forget on a second/third system https://gist.github.com/886306", "group_id": 4606, "id": 434733}, {"user_id": 14826, "stars": [], "topic_id": 14970, "date_created": 1301060695.609035, "message": "FYI - this is the way I prefer to work with git:  http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html", "group_id": 4606, "id": 438383}, {"user_id": 14826, "stars": [], "topic_id": 14970, "date_created": 1301060774.9253831, "message": "On a greenfield project, I definitely use the reinh methods.  It's only once the product is live and support becomes a concern that I would switch to the nvie model.", "group_id": 4606, "id": 438395}]