[{"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303239987.7211399, "message": "Also clojure with compojure of course.", "group_id": 95, "id": 745329}, {"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303240013.436486, "message": "Which will be the easiest to deploy", "group_id": 95, "id": 745336}, {"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303240269.7138901, "message": "I didn't found any todolist tutorial using an db agnostic system. Is this exists for some framework?", "group_id": 95, "id": 745389}, {"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303240149.9875209, "message": "Also which will be easy using template done from html5boilerplate? I mean, I want to create a standard HTML file and use it as template without rewriting it in the functional language.", "group_id": 95, "id": 745369}, {"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303239927.324353, "message": "Any recommendation? I looked at ark, snap and dragonfly.", "group_id": 95, "id": 745316}, {"user_id": 719, "stars": [], "topic_id": 20385, "date_created": 1303243152.3409581, "message": "@yogsototh YMMV but there's a tutorial for a ToDo app using the Lift Framework (Scala). (http://www.assembla.com/wiki/show/liftweb/Todo_Sample_Application) for which there is a port using the persistence agnostic \"Record\" layer (https://github.com/ghostm/lift-todo-mongodb) \n\nIf you try it out and get stuck at any point you could probably give me a shout.", "group_id": 95, "id": 746054}, {"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303278727.039804, "message": "Thanks! I'll do it today.", "group_id": 95, "id": 752442}, {"user_id": 4935, "stars": [], "topic_id": 20385, "date_created": 1303346929.745002, "message": "Functional Programming Went Mainstream Years Ago http://prog21.dadgum.com/31.html", "group_id": 95, "id": 763541}, {"user_id": 719, "stars": [], "topic_id": 20385, "date_created": 1303349538.4111919, "message": "@bat Do you write Haskell?", "group_id": 95, "id": 764049}, {"user_id": 4935, "stars": [], "topic_id": 20385, "date_created": 1303354392.30708, "message": "@micrypt no. I try to make the most of functional programming in popular multi-paradigm programming languages rather than spending all my time in elite languages", "group_id": 95, "id": 764941}, {"user_id": 719, "stars": [], "topic_id": 20385, "date_created": 1303356471.67484, "message": "@bat Fair enough. If you did, I doubt you'd share the sentiments discussed in that piece though.", "group_id": 95, "id": 765157}, {"user_id": 15141, "stars": [], "topic_id": 20385, "date_created": 1303451411.231771, "message": "@bat interesting reading. From my point of view, the purity of Haskell is a way of telling a compiler to parallelize argument evaluation. Which will necessarily end in _far_ better performance while having most advantages of recent languages such as Python and Ruby.", "group_id": 95, "id": 779300}]