[{"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284417.5776379, "message": "yeah, mustache.rb just uses a stack", "group_id": 591, "id": 55603}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284664.908438, "message": "first agibralter and then pvande", "group_id": 591, "id": 55809}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284651.02472, "message": "it's in the wrong order here :S", "group_id": 591, "id": 55791}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284692.774395, "message": "nevermind. I totally missed pvande's first message\u2026", "group_id": 591, "id": 55822}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284750.6509399, "message": "@pvande besides the stack issue and... performance... what else is wrong with mustache.js", "group_id": 591, "id": 55851}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284220.605263, "message": "@defunkt (and everybody else): now that Mustache has been used/implemented everywhere, what do we think about it?", "group_id": 591, "id": 55455}, {"user_id": 2008, "stars": [], "topic_id": 2393, "date_created": 1297284489.85797, "message": "would be nice if mustache allowed you to do {{^variable}} in addition to {{#variable}}, but perhaps that would be too much logic", "group_id": 591, "id": 55676}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284749.358922, "message": "@agibralter mustache.rb used the \"context as a hash, merge new variables\" first, but switches to using a stack", "group_id": 591, "id": 55850}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284252.5271089, "message": "I must agree I really like the Handlebars changes", "group_id": 591, "id": 55470}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284320.3966489, "message": "link to handlebars changes: http://yehudakatz.com/2010/09/09/announcing-handlebars-js/", "group_id": 591, "id": 55510}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284325.833514, "message": "@agibralter bubbling issues?", "group_id": 591, "id": 55517}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284470.157342, "message": "so `{{#list}}` compiles to `list.each { |t| stack.push(t) }`", "group_id": 591, "id": 55657}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284643.358341, "message": "gah, who posted first of you two?", "group_id": 591, "id": 55786}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284399.1075721, "message": "and I forked mustache.js to implement that change", "group_id": 591, "id": 55578}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284406.7121861, "message": "handlebars gives you paths....", "group_id": 591, "id": 55585}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1297284307.8013201, "message": "I've only ever used it on ruby, with sinatra", "group_id": 591, "id": 55503}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284390.1940949, "message": "basically in Ruby's implementation of mustache you can access the current scope and any scope above the current one", "group_id": 591, "id": 55566}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284595.4440689, "message": "@pvande true -- and mustache.js master currently doesn't... my fork does, but it's quite hacky how it does it", "group_id": 591, "id": 55754}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284276.6923959, "message": "hmm", "group_id": 591, "id": 55485}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284478.2603271, "message": "yeah", "group_id": 591, "id": 55666}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284324.862659, "message": "a lot of what handlebars.js has done is fixed scoping issues", "group_id": 591, "id": 55515}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284564.839262, "message": "The Mustache spec indicates that lookups should resolve against a stack.", "group_id": 591, "id": 55739}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284301.2530029, "message": "@judofyr we never resolved the bubbling issues in mustache.js", "group_id": 591, "id": 55499}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284364.790684, "message": "https://github.com/janl/mustache.js/issues#issue/68", "group_id": 591, "id": 55540}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284487.71245, "message": "I like that", "group_id": 591, "id": 55674}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284844.9307029, "message": "@agibralter The way it parses out sections means that it handles delimiter changes poorly, and delimiter changes have been proposed for termination at least a few times.", "group_id": 591, "id": 55904}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285010.759321, "message": "i.e. I wrote a JIT on top of mustache.rb: https://github.com/judofyr/handlebars (I picked the name before wycats btw)", "group_id": 591, "id": 55972}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284603.057425, "message": "@pgmcgee Do you mean e.g. \"{{#var}}True{{^var}}False{{/var}}\"?", "group_id": 591, "id": 55757}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284530.2266181, "message": "what do you mean?", "group_id": 591, "id": 55708}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284536.5273581, "message": "it already does that, no?", "group_id": 591, "id": 55716}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284644.4956779, "message": "@agibralter Mustache.js unfortunately falls down on a number of fronts...", "group_id": 591, "id": 55787}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284776.3353629, "message": "@agibralter I'd be interested in knowing if Milk (https://github.com/pvande/Milk) actually works for your situation; it's in CoffeeScript, but there's a JS version in the gh-pages branch.", "group_id": 591, "id": 55863}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284943.1872089, "message": "@joshpeek Good work on that, by the way!", "group_id": 591, "id": 55942}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297284852.914664, "message": "@pvande ah interesting, I'll try to give it a shot -- what's its interface? Milk.render()?", "group_id": 591, "id": 55908}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297284891.5072119, "message": "If you're interested in other JS implementations, I'm working on a pure JS mustache compiler: https://github.com/josh/mustache-trimmer", "group_id": 591, "id": 55924}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297284908.0195351, "message": "@agibralter Yeah, if I recall correctly it's Milk.render(template, data, partials).", "group_id": 591, "id": 55933}, {"user_id": 2008, "stars": [], "topic_id": 2393, "date_created": 1297285159.7569311, "message": "@pvande Basically, yep", "group_id": 591, "id": 56056}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297284973.8775151, "message": "@joshpeek nice! I like how splitting up the parser and compiler makes it possible to do cool things like that", "group_id": 591, "id": 55956}, {"user_id": 2275, "stars": [], "topic_id": 2393, "date_created": 1297284974.4762869, "message": "@joshpeek that is handy, fast?", "group_id": 591, "id": 55957}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297285016.8746381, "message": "@judofyr yep, nice work on that parser", "group_id": 591, "id": 55973}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297285081.3479819, "message": "hah nice", "group_id": 591, "id": 56003}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297285225.5032611, "message": "So, general question, which implementations are people using?", "group_id": 591, "id": 56099}, {"user_id": 2008, "stars": [], "topic_id": 2393, "date_created": 1297285243.003567, "message": "mustache.js", "group_id": 591, "id": 56115}, {"user_id": 2275, "stars": [], "topic_id": 2393, "date_created": 1297285426.861505, "message": "w/ backbone.js on client and rails on server", "group_id": 591, "id": 56251}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297285449.270987, "message": "we use mustache.rb", "group_id": 591, "id": 56270}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285511.918519, "message": "or {{ createdAt | date }}", "group_id": 591, "id": 56316}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285274.095787, "message": "I'm not using Mustache in any server-side projects actually\u2026", "group_id": 591, "id": 56139}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285544.2202971, "message": "block helpers as in Handlebars.js", "group_id": 591, "id": 56344}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297286105.9976881, "message": "@agibralter You mean https://github.com/mustache/spec ?", "group_id": 591, "id": 56637}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286706.8537569, "message": "well that's where we disagree :)", "group_id": 591, "id": 56976}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286796.4187329, "message": "@judofyr hmm I'm not understanding what your input is and what your desired output is", "group_id": 591, "id": 57028}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287037.4994969, "message": "I think it's a genius way to achieve what @defunkt is talking about -- removing ruby from the template", "group_id": 591, "id": 57111}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287066.4111719, "message": "@judofyr It _should_ never change the real model.", "group_id": 591, "id": 57119}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285252.663805, "message": "Handlebars.js", "group_id": 591, "id": 56125}, {"user_id": 2275, "stars": [{"date_created": 1297365517.317631, "user_id": 4935}], "topic_id": 2393, "date_created": 1297285414.5566771, "message": "mustache.js & mustache.rb simultaneously", "group_id": 591, "id": 56244}, {"user_id": 2275, "stars": [], "topic_id": 2393, "date_created": 1297285533.8696411, "message": "where do you put your mustache classes", "group_id": 591, "id": 56337}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297285581.8738351, "message": "@judofyr The Mustache equivalent would be to have a lambda, `money`, and use \"{{#money}}{{price}}{{/money}}...", "group_id": 591, "id": 56373}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285584.055258, "message": "we actually \"emulate\" filters by using Handlebars' helpers now: {{#money price}}", "group_id": 591, "id": 56376}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285773.8145511, "message": "@pvande yeah, and that's pretty ugly. no offence, but there *is* such a thing as too many mustaches.", "group_id": 591, "id": 56469}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297285902.3570721, "message": "so everyone comes in and tries to rewrite their .html.erb files in mustache", "group_id": 591, "id": 56536}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286421.2931211, "message": "@judofyr in the View", "group_id": 591, "id": 56828}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1297285308.9171619, "message": "mustache.rb fo me", "group_id": 591, "id": 56162}, {"user_id": 2201, "stars": [], "topic_id": 2393, "date_created": 1297285463.245858, "message": "@loe awesome! i was just going to ask about using mustache on the client and server (specifically backbone)", "group_id": 591, "id": 56283}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286587.4897389, "message": "I really don't see the problem with {{ startTime | date }} or something like it", "group_id": 591, "id": 56918}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286726.050756, "message": "yes: I want to present startTime as a date", "group_id": 591, "id": 56989}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286900.4957111, "message": "because that's what *everybody* agrees on. it's stable.", "group_id": 591, "id": 57068}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286916.4809239, "message": "@defunkt sure, I'm replying to @agibralter", "group_id": 591, "id": 57074}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297285633.2737939, "message": "@judofyr I don't think mustache.rb gives you a particularly easy way at getting at the rendered value, though...  So, implementation dependent.", "group_id": 591, "id": 56391}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297285387.9068601, "message": "I'm using my fork of mustache.js with context bubbling: https://github.com/agibralter/mustache.js", "group_id": 591, "id": 56216}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285468.2151401, "message": "I wish Mustache had block helpers and filters (like in Liquid)", "group_id": 591, "id": 56287}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297285480.4969151, "message": "@judofyr Example?", "group_id": 591, "id": 56297}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297285493.561245, "message": "{{ price | money }}", "group_id": 591, "id": 56306}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297285403.458987, "message": "err: https://github.com/agibralter/mustache.js/tree/context_bubbling", "group_id": 591, "id": 56238}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297285467.7206841, "message": "+1 @loe", "group_id": 591, "id": 56285}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1297285819.216538, "message": "*covers the ears of Tom Selleck*", "group_id": 591, "id": 56488}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297285905.0021141, "message": "it doesn't work", "group_id": 591, "id": 56539}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286441.4624729, "message": "the whole point is to stop putting awkward faux-programming code into HTML", "group_id": 591, "id": 56844}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297285913.391587, "message": "and then they add features to mustache so they can port .html.erb to mustache", "group_id": 591, "id": 56542}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286368.2747669, "message": "@defunkt so how would you format a Time object in Mustache?", "group_id": 591, "id": 56796}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286545.3142841, "message": "for all three?", "group_id": 591, "id": 56902}, {"user_id": 2275, "stars": [], "topic_id": 2393, "date_created": 1297285513.167721, "message": "for people using mustache.rb w/ rails, do you just subclass in your helper?", "group_id": 591, "id": 56318}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286860.7206359, "message": "this is not really related to code; everyone on the project needs to agree what a user is", "group_id": 591, "id": 57049}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286189.4203229, "message": "spammers already", "group_id": 591, "id": 56672}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286546.4895949, "message": "or: {{#collection_of_objects}}{{#object}}{{startTime}} {{endTime}}...{{/object}}{{/collection_of_objects}}", "group_id": 591, "id": 56904}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287384.2194281, "message": "in order for the template language to be simple, it requires the intermediate layer... if you want a more complicated template language, why not just go back to haml/erb", "group_id": 591, "id": 57332}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287802.696377, "message": "@agibralter great, another layer :)", "group_id": 591, "id": 57651}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287946.30022, "message": "@agibralter it's just that by implementing filters, all my problems fades away and I don't need to write any more code", "group_id": 591, "id": 57752}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297285786.0959029, "message": "@judofyr Not gonna argue.", "group_id": 591, "id": 56471}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297285893.4436359, "message": "the problem with mustache is there's no HOWTO", "group_id": 591, "id": 56529}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286504.9957211, "message": "{{#object}}{{startTime}} {{endTime}}...{{/object}}", "group_id": 591, "id": 56880}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297286071.942874, "message": "@defunkt If that's the worst problem we've got with Mustache right now, we're better off than we were.", "group_id": 591, "id": 56620}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286217.9833429, "message": "that's kinda the first real milestone", "group_id": 591, "id": 56686}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286249.7986939, "message": "lol", "group_id": 591, "id": 56718}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286472.0636909, "message": "so if I have startTime, endTime and dueTime and want to show all of those as dates in the template", "group_id": 591, "id": 56861}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286723.636704, "message": "write ruby in ruby, html in html, and javascript in javascript", "group_id": 591, "id": 56986}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286928.1806991, "message": "I want that model to be the input to the template", "group_id": 591, "id": 57076}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286193.9446831, "message": "damn it took github MONTHS to get spammers", "group_id": 591, "id": 56674}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286541.557373, "message": "probably something like that", "group_id": 591, "id": 56899}, {"user_id": 2449, "stars": [{"date_created": 1297286157.9121971, "user_id": 2449}], "topic_id": 2393, "date_created": 1297286154.1298101, "message": "Hey, will you help? -> http://hellbuzz.com/Vote-for-Grand-Canyon-UNITED-STATES", "group_id": 591, "id": 56654}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286238.7001231, "message": "@pvande ahhh... yes :)", "group_id": 591, "id": 56702}, {"user_id": 3, "stars": [{"date_created": 1297642845.1832659, "user_id": 2236}], "topic_id": 2393, "date_created": 1297286030.0825329, "message": "i think we should probably add dot.syntax soon though", "group_id": 591, "id": 56601}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286066.4048631, "message": "did anyone create the non-implementation-related repo for the mustache spec?", "group_id": 591, "id": 56618}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286837.8737609, "message": "i hate discussions like this, sorry", "group_id": 591, "id": 57042}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287119.949666, "message": "the view shouldn't override what the template works with. the template should work directly with the mental model.", "group_id": 591, "id": 57147}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287176.147634, "message": "@judofyr the Mustache spec doesn't guarantee that you should be able to do that...", "group_id": 591, "id": 57177}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287275.017993, "message": "I mean, when I see {{#users}} Username: {{name}} {{/username}} it's working on the model", "group_id": 591, "id": 57248}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288056.37289, "message": "if you'll have to create your own abstractions in order to effectively use a template engine, I believe that something is wrong", "group_id": 591, "id": 57840}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286524.139761, "message": "so I'll have to parse the Time#inspect?", "group_id": 591, "id": 56889}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297286402.2472739, "message": "@defunkt Is dot.syntax basically supposed to behave like andand?", "group_id": 591, "id": 56825}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286423.1703191, "message": "everything in the view", "group_id": 591, "id": 56830}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286828.8719521, "message": "every app has some sort of mental model: what is a User? what properties does a user have? what can you iterate on a user?", "group_id": 591, "id": 57036}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287083.8215489, "message": "it's a Bridge in design patterns terms", "group_id": 591, "id": 57133}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287140.183959, "message": "right now I can't just pass a Time to Mustache, because there is no way to present it", "group_id": 591, "id": 57150}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287141.850852, "message": "that's where we (mustache supports) and you disagree (as defunkt said)", "group_id": 591, "id": 57152}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286538.942421, "message": "def startTime; self[:startTime].my_date_filter end", "group_id": 591, "id": 56897}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286645.925514, "message": "there's a lot of options that don't involve filters or extending your template language", "group_id": 591, "id": 56943}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287480.9641769, "message": "@judofyr you know how they're defined, they're defined in the View", "group_id": 591, "id": 57396}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287676.12517, "message": "@joshpeek I'd love to hear more about how I could improve those, or the context scoping specs, though.", "group_id": 591, "id": 57565}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287733.850069, "message": "@judofyr if you're doing this in Ruby, you can use modules and Ruby metaprogramming to dry the hell out of it", "group_id": 591, "id": 57605}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286714.024822, "message": "it's presentation", "group_id": 591, "id": 56981}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286748.5473821, "message": "then do so", "group_id": 591, "id": 57004}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297286958.898483, "message": "@judofyr You want your Model to also be a View.", "group_id": 591, "id": 57084}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287011.426717, "message": "@agibralter good point. I don't really like the view layer.", "group_id": 591, "id": 57098}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287198.623791, "message": "if that's what you want... mustache is not really what you're looking for, is it?", "group_id": 591, "id": 57190}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287235.6099269, "message": "ultimately, we're already doing that", "group_id": 591, "id": 57213}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287240.522481, "message": "the view just extends the model", "group_id": 591, "id": 57216}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287249.6376159, "message": "no, because the template has contraints as to what it understands", "group_id": 591, "id": 57225}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287283.3144259, "message": "the view has to map the model (an arbitrary object) onto this template which understands those three things", "group_id": 591, "id": 57250}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286636.103528, "message": "or do it in javascript like we do on github, or do it at the model level", "group_id": 591, "id": 56940}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286691.8495369, "message": "but why? it feels *correct* to work with the pure data in the view and there decide how to present it", "group_id": 591, "id": 56960}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286711.9818101, "message": "nothing could feel less correct to put code into HTML", "group_id": 591, "id": 56980}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1297286839.1768899, "message": "later :)", "group_id": 591, "id": 57044}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286961.4077909, "message": "@judofyr but with mustache, you have an intermediate \"view\" layer that links the model and the template", "group_id": 591, "id": 57086}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287025.2738919, "message": "not in its current form", "group_id": 591, "id": 57104}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287256.4844611, "message": "it understands strings, arrays, and booleans", "group_id": 591, "id": 57229}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297286970.2757671, "message": "the view layer maps the model onto the template", "group_id": 591, "id": 57088}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287050.9180429, "message": "it should at least just *append* some more data, never change the real model", "group_id": 591, "id": 57114}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287067.511852, "message": "it doesn't change the model", "group_id": 591, "id": 57120}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287087.2065001, "message": "@judofyr It *should* extract and format the properties of the model that need to be output.", "group_id": 591, "id": 57134}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287094.2646179, "message": "oops, misunderstandings here", "group_id": 591, "id": 57137}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287216.9704311, "message": "probably. but why don't we want to use the model as the view?", "group_id": 591, "id": 57200}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287172.8934209, "message": "@judofyr The View *is* what the template works with.  Again, you're trying to use your Model as a View, and it doesn't fit.", "group_id": 591, "id": 57174}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287296.877059, "message": "@judofyr Because, as you've said, there's a disconnect between the data on the Model (and the form it's in) and what is expected to be presented.  The View is there to limit, filter, and format data from the Model.", "group_id": 591, "id": 57260}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287426.991544, "message": "@pvande my problem with that, is that it takes it out of context. instead of seeing {{ createdAt | date }} and {{ createdAt | fulltime }} in the template, I see some other references which I don't really know how is defined.", "group_id": 591, "id": 57357}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297287408.5569019, "message": "@pvande The mustache spec is a bit lacking to me. It provides a rather ambiguous baseline. I wish it would take a clearer stand on things like value truthiness, context scoping, and string coercion. Or at least provide optional sections for guidance.", "group_id": 591, "id": 57350}, {"user_id": 2387, "stars": [], "topic_id": 2393, "date_created": 1297287876.454303, "message": "@joshpeek Don't get me started on JS's truth tables now....", "group_id": 591, "id": 57704}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286783.211447, "message": "I can't. I can just present the startTime, and then the view has to be responsible for formatting it correctly.", "group_id": 591, "id": 57022}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297286885.768532, "message": "so it makes sense that the template (or the designer for that matter) only works on the model", "group_id": 591, "id": 57061}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287018.0005801, "message": "User => UserView => UserTemplate", "group_id": 591, "id": 57099}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287034.0287409, "message": "@judofyr What would you change?", "group_id": 591, "id": 57109}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287642.5831261, "message": "@joshpeek Similarly with string coercion, I'm at a loss for other data types representable in YAML that I could assert the regular formatting of.", "group_id": 591, "id": 57532}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297287841.648771, "message": "@pvande I agree that it should be language specific. But having it in the spec ensures that 2 mustache JS implementations behave the same. Yeah, looking at the way the yaml tests are now, it'd be hard to make a spec that asserts different behavior in across languages.", "group_id": 591, "id": 57680}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287318.628933, "message": "@judofyr *no* it's not working on the model, it's working on the view", "group_id": 591, "id": 57276}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287501.8423679, "message": "@agibralter I want to take one layer out (the view layer) and introduce another layer (formatting layer)", "group_id": 591, "id": 57406}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287533.026154, "message": "that's a different language", "group_id": 591, "id": 57429}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288102.749867, "message": "@judofyr Assuming filtering won't be implemented, what would help you?", "group_id": 591, "id": 57877}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288179.0114551, "message": "functions/helpers :P (as in Handlebars' {{date startTime}}), but that's just the same feature disguised", "group_id": 591, "id": 57951}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288213.624064, "message": "so in my view, I define: `def date(t) t.format_thing; end`", "group_id": 591, "id": 57982}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288400.838748, "message": "I don't see how helpers breaks the \"logic-less\" principle", "group_id": 591, "id": 58123}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288450.2835879, "message": "you already allow to pass lambas, so what difference helpers would be", "group_id": 591, "id": 58155}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297287658.625474, "message": "@agibralter yeah, they're going to be defined in the View as `def createdAtDate` and `def createdAtFulltime` (ehm, in snake case of course)", "group_id": 591, "id": 57550}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287869.3564019, "message": "@judofyr everything is layers of abstraction -- all the code you're using... Rails, Sinatra... it's a lot of code that abstracts ideas. Are you saying that you don't feel like writing layers of abstraction?", "group_id": 591, "id": 57698}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287888.884299, "message": "sounds a little lazy if you're happy to use other people's abstraction layers but don't want to write your own", "group_id": 591, "id": 57713}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288066.3714631, "message": "@joshpeek So I've taken the middleground thus far -- YAML's \"true\" and \"false\" are expected to be truthy and falsey values in every target language, and the specs assert that much.", "group_id": 591, "id": 57847}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288256.5946939, "message": "you have to type the filter out every time", "group_id": 591, "id": 58009}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297287564.320677, "message": "@joshpeek agreed... for example, JS and ruby treat truthiness differently", "group_id": 591, "id": 57465}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287587.5078781, "message": "@joshpeek Truthiness is tied inherently to the implementation language; I'd love to implement tests for the edge cases, but I'm not smart enough to figure out how to test them all in a language-agnostic way.", "group_id": 591, "id": 57489}, {"user_id": 1516, "stars": [{"date_created": 1297322300.7184329, "user_id": 4935}], "topic_id": 2393, "date_created": 1297287689.029563, "message": "I feel like I need to emulate filters all over the place, in a very un-DRY way", "group_id": 591, "id": 57578}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287761.0900061, "message": "@judofyr Typically, your View won't need both -- you're not likely to use them both.", "group_id": 591, "id": 57619}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287918.1529851, "message": "@joshpeek The expectation for truthiness is that !!(value) returns true.", "group_id": 591, "id": 57733}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297287988.980031, "message": "@joshpeek I'd love to codify that in the spec, but I can't produce examples across an unknown set of languages.", "group_id": 591, "id": 57778}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288247.821357, "message": "that's not very dry either!", "group_id": 591, "id": 58003}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288320.7562821, "message": "so I don't see {{ startDate }} and wonder \"wait, now I want the full timestamp, will this actually work?\"", "group_id": 591, "id": 58064}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288939.413543, "message": "@joshpeek That's certainly an idea.  Are you aware of a good Cucumber implementation for Perl / Python / Objective-C / C / Javascript / etc?  ;)", "group_id": 591, "id": 58462}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297288959.952893, "message": "(need to delete that line before someone retweets it)", "group_id": 591, "id": 58472}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297288961.200882, "message": ":)", "group_id": 591, "id": 58474}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297287967.2424929, "message": "@pvande not really, !![] is false for mustache, but not in ruby. Mustache has its own concept of \"empty\" that needs to be further documented.", "group_id": 591, "id": 57761}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289635.843852, "message": "@joshpeek Any of the sections tests can be used as a demonstration of non-objects on the context stack.", "group_id": 591, "id": 58868}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289682.7459021, "message": "@pvande nice chatting, gotta go. I know these are hard problems and i think we both agree on that expected behaviors, but we just need to come up with a clever way to test them.", "group_id": 591, "id": 58881}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288235.970191, "message": "and then I can use it all over the place", "group_id": 591, "id": 57997}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288468.0062981, "message": "it just doesn't seem necessary", "group_id": 591, "id": 58173}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288518.467855, "message": "sorry -- I don't mean to be harsh here", "group_id": 591, "id": 58214}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288550.4021001, "message": "I'm just saying that what you're talking about implementing can be done by using the standard View/Template abstraction", "group_id": 591, "id": 58232}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288593.6606951, "message": "sure, everything is Turing complete and so on.", "group_id": 591, "id": 58270}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288440.5976629, "message": "well I guess not that much", "group_id": 591, "id": 58147}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288288.175657, "message": "yes, because that makes me aware of how it's presented when I look at the HTML", "group_id": 591, "id": 58035}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288593.209501, "message": "and bam, no more problems", "group_id": 591, "id": 58269}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288294.921109, "message": "@joshpeek I had to accept a while ago that the spec couldn't literally be a full set of unit tests for every implementation.  As it stands though, I've successfully used it to bootstrap a pair of full implementations.", "group_id": 591, "id": 58039}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288325.5121219, "message": "I really don't see why you would want to use Mustache if you don't agree with the core principles of why it was created", "group_id": 591, "id": 58067}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288381.434792, "message": "core principles? I agree with them, just on another level.", "group_id": 591, "id": 58107}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297288681.2609439, "message": "@agibralter but why do I have to do all that crap when one tiny, tiny feature fixes it?", "group_id": 591, "id": 58333}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288583.059222, "message": "in Ruby you can just mixin to your models to override their to_s method", "group_id": 591, "id": 58258}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288599.9538269, "message": "@judofyr Lambdas, especially those in sectional contexts, may be used to filter the template, which cannot be done anywhere else.  Filtering / formatting data, on the other hand, can (and should) be done elsewhere.", "group_id": 591, "id": 58277}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288464.655875, "message": "@judofyr \"Logic-less\" in this case means \"lacking any behavior more complex that conditionals, interpolation, and iteration\".", "group_id": 591, "id": 58168}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297288727.6876681, "message": "@judofyr Because it is neither compatible with the core principles of the template system, nor a tiny feature.", "group_id": 591, "id": 58358}, {"user_id": 2849, "stars": [{"date_created": 1297289170.1883681, "user_id": 2849}], "topic_id": 2393, "date_created": 1297289166.4595721, "message": "1 minute ago", "group_id": 591, "id": 58611}, {"user_id": 2849, "stars": [], "topic_id": 2393, "date_created": 1297289175.3079369, "message": "@vkailas no way", "group_id": 591, "id": 58623}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289429.803359, "message": "@joshpeek Which in particular were you trying to demonstrate?", "group_id": 591, "id": 58748}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289705.6866119, "message": "@joshpeek Thanks; we'll talk again later.", "group_id": 591, "id": 58892}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288983.4401491, "message": "starred!", "group_id": 591, "id": 58492}, {"user_id": 2849, "stars": [], "topic_id": 2393, "date_created": 1297289148.1698129, "message": "this is so useful", "group_id": 591, "id": 58597}, {"user_id": 2140, "stars": [{"date_created": 1297289034.3644609, "user_id": 1516}], "topic_id": 2393, "date_created": 1297288860.930161, "message": "@pvande One idea, and you won't ever hear me say this anywhere else, is to use cucumber (or something similar) to specify the examples. This way the meaning of \"truthiness\" could be interpreted by the test runner.", "group_id": 591, "id": 58421}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288912.3602769, "message": "ewww", "group_id": 591, "id": 58452}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289119.9579971, "message": "there is a cucumber runner for \"Adoble Flex\" lol", "group_id": 591, "id": 58585}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289125.1370561, "message": "mustache.flex", "group_id": 591, "id": 58586}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289144.264946, "message": "@joshpeek You mentioned a need for better context scoping specs; care to elaborate?", "group_id": 591, "id": 58592}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289531.800602, "message": "i didn't see any tests", "group_id": 591, "id": 58814}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289670.4276531, "message": "@joshpeek The only thing not represented is the one that is subject to linguistic interpretation.", "group_id": 591, "id": 58879}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297288914.288188, "message": ":)", "group_id": 591, "id": 58453}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1297288933.1609371, "message": "/clear /clear", "group_id": 591, "id": 58460}, {"user_id": 2849, "stars": [], "topic_id": 2393, "date_created": 1297289154.896327, "message": "oh shit time travel", "group_id": 591, "id": 58601}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289222.507601, "message": "@pvande i don't think these are language specifics, but when you do things like {{#value}}value: {{value}}{{/value}} where context { value: \"foo\" }", "group_id": 591, "id": 58652}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289411.7241459, "message": "@joshpeek That example tests a few of aspects of Mustache: strings as truthy (again, implementation dependent), non-objects on the context stack, and interpolation from beneath the top of stack.", "group_id": 591, "id": 58732}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289471.190484, "message": "Agreed, and most (all?) tested in relative isolation.", "group_id": 591, "id": 58781}, {"user_id": 2849, "stars": [], "topic_id": 2393, "date_created": 1297289532.108794, "message": "how to d you ban me?", "group_id": 591, "id": 58815}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289443.862987, "message": "all very important edge cases :)", "group_id": 591, "id": 58754}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297289980.184371, "message": "so it's going to be different in different language implementations", "group_id": 591, "id": 58990}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297289789.0470531, "message": "@pvande is there an agreed definition for truthiness?", "group_id": 591, "id": 58925}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1297289520.7839041, "message": "that example is about non contexts on the stack", "group_id": 591, "id": 58808}, {"user_id": 2849, "stars": [], "topic_id": 2393, "date_created": 1297289524.7735281, "message": "spam", "group_id": 591, "id": 58811}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289932.539192, "message": "@agibralter `not not value`", "group_id": 591, "id": 58979}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289581.669872, "message": "@joshpeek https://github.com/pvande/Mustache-Spec/blob/master/specs/sections.yml#L20 shows non-local interpolation.", "group_id": 591, "id": 58840}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297289994.8557611, "message": "@agibralter Correct.", "group_id": 591, "id": 58994}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297290549.7864859, "message": "makes sense I guess", "group_id": 591, "id": 59151}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297290575.8076999, "message": "so the problem is running the spec in multiple languages?", "group_id": 591, "id": 59160}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297290584.0741849, "message": "ruby and JS are easy...", "group_id": 591, "id": 59162}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297295543.243922, "message": "Sorry; I didn't see these until just now.  The problem isn't running the spec in multiple languages, but writing the spec for multiple languages.", "group_id": 591, "id": 60574}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297295645.397361, "message": "@agibralter For example, is 0 falsey?  The empty string?  Is 1 always truthy?  What about a non-empty string?", "group_id": 591, "id": 60618}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297295859.498338, "message": "The simplest thing may be to create two additional YAML types (tags), and require test implementors to substitue truthy and falsey values, but that's a non-trivial hurdle in some languages.", "group_id": 591, "id": 60693}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297295768.5486801, "message": "Fundamentally, we really just want to be able to specify \"truthy\" and \"falsey\" as being non-Boolean typed values that behave in a logical way.  I haven't come up with a pair of test values that communicate that across all languages.", "group_id": 591, "id": 60666}, {"user_id": 3952, "stars": [], "topic_id": 2393, "date_created": 1297301402.220583, "message": "@judofyr To be honest, I have to say that I haven't really used it yet. I'm stuck in the dark ages.", "group_id": 591, "id": 62343}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1297300662.2295001, "message": "shouldn't thruthiness depend on the language tho?", "group_id": 591, "id": 62196}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297301303.3813491, "message": "It should, that's the point.", "group_id": 591, "id": 62331}, {"user_id": 19, "stars": [], "topic_id": 2393, "date_created": 1297304067.937382, "message": "http://jobs.github.com is completely mustache", "group_id": 591, "id": 63159}, {"user_id": 2148, "stars": [], "topic_id": 2393, "date_created": 1297302837.763067, "message": "@defunkt where on github do you use mustache?", "group_id": 591, "id": 62760}, {"user_id": 19, "stars": [], "topic_id": 2393, "date_created": 1297304075.5461581, "message": "And event generation happens in mustache templates", "group_id": 591, "id": 63163}, {"user_id": 4655, "stars": [], "topic_id": 2393, "date_created": 1297314329.412744, "message": "mustache is?", "group_id": 591, "id": 65102}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297314424.282567, "message": "@eggie5 Mustache is a logic-free templating language with implementations in a large number of languages.", "group_id": 591, "id": 65117}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297314596.6944079, "message": "@joshpeek @agibralter @locks I've entered an issue at https://github.com/mustache/spec/issues/issue/4 for discussing possible solutions to testing truthiness in a language-agnostic way.  Input welcome.", "group_id": 591, "id": 65156}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297326260.61641, "message": "@eggie5 see: http://mustache.github.com/", "group_id": 591, "id": 67266}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297344855.252419, "message": "could the spec have language dependent definition?", "group_id": 591, "id": 69202}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297345183.2045119, "message": "https://gist.github.com/820519", "group_id": 591, "id": 69244}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297345188.0524471, "message": "maybe that'd be crazy though", "group_id": 591, "id": 69247}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297346221.1802411, "message": "sure but !!0 is different in JS and Ruby, so how would you write a test case for that?", "group_id": 591, "id": 69438}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297344802.2328539, "message": "@pvande can't the spec just test truthiness in each language based on that language's definition of truthiness? JS would just have to test that false, null, 0, \"\", undefined and NaN are all false", "group_id": 591, "id": 69197}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1297347003.8833001, "message": "yeah", "group_id": 591, "id": 69537}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297345245.8807819, "message": "maybe it can't be in the spec", "group_id": 591, "id": 69257}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297345302.06215, "message": "maybe it's just a rule that a language implementation should evaluate sections as true/false by using the following logic: !!(value) === true", "group_id": 591, "id": 69265}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297346540.493865, "message": "well I think the test case would need a version for every language", "group_id": 591, "id": 69474}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297355532.1643369, "message": "@agibralter The optional lambda spec, yes.", "group_id": 591, "id": 71051}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297355557.6824419, "message": "@agibralter It's also very difficult w.r.t. the \"truthiness\" clause in the manpage.", "group_id": 591, "id": 71055}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297355409.0121591, "message": "@agibralter The goal of the spec is to provide an implementation-agnostic (and hence language-agnostic) description of the behavior of Mustache in certain edge cases.  The optional lambda spec has to work around the language-agnostic part, but the hurdle of working with literal code for multiple languages is entirely restricted to that one module.", "group_id": 591, "id": 71040}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297355486.31043, "message": "@pvande but I thought you said that language-agnosticism is impossible for certain parts of the spec", "group_id": 591, "id": 71049}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1297373894.0321529, "message": "@pvande hmm I think !!(value) and !(value) should be in the manpage", "group_id": 591, "id": 74916}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1297373970.057611, "message": "@agibralter I think I'd rather see an implementor-specific document that mentions that, but I agree that it should be somewhere, and that the documentation overall could be improved.", "group_id": 591, "id": 74936}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298485676.3812649, "message": "correct", "group_id": 591, "id": 189561}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298485689.9686761, "message": "klass = mustache_class(template, options)", "group_id": 591, "id": 189565}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298485586.5135591, "message": "@technoweenie hmm so how does it work by default in Sinatra?", "group_id": 591, "id": 189543}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298485348.0516541, "message": "Does Mustache.rb cache template files ever? Or does it read from the filesystem on every request?", "group_id": 591, "id": 189512}, {"user_id": 16, "stars": [], "topic_id": 2393, "date_created": 1298485501.2301011, "message": "Depends on how you use it.", "group_id": 591, "id": 189530}, {"user_id": 16, "stars": [], "topic_id": 2393, "date_created": 1298485522.020057, "message": "You can definitely cache a Mustache::Template instance and reuse it", "group_id": 591, "id": 189535}, {"user_id": 16, "stars": [], "topic_id": 2393, "date_created": 1298485641.792208, "message": "I'd hope it's cached, but I've never used it.  It's in the mustache.rb lib I think.", "group_id": 591, "id": 189554}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298485674.864769, "message": "ahh", "group_id": 591, "id": 189560}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1298489853.202255, "message": "unless you set the template manually yourself (thing.mustache = \"Foo {{bar}}\") it should be cached", "group_id": 591, "id": 190266}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1298537407.472604, "message": "@pvande so what do you think about the dots", "group_id": 591, "id": 196126}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298537717.6822939, "message": "@defunkt Dot-notation?", "group_id": 591, "id": 196148}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298537885.008285, "message": "I'm generally in favor of it, but I want to be careful about the edge cases.", "group_id": 591, "id": 196155}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298538234.4796441, "message": "As mentioned earlier, I've thrown together some specs for the feature (here: https://github.com/mustache/spec/tree/dot-notation), and I've just pushed out changes to my fork of Mustache.rb that pass them (here: https://github.com/pvande/mustache).", "group_id": 591, "id": 196201}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298538343.110512, "message": "@defunkt If I've completely missed your question, please let me know.  :)", "group_id": 591, "id": 196214}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298660958.4881909, "message": "@defunkt v 0.98.0?", "group_id": 591, "id": 210459}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298660994.1383929, "message": "where did that version come from?", "group_id": 591, "id": 210463}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298661947.9996641, "message": "yeah, true", "group_id": 591, "id": 210652}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662125.8278811, "message": "does it run in browsers?", "group_id": 591, "id": 210683}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662454.9777219, "message": "man I can't wait for the consensus on mustache... I'm trying to use templates both on the backend with Rails + mustache.rb and in browser with mustache.js", "group_id": 591, "id": 210725}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298663301.838896, "message": "btw, working to bring those dot notation changes to my mustache js compiler", "group_id": 591, "id": 210858}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298661923.597754, "message": "Heh so skip from 13 to 98 :)", "group_id": 591, "id": 210647}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298661974.317718, "message": "Maybe when we hit v1.0, we can start using semantic versioning...", "group_id": 591, "id": 210655}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662213.149672, "message": "ah very nice :)", "group_id": 591, "id": 210703}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662316.5391519, "message": "accessible?", "group_id": 591, "id": 210717}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298662482.081207, "message": "@agibralter this maybe interesting to you https://github.com/josh/mustache-trimmer", "group_id": 591, "id": 210728}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662562.350924, "message": "but the tough part is how mustache.rb and mustache.js organize partials", "group_id": 591, "id": 210745}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662541.427618, "message": "@joshpeek hmm I've been using https://github.com/documentcloud/jammit", "group_id": 591, "id": 210740}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662546.6365311, "message": "and it's working very well", "group_id": 591, "id": 210742}, {"user_id": 2140, "stars": [{"date_created": 1298938388.770858, "user_id": 2130}], "topic_id": 2393, "date_created": 1298662682.6290059, "message": "sprockets 2 is going to be the official \"rails way\" of doing this asset packaging stuff", "group_id": 591, "id": 210766}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298662683.47505, "message": "https://github.com/sstephenson/sprockets/tree/v2", "group_id": 591, "id": 210767}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662727.1525569, "message": "ah interesting", "group_id": 591, "id": 210773}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298663013.0091059, "message": "@joshpeek So, the issue with language-dependent truthiness comes down to the fact that you're expecting to serialize Ruby into Javascript but maintain Ruby semantics?", "group_id": 591, "id": 210826}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298663220.4475441, "message": "@joshpeek Got it.", "group_id": 591, "id": 210850}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298661930.1673591, "message": "nice", "group_id": 591, "id": 210649}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298661974.358633, "message": "do you know if mustache.js is going to meet the new spec?", "group_id": 591, "id": 210656}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298662036.495574, "message": "I'd like to hope it will, but I cannot speculate on that.", "group_id": 591, "id": 210668}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298662078.6479001, "message": "In the meantime, I'm maintaining Milk (https://github.com/pvande/Milk) as a spec-compliant CoffeeScript/Javascript Mustache implementation.", "group_id": 591, "id": 210678}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662135.579246, "message": "I guess the compiled coffeescript does", "group_id": 591, "id": 210685}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298662149.18714, "message": "http://pvande.net/Milk/compliance.html", "group_id": 591, "id": 210688}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298662271.801914, "message": "I need to make the compiled version a bit more accessible, but it does pass the spec suite in all browsers I've tested in.", "group_id": 591, "id": 210710}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662385.102509, "message": "ah", "group_id": 591, "id": 210720}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298661940.2654331, "message": "Yeah, pretty much.  It's all pretty relative anyway.", "group_id": 591, "id": 210651}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298661899.6966801, "message": "@agibralter It's all part of the big push to hit v1.0", "group_id": 591, "id": 210643}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298662105.142247, "message": "Biggest difference is that Milk doesn't do callbacks.", "group_id": 591, "id": 210681}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298662352.776212, "message": "It's published as a part of the gh-pages branch, but there's no direct link anywhere.", "group_id": 591, "id": 210718}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662464.3095131, "message": "it's tough moving my whole stack forward...", "group_id": 591, "id": 210726}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298663162.3131061, "message": "@pvande huh? no i'm in favor of lang specific truthiness, just want it documented.", "group_id": 591, "id": 210838}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662614.2008741, "message": "I have it working... but I have a very hacky implementation of Mustache::Rails and a fork of mustache.js that actually respects context bubbling", "group_id": 591, "id": 210751}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298662745.2551129, "message": "gunning for jammit, eh?", "group_id": 591, "id": 210774}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298662792.642067, "message": "its extensible via tilt", "group_id": 591, "id": 210784}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298662807.4166269, "message": "so you could add use my little mustache compiler", "group_id": 591, "id": 210787}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298662827.727807, "message": "and all your js and mustache files would be concated together nicely", "group_id": 591, "id": 210790}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298663066.7988009, "message": "I could see the advantage of standardizing  asset packaging in rails/rack one and for all...", "group_id": 591, "id": 210829}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1298663074.7534781, "message": "jammit does the concatenation already", "group_id": 591, "id": 210831}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298663316.332217, "message": "Awesome!", "group_id": 591, "id": 210860}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298664410.670125, "message": "for the curious: https://github.com/josh/mustache-trimmer/commit/88a6d51ef74d2222b6dc08377224c1fef925e7f0", "group_id": 591, "id": 210997}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298663381.575053, "message": "At this point, I'm planning on tagging the current HEAD of mustache/spec as v1.0.0 this evening barring any further notes.", "group_id": 591, "id": 210876}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298663418.8263519, "message": "@pvande have a question about a branch commit, will use spec room", "group_id": 591, "id": 210881}, {"user_id": 2140, "stars": [], "topic_id": 2393, "date_created": 1298664590.8558569, "message": "@pvande something to consider when documenting implicit iterators. I'm treating \"{{.}}\" dot as a reference to the last item on the stack. JS doesn't have a \"to_s\", but it will be casted to a string by \"\" + obj.", "group_id": 591, "id": 211018}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298664802.7692771, "message": "@joshpeek That's absolutely been my understanding of how the feature should function.  Interpolated values in general should be cast to strings first, with cache misses being a special case (always an empty string).", "group_id": 591, "id": 211030}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298676986.6051199, "message": "@joshpeek The specs for context lookup 'misses' is up; let me know what you find.", "group_id": 591, "id": 212070}, {"user_id": 667, "stars": [], "topic_id": 2393, "date_created": 1298680794.4609771, "message": "http://i.min.us/jlO8to.jpg", "group_id": 591, "id": 212276}, {"user_id": 667, "stars": [{"date_created": 1299097232.7677059, "user_id": 3523}, {"date_created": 1299519405.936419, "user_id": 1307}], "topic_id": 2393, "date_created": 1298680819.997726, "message": "http://i.min.us/ij88r0.jpg", "group_id": 591, "id": 212278}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1298950452.0021291, "message": "The Mustache spec has just been tagged v1.0.0!", "group_id": 591, "id": 231472}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1298985685.750438, "message": "@pvande go mustache :D", "group_id": 591, "id": 234337}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1298985848.141485, "message": "does mustache have an IRC chan?", "group_id": 591, "id": 234381}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1298987501.9039381, "message": "I was thinking, and pardon my poor explanation, since there is a mustache github user couldn't it have an 'official' repo of each implementation? one condition to get that honor would be passing all the specs", "group_id": 591, "id": 234625}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1298990319.759053, "message": "@locks #{ on Freenode", "group_id": 591, "id": 235040}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1298991568.4216111, "message": "@judofyr much obliged", "group_id": 591, "id": 235273}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299095589.1188631, "message": "@locks That's not a bad idea, but you'd have to take it up with @defunkt.", "group_id": 591, "id": 252323}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299097711.753247, "message": "Changes for v1.1.0 of the Mustache spec are up; please leave feedback.", "group_id": 591, "id": 252589}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1299097874.2189851, "message": "@defunkt thoughts on my suggestion?", "group_id": 591, "id": 252601}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1299111879.7570021, "message": "i both love it and hate it", "group_id": 591, "id": 254793}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1299111902.882911, "message": "mustache/mustache.rb and mustache/mustache.erl ?", "group_id": 591, "id": 254799}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1299112128.3011229, "message": "yup, like that. I like the idea of 'approved' implementations, and github orgs are very flexible in terms of managing teams", "group_id": 591, "id": 254847}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299133839.9154241, "message": "It certainly beats the runner up solution of tagging each version on http://mustache.github.com with the version of the spec they support...", "group_id": 591, "id": 258562}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1299160697.037961, "message": "+1", "group_id": 591, "id": 260183}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299213712.6213591, "message": "Fun little experiment: https://gist.github.com/854178", "group_id": 591, "id": 266626}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299264546.0967519, "message": "@defunkt Excepting feedback / bugfixes, I'll tag the spec at v1.1.0 tonight (this is the version that Mustache.rb 1.0 supports).", "group_id": 591, "id": 271849}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1299281140.144892, "message": "@pvande Excellent!", "group_id": 591, "id": 273896}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1299281204.8033609, "message": "that gist is slick", "group_id": 591, "id": 273914}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299291641.4955339, "message": "Also, after a little roughness, v1.1.0 of the spec has been published.", "group_id": 591, "id": 274722}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299291605.7350791, "message": "That gist doesn't do anything about the duplicate test descriptions, but even that could be worked around somewhat.", "group_id": 591, "id": 274721}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299372838.1466689, "message": "Just tagged v1.0.2 and v1.1.1 of the spec.", "group_id": 591, "id": 278108}, {"user_id": 3, "stars": [{"date_created": 1299524404.8057721, "user_id": 3}], "topic_id": 2393, "date_created": 1299390246.4598899, "message": "Awesome", "group_id": 591, "id": 278713}, {"user_id": 1516, "stars": [], "topic_id": 2393, "date_created": 1299510384.608285, "message": "I've fixed some whitespace issues, but I'm not 100% sure if I've interpreted the spec correctly. see my latest commits & the comments here: https://github.com/defunkt/mustache/issues/closed#issue/87", "group_id": 591, "id": 288126}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299524333.048357, "message": "That is absolutely the correct interpretation of the spec; both EOS and newlines should be equally valid for standalone tags.  I'll try to get some tests added to the spec for those cases.", "group_id": 591, "id": 289732}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1299647860.8774221, "message": "@judofyr New specs are live.  https://github.com/mustache/spec", "group_id": 591, "id": 302153}, {"user_id": 1855, "stars": [], "topic_id": 2393, "date_created": 1300285006.1367719, "message": "@defunkt you ended up not expanding on your opinion, I'd be interested to hear your feedback", "group_id": 591, "id": 366168}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1300642964.219764, "message": "New versions of the v1.0 and v1.1 specs are live.  https://github.com/mustache/spec", "group_id": 591, "id": 392896}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1301412628.0953281, "message": "Developed against Chrome.  Play with it, break it, send me broken pieces / feedback / requests.", "group_id": 591, "id": 470039}, {"user_id": 2236, "stars": [{"date_created": 1301454143.6237049, "user_id": 1855}, {"date_created": 1301499592.830277, "user_id": 2130}], "topic_id": 2393, "date_created": 1301412564.279109, "message": "pvande.github.com/Milk/playground.html", "group_id": 591, "id": 470027}, {"user_id": 8224, "stars": [], "topic_id": 2393, "date_created": 1301443696.2351251, "message": "Select all sample data in the array, cut then paste == Error: Parse error on line 2: Unexpected 'TERMINATOR'.  Chromium 10.0.648.133 (77742) Ubuntu 10.10", "group_id": 591, "id": 474234}, {"user_id": 8224, "stars": [], "topic_id": 2393, "date_created": 1301443988.5218329, "message": "The data seems unhappy with whitespace.  Quite nice otherwise.", "group_id": 591, "id": 474294}, {"user_id": 3, "stars": [], "topic_id": 2393, "date_created": 1301451307.7216909, "message": "@pvande nice!", "group_id": 591, "id": 475082}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1301452298.7102971, "message": "@defunkt Thanks!", "group_id": 591, "id": 475312}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1301451452.6315801, "message": "@nerdyworms Part of that is because I'm just using CoffeeScript to eval whatever the data is, and that's whitespace sensitive...  I'm going to try to make it a bit less so, though.", "group_id": 591, "id": 475122}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1301452291.382021, "message": "@nerdyworms The data block should be a great deal more tolerant at this point.  See if it works any better for you now.", "group_id": 591, "id": 475310}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1301454797.7890861, "message": "Now has support for permalinks; failures should be much easier to report now.", "group_id": 591, "id": 475975}, {"user_id": 12179, "stars": [], "topic_id": 2393, "date_created": 1301510659.228492, "message": "@pvande why does the sample data lists \"current\" twice, once with true/false values, once with yes/no ?", "group_id": 591, "id": 483886}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1301515291.3299429, "message": "@badboy_ Because I wasn't watching what I was doing.  Stupid human error...", "group_id": 591, "id": 484662}, {"user_id": 2130, "stars": [], "topic_id": 2393, "date_created": 1303602541.076051, "message": "Anyone run into this problem with Mustache.rb + ActiveRecord objects? https://github.com/defunkt/mustache/issues/95", "group_id": 591, "id": 792231}, {"user_id": 2236, "stars": [], "topic_id": 2393, "date_created": 1303855205.6618371, "message": "Proposal for Mustache 2.0: https://github.com/mustache/spec/issues/8  Thoughts?", "group_id": 591, "id": 819408}]