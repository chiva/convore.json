[{"user_id": 34694, "stars": [], "topic_id": 37505, "date_created": 1306837945.4170921, "message": "With the new \"plugin architecture\" how should we organize plugins when we want to contribute? Sammy uses a plugin directory, should we do something similar? Also, should we put them in a Plugin \"namespace\" similar to Model.xxx? An example of a working plugin can be found here: https://github.com/ebaxt/js-model/blob/master/src/plugin_coerce.js basically the same as this pull request: https://github.com/benpickles/js-model/pull/19/files", "group_id": 4498, "id": 1236661}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306840239.1808031, "message": "ideally, officially supported plugins should live in the repo - /plugins sounds good", "group_id": 4498, "id": 1236826}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306840096.9915259, "message": "another excellent question!", "group_id": 4498, "id": 1236808}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306840144.4426091, "message": "if persistence adapters become plugins then they'll need this too", "group_id": 4498, "id": 1236813}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306841258.0150809, "message": "now that there is prototypal inheritance there's the possibility of having super() but i'm not quite thinking about that yet", "group_id": 4498, "id": 1236875}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306840302.0807731, "message": "but they'll be absent from the core js-model.js and will have to be included separately - this includes persistence adapters", "group_id": 4498, "id": 1236835}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306840344.45805, "message": "which suggests a download bundle more like Sammy's where you get a zip with everything", "group_id": 4498, "id": 1236840}, {"user_id": 34694, "stars": [], "topic_id": 37505, "date_created": 1306840979.182097, "message": "That sounds good. Also, I think it's smart to add some hooks in the core so that plugins can actually do something useful. For example I had to add a setAttributeValue in model_instance_methods.js in order to to type coercion.", "group_id": 4498, "id": 1236865}, {"user_id": 34694, "stars": [], "topic_id": 37505, "date_created": 1306841015.4806521, "message": "Maybe there are better ways of doing this tho?", "group_id": 4498, "id": 1236868}, {"user_id": 34694, "stars": [], "topic_id": 37505, "date_created": 1306841942.9740951, "message": "Since this is something most plugins will have to deal with it would probably be smart to have a short \"getting started with plugin development\" guide where you set some guidelines so that you get some consistency in how to interacte with the core. For instance, what happens when you apply multiple plugins, i.e. i18n -> coerce -> core. Plugins could potentially break each other if they are not written properly.", "group_id": 4498, "id": 1236913}, {"user_id": 13575, "stars": [], "topic_id": 37505, "date_created": 1306841167.4873669, "message": "i defo think that hooks are a good thing", "group_id": 4498, "id": 1236870}]