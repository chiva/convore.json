[{"user_id": 2630, "stars": [], "topic_id": 10832, "date_created": 1299258406.670722, "message": "all of them", "group_id": 160, "id": 271298}, {"user_id": 18757, "stars": [], "topic_id": 10832, "date_created": 1299257788.0598111, "message": "What design patterns you use for your javascript application ?", "group_id": 160, "id": 271181}, {"user_id": 2630, "stars": [], "topic_id": 10832, "date_created": 1299258430.1121969, "message": ";) But seriously, I was thinking about this yesterday.  I think the observer pattern with events is the most helpful", "group_id": 160, "id": 271301}, {"user_id": 2630, "stars": [], "topic_id": 10832, "date_created": 1299258609.110353, "message": "I wish jquery had a more general implementation of this instead of having it tied to elements with bind/trigger", "group_id": 160, "id": 271319}, {"user_id": 1964, "stars": [{"date_created": 1299259314.3290839, "user_id": 18757}, {"date_created": 1299796917.802141, "user_id": 13919}, {"date_created": 1303775393.0473399, "user_id": 31031}], "topic_id": 10832, "date_created": 1299258971.1485839, "message": "I haven't used most of these, but found this awesome book / cheatsheet on the topic recently: http://addyosmani.com/blog/essentialjsdesignpatternsupdate1/", "group_id": 160, "id": 271389}, {"user_id": 8327, "stars": [{"date_created": 1299864469.0911191, "user_id": 13919}, {"date_created": 1300008418.250663, "user_id": 16058}], "topic_id": 10832, "date_created": 1299298880.3260579, "message": "Wrap everything in\n!function(window,document,undefined){ /* app */ }(window,document);", "group_id": 160, "id": 275081}, {"user_id": 7878, "stars": [{"date_created": 1299777158.6982059, "user_id": 3795}, {"date_created": 1299796911.583967, "user_id": 13919}], "topic_id": 10832, "date_created": 1299399640.8888061, "message": "I wrote a little library, https://github.com/mostlygeek/Extendable.js. It based off of a similar pattern I saw in Facebook's connect-js library. I tweaked it so every level is an EventEmitter (similar to the node.js design)", "group_id": 160, "id": 279126}, {"user_id": 19914, "stars": [], "topic_id": 10832, "date_created": 1299691470.509558, "message": "dojo.connect is a nice implementation of observer", "group_id": 160, "id": 306916}, {"user_id": 3795, "stars": [], "topic_id": 10832, "date_created": 1299777156.757061, "message": "@mostlygeek Nice framework, it's exactly the sort of project I've been thinking about. Minimal overhead with a TON of utility. Thanks.", "group_id": 160, "id": 314927}, {"user_id": 13919, "stars": [], "topic_id": 10832, "date_created": 1299796943.717427, "message": "@mal what's the purpose of the ! in !function(window,document,undefined){ /* app */ }(window,document);", "group_id": 160, "id": 317256}, {"user_id": 8327, "stars": [], "topic_id": 10832, "date_created": 1299841179.3664351, "message": "@MarkBennett The bang makes it invokable. Without it, js throws a syntax error. Another alternative is to wrap the function in parens, but that's 2 characters vs the bang's one.", "group_id": 160, "id": 321155}, {"user_id": 13919, "stars": [], "topic_id": 10832, "date_created": 1299864504.0389321, "message": "@mal cool, I normally use the parenthesis but I didn't know the bang worked instead. Will have to try that out!", "group_id": 160, "id": 324980}, {"user_id": 19777, "stars": [], "topic_id": 10832, "date_created": 1300009727.15906, "message": "While watching Paul Irish go through his '10 Things I Learned from the jQuery Source' http://www.youtube.com/watch?v=i_qE1iAmjFg  he shows that the character used in this situation is arbitrary and could also be a +  After playing around, this seems to have something to do with how executing a function declaration interacts with certain operators, definitely these + - ~ !  I'm not sure if that is a complete list. Can anyone get real technical about the syntax rules that are interacting here?", "group_id": 160, "id": 339835}, {"user_id": 8327, "stars": [], "topic_id": 10832, "date_created": 1300037386.5377409, "message": "Incidentally, it's also possible (but not really useful) to use \"typeof function(){}()\", other valid operators are; delete, void and new. These are all right-to-left associative operators, as are + - ~ !.", "group_id": 160, "id": 341794}, {"user_id": 8327, "stars": [], "topic_id": 10832, "date_created": 1300036743.626317, "message": "While I don't have a definitive answer, I would guess that the use of an operator (or parens forcing an evaluation) transforms what would otherwise be a declaration into a statement.", "group_id": 160, "id": 341717}, {"user_id": 21274, "stars": [{"date_created": 1300163314.534312, "user_id": 11969}, {"date_created": 1301647347.1354671, "user_id": 27047}, {"date_created": 1303775383.3467591, "user_id": 31031}], "topic_id": 10832, "date_created": 1300046626.914, "message": "The O'Reilly book \"JavaScript Patterns\" rocked my socks. http://oreilly.com/catalog/9780596806767/", "group_id": 160, "id": 343236}, {"user_id": 13919, "stars": [], "topic_id": 10832, "date_created": 1300132857.0997331, "message": "@scttnlsn agreed, JavaScript Patterns is a solid read", "group_id": 160, "id": 350392}, {"user_id": 18757, "stars": [], "topic_id": 10832, "date_created": 1299259347.4151731, "message": "@i8joe Interesting book.", "group_id": 160, "id": 271420}]