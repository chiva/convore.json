[{"user_id": 21178, "stars": [], "topic_id": 19125, "date_created": 1302669277.4435921, "message": "How do you deal with merging the old master when it comes back from a crash?", "group_id": 832, "id": 657714}, {"user_id": 723, "stars": [], "topic_id": 19125, "date_created": 1303363609.8444121, "message": "Easiest way is to migrate your apps to the slave (HA Proxy or whatever might be already doing this for you). When master comes back up, make it a slave of the old slave, which is now the new master.", "group_id": 832, "id": 766376}, {"user_id": 1736, "stars": [], "topic_id": 19125, "date_created": 1303367636.1934841, "message": "@andy Do you guys use some kind of proxy in front of Redis to handle this transparently, or just poke at the application config directly on a failure?", "group_id": 832, "id": 767048}, {"user_id": 21178, "stars": [], "topic_id": 19125, "date_created": 1303622879.646939, "message": "@andy So you are deleting the database on the old master and just losing whatever writes didn't get replicated?", "group_id": 832, "id": 792958}, {"user_id": 14931, "stars": [], "topic_id": 19125, "date_created": 1303696656.763447, "message": "Another option is to have two instances that are not replicated and have your application write to both of them.  If one dies, bring it up as a slave of the other, then stop replication when it is synced.", "group_id": 832, "id": 797916}, {"user_id": 28054, "stars": [{"date_created": 1305754895.8375659, "user_id": 1736}], "topic_id": 19125, "date_created": 1305753690.6168139, "message": "@coderanger We're in the process of deploying HA Redis using heartbeat.  Config on the clients doesn't need to change, since heartbeat reassigns the IP address to the slave.  One thing we did was add exponential backoff / retry logic in our client code so that Redis transactions are retried if they fail.  That's all we had to do.  Our testing suggests this works pretty well.  Failover takes about 5 seconds after the dead node is detected.  Our clients retry for up to 30 seconds.", "group_id": 832, "id": 1103399}]