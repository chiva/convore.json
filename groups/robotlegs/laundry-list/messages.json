[{"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297726931.6732831, "message": "Just a place to shove topics / ideas / features that need further discussion later.", "group_id": 2570, "id": 107858}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727131.9653511, "message": "Modularity. This is so high on my list. I love how Parsley handles it generally and want to make it as seamless as possible for developers while still being completely extensible.", "group_id": 2570, "id": 107898}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727357.057168, "message": "What about other architectures outside of the mediator approach. I love mediators, but PMs have merit too. It stinks to have to reflect views for PM though. Parsley has FastInject to handle that. What might be something that RL can do to facilitate non-reflective view injection?", "group_id": 2570, "id": 107933}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727673.967653, "message": "Logging hasn't been addressed and might be useful.", "group_id": 2570, "id": 107987}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727185.8507481, "message": "Documentation and the website in general. Organizing, wiki, what makes sense?", "group_id": 2570, "id": 107905}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727456.0084951, "message": "'formal' extension hooks that are well documented", "group_id": 2570, "id": 107955}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727476.7393401, "message": "Tighter prescription.", "group_id": 2570, "id": 107958}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727628.39359, "message": "@tjgillis presentation models. Popular alternative to the mediator approach that promotes binding to a presentation model in the view. It flips the mediator on its head in a way.", "group_id": 2570, "id": 107978}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297727289.409014, "message": "A better way to extend the context would be really nice. What does that mean? Does Shaun still hate the Context in general?", "group_id": 2570, "id": 107920}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297727574.002058, "message": "Integrated/utility 'architecture' mode that dumps out a structural representation of the project.", "group_id": 2570, "id": 107972}, {"user_id": 11099, "stars": [], "topic_id": 5828, "date_created": 1297728689.9118969, "message": "@jhooks this is very interesting me to. I've been considering doing something like this with my one of my projects just because PMs is generally how the team I'm on approaches things", "group_id": 2570, "id": 108112}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297727135.937721, "message": "Package / class naming: same as now, or different?", "group_id": 2570, "id": 107899}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297727290.9906199, "message": "Binding opportunities - ie CommandMap.execute() to return the command that was instantiated?", "group_id": 2570, "id": 107921}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297727362.1482091, "message": "'Special context' bootstrapping to add utilities / features.", "group_id": 2570, "id": 107934}, {"user_id": 11099, "stars": [], "topic_id": 5828, "date_created": 1297727573.7386, "message": "@jhooks I wish I understood any of what you said about PMs (whatever they are :P)", "group_id": 2570, "id": 107971}, {"user_id": 11099, "stars": [], "topic_id": 5828, "date_created": 1297727883.3891039, "message": "@jhooks  oooohhhh lol. I've been using PMs on other projects without knowing what it was called.", "group_id": 2570, "id": 108013}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297727512.3775151, "message": "Integrated 'PMD' mode that does introspection / advice / warnings.", "group_id": 2570, "id": 107961}, {"user_id": 11094, "stars": [], "topic_id": 5828, "date_created": 1297728311.3104441, "message": "What Stray said: CommandMap.execute() to return the command that was instantiated", "group_id": 2570, "id": 108068}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297728497.0914869, "message": "@tjgillis I have this concept swirling in my brain that combines both the PM and the mediator. I actually think the mediator is more of a controller tier actor. At the very least it is a view controller. There is a best of both worlds approach there someplace, but it would take more classes to run a view...", "group_id": 2570, "id": 108091}, {"user_id": 11099, "stars": [], "topic_id": 5828, "date_created": 1297728293.2369549, "message": "I'm not too sure what I prefer when it comes to MVC or PM. Both approaches are valid. Does anyone know of any good articles comparing the two styles?", "group_id": 2570, "id": 108065}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297732177.3033881, "message": "Standardised metadata", "group_id": 2570, "id": 108446}, {"user_id": 11124, "stars": [], "topic_id": 5828, "date_created": 1297730838.145211, "message": "I would love to see some slick implementations of RL and Signals. Like building a service layer in particular.", "group_id": 2570, "id": 108324}, {"user_id": 7782, "stars": [], "topic_id": 5828, "date_created": 1297731026.2652349, "message": "The relationship between RL and Signals is a good topic to discuss as well. I think that the core has to remain events, but? You know what is cool with Parsley? Messaging just uses objects. They can be events, but they are just objects. No strict ties.", "group_id": 2570, "id": 108340}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297731845.7277069, "message": "Be good to consider how the new SS micro-binding will impact on the way people who want to use the shortcuts mediate their views.", "group_id": 2570, "id": 108417}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297731712.2034619, "message": "I'd like to see a focus on keeping the barrier to entry for first-time-framework-users as low as it is already.", "group_id": 2570, "id": 108410}, {"user_id": 11121, "stars": [], "topic_id": 5828, "date_created": 1297775482.586786, "message": "Micro binding sounds awesome.", "group_id": 2570, "id": 110941}, {"user_id": 11632, "stars": [], "topic_id": 5828, "date_created": 1297802807.138129, "message": "Keeping the barrier for entry as low as possible is a good point. That's what I liked about Robotlegs, it's so easy to get started with.\nSo with that in mind I'd like it if future more advanced features are kept optional. For example, I like frameworks without a lot of magic where I can just program the OOP way (so without private injections, lots of metadata, ...). All those advanced features are cool, as long as they are optional. That's also why I like all those extensions for Robotlegs: they are optional, more advanced and don't clutter the core Robotlegs framework/micro architecture.", "group_id": 2570, "id": 114891}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297805263.9762261, "message": "Genuine question: to what extent can we assume that if the community hasn't already created a utility for feature X in robotlegs 1.x, and the hooks are already available, it should be considered part of the YAGNIATOR ?", "group_id": 2570, "id": 115398}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297805024.777041, "message": "@SlevinBE - I'm totally in agreement there. Minimal core + add ons is the way I'd like to see extra features added. When I open the api docs for parsley my heart just sinks...", "group_id": 2570, "id": 115340}, {"user_id": 11098, "stars": [], "topic_id": 5828, "date_created": 1297804964.465822, "message": "'Mini demos' that only include the important snippets from the relevant parts to demonstrate how to do X.", "group_id": 2570, "id": 115329}, {"user_id": 11094, "stars": [], "topic_id": 5828, "date_created": 1297832273.6698899, "message": "I'm intrigued by the possibility of messaging without explicitly using Event.  I'd love to cut down on the amount of custom events as long as it didn't add much magic and it was still type-safe.", "group_id": 2570, "id": 117698}]