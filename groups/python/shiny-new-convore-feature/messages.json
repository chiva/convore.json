[{"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299543959.4770081, "message": "Hope y'all enjoy it :)", "group_id": 292, "id": 292684}, {"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299543919.7032061, "message": "We just released a new feature", "group_id": 292, "id": 292680}, {"user_id": 1, "stars": [{"date_created": 1299544040.595258, "user_id": 719}, {"date_created": 1299544120.8309691, "user_id": 3235}, {"date_created": 1299544669.8454361, "user_id": 214}, {"date_created": 1299546895.2606211, "user_id": 9229}, {"date_created": 1299553521.2118869, "user_id": 19090}, {"date_created": 1299555639.1381531, "user_id": 12067}, {"date_created": 1299563338.2127659, "user_id": 486}, {"date_created": 1299569059.612318, "user_id": 5778}, {"date_created": 1299570798.0481751, "user_id": 11647}, {"date_created": 1299574991.7116799, "user_id": 1167}, {"date_created": 1299601519.2149079, "user_id": 1376}, {"date_created": 1299602161.9243121, "user_id": 12689}, {"date_created": 1299652186.4615231, "user_id": 3354}], "topic_id": 11401, "date_created": 1299543926.643754, "message": "function handleWrapLongLines(e) {\n    var elt = $(this);\n    var pre = elt.next();\n    if(pre.css('white-space') === 'pre-wrap') {\n        pre.css('white-space', 'pre');\n        elt.text('wrap text');\n    }\n    else {\n        pre.css('white-space', 'pre-wrap');\n        elt.text(\"don't wrap text\");\n    }\n    adjustPageScroll();\n    return false;\n}", "group_id": 292, "id": 292681}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299547398.7374821, "message": "neat", "group_id": 292, "id": 292923}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299547624.1293859, "message": "Well, same thing for images", "group_id": 292, "id": 292942}, {"user_id": 9229, "stars": [], "topic_id": 11401, "date_created": 1299546908.420104, "message": "So I wonder how it works...", "group_id": 292, "id": 292862}, {"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299547142.7312739, "message": "@r1chardj0n3s Just paste monospaced text. The algorithm is if the user pasted the content + it includes at least one newline.", "group_id": 292, "id": 292896}, {"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299547154.817945, "message": "Err just paste text, it doesn't need to bo monospace, we take care of that", "group_id": 292, "id": 292899}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299547391.695724, "message": "so", "group_id": 292, "id": 292921}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299547396.019928, "message": "so\nNOT\nthis", "group_id": 292, "id": 292922}, {"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299547595.654464, "message": "@issackelly Well the API gets the text back with the original spacing as entered by the user.  But you're right, we haven't extended the API yet to pass along the paste hint yet.", "group_id": 292, "id": 292939}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299547489.0377419, "message": "as an aside, it's interesting to me that these sorts of features work from the web-ui and not from the API in general", "group_id": 292, "id": 292929}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299547675.944284, "message": "or links", "group_id": 292, "id": 292947}, {"user_id": 2062, "stars": [{"date_created": 1299547263.6583631, "user_id": 1}], "topic_id": 11401, "date_created": 1299547236.950448, "message": "so it works for \nmultiple lines?", "group_id": 292, "id": 292902}, {"user_id": 2062, "stars": [], "topic_id": 11401, "date_created": 1299547428.9928541, "message": "does shift enter\nwork?", "group_id": 292, "id": 292924}, {"user_id": 2062, "stars": [], "topic_id": 11401, "date_created": 1299547432.5217521, "message": "nope", "group_id": 292, "id": 292925}, {"user_id": 2062, "stars": [], "topic_id": 11401, "date_created": 1299547478.898495, "message": "not saying it should, was just wondering.", "group_id": 292, "id": 292927}, {"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299547693.922955, "message": "@issackelly Yeah, we're not passing those hints along quite yet", "group_id": 292, "id": 292948}, {"user_id": 1081, "stars": [], "topic_id": 11401, "date_created": 1299550685.419405, "message": "testing", "group_id": 292, "id": 293053}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299555295.624769, "message": "@bitprophet i've never used one like that, but i have one project on the back burner that would totally use it!", "group_id": 292, "id": 293205}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299555323.6387789, "message": "mostly because it actually deals with things like dogs, human, furniture, etc", "group_id": 292, "id": 293206}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299555215.911586, "message": "def input_loop(chan, using_pty):\n    while not chan.exit_status_ready():\n        if win32:\n            have_char = msvcrt.kbhit()\n        else:\n            r, w, x = select([sys.stdin], [], [], 0.0)\n            have_char = (r and r[0] == sys.stdin)\n        if have_char:\n            # Send all local stdin to remote end's stdin\n            byte = msvcrt.getch() if win32 else sys.stdin.read(1)\n            chan.sendall(byte)\n            # Optionally echo locally, if needed.\n            if not using_pty and env.echo_stdin:\n                # Not using fastprint() here -- it prints as 'user'\n                # output level, don't want it to be accidentally hidden\n                sys.stdout.write(byte)\n                sys.stdout.flush()", "group_id": 292, "id": 293200}, {"user_id": 9229, "stars": [], "topic_id": 11401, "date_created": 1299552240.3630149, "message": ">>> import this\nThe Zen of Python, by Tim Peters", "group_id": 292, "id": 293084}, {"user_id": 9229, "stars": [], "topic_id": 11401, "date_created": 1299552261.6272199, "message": "ah, goodo. it'd be nice to have some feedback while composing the message.", "group_id": 292, "id": 293085}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299554790.9971621, "message": "trying to get it reasonably complete in time to do a lightning talk at pycon", "group_id": 292, "id": 293179}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299554437.414737, "message": "(and yes, owner.has(3).or_more.legs is a failing test)", "group_id": 292, "id": 293164}, {"user_id": 207, "stars": [{"date_created": 1299554471.3142631, "user_id": 1}, {"date_created": 1299601484.7784331, "user_id": 1376}], "topic_id": 11401, "date_created": 1299554397.3701911, "message": "def test():\n    with Specimen(Dog) as rover:\n        rover.has.tail\n        rover.has(4).legs\n        rover.can.bark()\n\n    with Specimen(Furniture) as couch:\n        couch.has(4).or_more.legs\n        couch.lacks.tail\n        couch.can_not.bark()\n        rover.can.hump(couch)\n\n    with Specimen(Human) as owner:\n        owner.has(2).legs\n        owner.lacks.tail\n        owner.has(3).or_more.legs\n        owner.lacks(3).or_more.legs\n        rover.can_not.hump(owner).because(BadDog)", "group_id": 292, "id": 293162}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299554406.8370111, "message": "just had to put my two cents in :)", "group_id": 292, "id": 293163}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299555215.50612, "message": "let me try to be on topic and probably fail hilariously", "group_id": 292, "id": 293199}, {"user_id": 3748, "stars": [], "topic_id": 11401, "date_created": 1299554359.2006509, "message": "Very cool, tks @ericflo", "group_id": 292, "id": 293160}, {"user_id": 3748, "stars": [{"date_created": 1299554372.603982, "user_id": 1}], "topic_id": 11401, "date_created": 1299554362.79301, "message": "import sys, boto\nfrom hashlib import md5\n\ntry:\n        bucket, key_name, local_name = sys.argv[1:]\nexcept:\n        sys.exit(\"wrong arguments\")\n\nc = boto.connect_s3()\nb = c.get_bucket(bucket, validate = False )\n\nwith open(local_name, \"r\") as f:\n        local_md5  = md5( f.read() ).hexdigest().upper()\nkey = b.get_key(key_name)\nremote_md5 = key.etag.replace('\"','').upper()\nif local_md5 == remote_md5:\n        print \"=\"\nelse:\n        print \"<>\"", "group_id": 292, "id": 293161}, {"user_id": 1, "stars": [], "topic_id": 11401, "date_created": 1299554475.297508, "message": "@Gulopine haha, that's awesome :D", "group_id": 292, "id": 293166}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299555185.0692129, "message": "@Gulopine Sadly I'd totally use a serious library along those lines, unpythonic as it is. Ruby has ruined me :(", "group_id": 292, "id": 293197}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299554806.3049049, "message": "\"Abusing Python for fun and ... well, it's just fun\"", "group_id": 292, "id": 293180}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299554808.9647281, "message": "or something like that", "group_id": 292, "id": 293182}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299555216.3393731, "message": "wootles", "group_id": 292, "id": 293201}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299555328.8903821, "message": "hah", "group_id": 292, "id": 293207}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299555330.67342, "message": "it'd be a really natural fit", "group_id": 292, "id": 293208}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299555343.3948891, "message": "philosophizing.py", "group_id": 292, "id": 293209}, {"user_id": 207, "stars": [], "topic_id": 11401, "date_created": 1299555400.215924, "message": "?", "group_id": 292, "id": 293213}, {"user_id": 9229, "stars": [], "topic_id": 11401, "date_created": 1299557790.641115, "message": "trying to \nembed a newline\nah, shift-enter works", "group_id": 292, "id": 293380}, {"user_id": 9229, "stars": [], "topic_id": 11401, "date_created": 1299557771.6349239, "message": "if testing_manually_typed_stuff:", "group_id": 292, "id": 293378}, {"user_id": 9229, "stars": [{"date_created": 1299557996.936635, "user_id": 1}], "topic_id": 11401, "date_created": 1299557804.342402, "message": "not preformatted though. looks like cutnpaste is the only way to go", "group_id": 292, "id": 293382}, {"user_id": 5778, "stars": [], "topic_id": 11401, "date_created": 1299569122.206773, "message": "@ericflo very nice work!", "group_id": 292, "id": 294802}, {"user_id": 18347, "stars": [], "topic_id": 11401, "date_created": 1299579946.284725, "message": ">> from __future__ import braces", "group_id": 292, "id": 295175}, {"user_id": 214, "stars": [{"date_created": 1299600789.16592, "user_id": 209}], "topic_id": 11401, "date_created": 1299592721.751986, "message": "@ericflo Why bother with cut-n-paste detection? Campfire just preformats anything with an embedded newline, which always seemed pretty intuitive to me. If you're bothering to embed a newline, chances are you want preformatting.", "group_id": 292, "id": 296069}, {"user_id": 209, "stars": [], "topic_id": 11401, "date_created": 1299600868.4176049, "message": "@carljm's method is the only way to do it in the API as well, as I can't detect if an over-the-wire message was pasted or input manually, so that's what I'm doing.", "group_id": 292, "id": 297223}, {"user_id": 4156, "stars": [{"date_created": 1299609677.579644, "user_id": 5778}], "topic_id": 11401, "date_created": 1299600514.3893411, "message": "Also, woodchucks.", "group_id": 292, "id": 297187}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299600488.6515391, "message": "@carljm Not saying this is @ericflo's reasoning but Campfire pissed me right off by constantly mis-detecting whether I had intended to paste, or use newlines, or both, or neither.", "group_id": 292, "id": 297185}, {"user_id": 4156, "stars": [], "topic_id": 11401, "date_created": 1299600506.9138701, "message": "So lots of non-code-blocked code and code-blocked non-code :(", "group_id": 292, "id": 297186}, {"user_id": 12133, "stars": [], "topic_id": 11401, "date_created": 1299602665.8344581, "message": "cal_md5  = md5( f.read() ).hexdigest().upper()\nkey = b.g", "group_id": 292, "id": 297451}, {"user_id": 7376, "stars": [], "topic_id": 11401, "date_created": 1299609059.7013071, "message": "def test():\n    return \"foo\"\n", "group_id": 292, "id": 298190}, {"user_id": 214, "stars": [], "topic_id": 11401, "date_created": 1299607253.6758189, "message": "@bitprophet Hmm, that's never bothered me. Their pre-formatted version is useful for non-code too, e.g. when you paste in a long email or something and you get a link to view the full thing rather than having it destroy your conversation backlog.", "group_id": 292, "id": 297858}, {"user_id": 7376, "stars": [], "topic_id": 11401, "date_created": 1299609070.6008611, "message": "what if I cut\nfrom this field\nand then paste it", "group_id": 292, "id": 298193}, {"user_id": 8391, "stars": [], "topic_id": 11401, "date_created": 1299609152.3239131, "message": "that's so awesome", "group_id": 292, "id": 298219}, {"user_id": 5701, "stars": [], "topic_id": 11401, "date_created": 1299609009.530252, "message": "what if I cut", "group_id": 292, "id": 298172}, {"user_id": 8391, "stars": [], "topic_id": 11401, "date_created": 1299609147.7802701, "message": "Where possible, please follow PEP8 with regard to coding style. Sometimes the\nline length restriction is too hard to follow, so don't bend over backwards\nthere.\n\nTriple-quotes should always be \"\"\", single quotes are ' unless using \" would\nresult in less escaping within the string.", "group_id": 292, "id": 298216}, {"user_id": 5701, "stars": [], "topic_id": 11401, "date_created": 1299609023.1629219, "message": "what if I cut\n    from this field\nand then paste it", "group_id": 292, "id": 298180}, {"user_id": 7376, "stars": [], "topic_id": 11401, "date_created": 1299608994.033726, "message": "def can_i_type_it_in():\n    test()", "group_id": 292, "id": 298168}, {"user_id": 13501, "stars": [], "topic_id": 11401, "date_created": 1299615330.447572, "message": "You can Shift+Enter(Return) to get\nmultiple lines without C&P (at least\non Firefox Win)", "group_id": 292, "id": 299092}, {"user_id": 218, "stars": [], "topic_id": 11401, "date_created": 1299622690.925853, "message": "... but to be safe ;)", "group_id": 292, "id": 300113}, {"user_id": 218, "stars": [], "topic_id": 11401, "date_created": 1299622661.9433601, "message": "/me doesn't actually care.", "group_id": 292, "id": 300105}, {"user_id": 218, "stars": [], "topic_id": 11401, "date_created": 1299622559.8195109, "message": "load test..", "group_id": 292, "id": 300085}, {"user_id": 7376, "stars": [], "topic_id": 11401, "date_created": 1299622768.8414371, "message": "@justinlilly I think the only thing exposed was your private atom feed", "group_id": 292, "id": 300126}, {"user_id": 218, "stars": [], "topic_id": 11401, "date_created": 1299622569.8637381, "message": "hrm. just curious. forgive my dickery.", "group_id": 292, "id": 300091}, {"user_id": 7376, "stars": [], "topic_id": 11401, "date_created": 1299622650.1120889, "message": "@justinlilly thanks for your session token :)", "group_id": 292, "id": 300103}, {"user_id": 4546, "stars": [], "topic_id": 11401, "date_created": 1299639415.370482, "message": "def test():\n    pass", "group_id": 292, "id": 301238}, {"user_id": 1874, "stars": [], "topic_id": 11401, "date_created": 1299639563.5611119, "message": "def test():\npass", "group_id": 292, "id": 301245}, {"user_id": 4546, "stars": [], "topic_id": 11401, "date_created": 1299639511.691601, "message": "function handleWrapLongLines(e) {\n    var elt = $(this);\n    var pre = elt.next();\n    if(pre.css('white-space') === 'pre-wrap') {\n        pre.css('white-space', 'pre');\n        elt.text('wrap text');\n    }\n    else {\n        pre.css('white-space', 'pre-wrap');\n        elt.text(\"don't wrap text\");\n    }\n    adjustPageScroll();\n    return false;\n}", "group_id": 292, "id": 301243}, {"user_id": 13501, "stars": [], "topic_id": 11401, "date_created": 1299666582.9445419, "message": "def test():\npass", "group_id": 292, "id": 303537}, {"user_id": 13501, "stars": [], "topic_id": 11401, "date_created": 1299666576.5702219, "message": "def test():\npass", "group_id": 292, "id": 303535}, {"user_id": 15927, "stars": [], "topic_id": 11401, "date_created": 1299666944.157352, "message": "def test():\npass\n", "group_id": 292, "id": 303569}, {"user_id": 13501, "stars": [], "topic_id": 11401, "date_created": 1299666600.435812, "message": "ok... so using Shift+Enter would make it break...", "group_id": 292, "id": 303541}, {"user_id": 4219, "stars": [], "topic_id": 11401, "date_created": 1299682752.160738, "message": "I was confused as to the feature, I thought the feature had to do with the actual code you pasted hehe.", "group_id": 292, "id": 305361}]