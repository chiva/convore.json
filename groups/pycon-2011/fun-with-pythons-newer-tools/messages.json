[{"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300033853.784919, "message": "Ah, so it does", "group_id": 373, "id": 341577}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300031919.188724, "message": "haha", "group_id": 373, "id": 341357}, {"user_id": 20709, "stars": [{"date_created": 1300032920.603178, "user_id": 18540}], "topic_id": 12806, "date_created": 1300032837.4018149, "message": "I like the asking questions presentation technique", "group_id": 373, "id": 341487}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300033689.0997231, "message": "time? we don't need no stinking time", "group_id": 373, "id": 341572}, {"user_id": 14463, "stars": [{"date_created": 1300036922.014487, "user_id": 19652}], "topic_id": 12806, "date_created": 1300033734.7443731, "message": "+1 for string.Template \u2014 have used, made me happy.", "group_id": 373, "id": 341573}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300033862.9481781, "message": "Also, +1 on doing user testing. Awesome!", "group_id": 373, "id": 341578}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300031934.4726429, "message": "Yea, it seems identical\u2026", "group_id": 373, "id": 341360}, {"user_id": 14463, "stars": [{"date_created": 1300032447.850595, "user_id": 1289}, {"date_created": 1300032531.837173, "user_id": 177}], "topic_id": 12806, "date_created": 1300032434.7604909, "message": ">>>", "group_id": 373, "id": 341421}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032532.7057719, "message": "2.6", "group_id": 373, "id": 341430}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300032582.9837389, "message": "again... how is it different from a dict?", "group_id": 373, "id": 341434}, {"user_id": 20795, "stars": [], "topic_id": 12806, "date_created": 1300032663.246151, "message": "Thinking the same think, but I suspect we are about to find out.", "group_id": 373, "id": 341451}, {"user_id": 20709, "stars": [], "topic_id": 12806, "date_created": 1300032815.7441161, "message": "I missed the pymemory one but saw the slides", "group_id": 373, "id": 341480}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032900.8065929, "message": "But of course we'd never have fields named `_replace` ;)", "group_id": 373, "id": 341496}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300033216.9181991, "message": "neat", "group_id": 373, "id": 341543}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032162.6642611, "message": "most_common() looks really useful!", "group_id": 373, "id": 341397}, {"user_id": 18540, "stars": [{"date_created": 1300032487.5140581, "user_id": 14463}, {"date_created": 1300033022.751107, "user_id": 1289}], "topic_id": 12806, "date_created": 1300032479.950762, "message": "LOVE namedtuple", "group_id": 373, "id": 341425}, {"user_id": 20709, "stars": [{"date_created": 1300032903.341217, "user_id": 177}], "topic_id": 12806, "date_created": 1300032891.0221181, "message": "_asgoat?", "group_id": 373, "id": 341494}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032222.5778141, "message": "elements is nifty too", "group_id": 373, "id": 341401}, {"user_id": 20709, "stars": [], "topic_id": 12806, "date_created": 1300032499.898766, "message": "what's the base python version for namedtuple", "group_id": 373, "id": 341426}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300031917.3941531, "message": "How is this different from `defaultdict(lambda: 0)`?", "group_id": 373, "id": 341355}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300031994.742842, "message": "Ah, ok, deleting from a defaultdict throws a KeyError if the key doesn't exist", "group_id": 373, "id": 341371}, {"user_id": 5694, "stars": [], "topic_id": 12806, "date_created": 1300032424.5289819, "message": "wha, subtract() and - have different behavior?", "group_id": 373, "id": 341420}, {"user_id": 1243, "stars": [{"date_created": 1300032631.043983, "user_id": 18540}], "topic_id": 12806, "date_created": 1300032592.807616, "message": "It's immutable and stupid fast.", "group_id": 373, "id": 341436}, {"user_id": 1243, "stars": [], "topic_id": 12806, "date_created": 1300032596.9424429, "message": "Also, orderig", "group_id": 373, "id": 341438}, {"user_id": 5694, "stars": [], "topic_id": 12806, "date_created": 1300032709.9803929, "message": "what about runtime overhead?", "group_id": 373, "id": 341459}, {"user_id": 20709, "stars": [{"date_created": 1300032740.721384, "user_id": 18540}, {"date_created": 1300036203.4352751, "user_id": 3926}], "topic_id": 12806, "date_created": 1300032732.3713651, "message": "that wound be << dict, bob", "group_id": 373, "id": 341465}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300033831.913558, "message": "Named tuple supports \",\"?", "group_id": 373, "id": 341576}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300031899.993027, "message": "Collections.Counter can delete or add without key error. What's difference between that and defaultdict?", "group_id": 373, "id": 341351}, {"user_id": 18540, "stars": [{"date_created": 1300032381.2201729, "user_id": 1243}], "topic_id": 12806, "date_created": 1300032361.619487, "message": "we read knuth so you don't have to", "group_id": 373, "id": 341408}, {"user_id": 1243, "stars": [{"date_created": 1300033048.758302, "user_id": 1289}], "topic_id": 12806, "date_created": 1300032696.903311, "message": "I love namedtuples.", "group_id": 373, "id": 341456}, {"user_id": 1289, "stars": [], "topic_id": 12806, "date_created": 1300031967.020757, "message": "Raymond Hettinger is awesome in case anyone was up in the air for some reason.", "group_id": 373, "id": 341366}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032473.7862189, "message": "Or if you prefer:\nIn [1]:", "group_id": 373, "id": 341423}, {"user_id": 20745, "stars": [{"date_created": 1300032855.4252319, "user_id": 1243}], "topic_id": 12806, "date_created": 1300032832.077867, "message": "would be interesting to see this used in say... psycopg2.", "group_id": 373, "id": 341484}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300032903.502491, "message": "orly. :)", "group_id": 373, "id": 341497}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300033268.325825, "message": "The unmatched parens threw me there =\\", "group_id": 373, "id": 341549}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300031918.3790519, "message": "Err", "group_id": 373, "id": 341356}, {"user_id": 14957, "stars": [{"date_created": 1300032328.3874481, "user_id": 19652}, {"date_created": 1300032389.8130951, "user_id": 214}, {"date_created": 1300032544.9196651, "user_id": 4156}], "topic_id": 12806, "date_created": 1300031974.6214011, "message": "it's dunder Raymond. we voted on it last night at the chairman's party. please see Brett for reprogramming.", "group_id": 373, "id": 341369}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032028.2847409, "message": "Ah, and the `most_common` method too", "group_id": 373, "id": 341374}, {"user_id": 1243, "stars": [], "topic_id": 12806, "date_created": 1300032600.824383, "message": "ordering, even", "group_id": 373, "id": 341439}, {"user_id": 20709, "stars": [], "topic_id": 12806, "date_created": 1300032621.680805, "message": "sweet", "group_id": 373, "id": 341442}, {"user_id": 18540, "stars": [{"date_created": 1300032684.1845679, "user_id": 1243}], "topic_id": 12806, "date_created": 1300032677.5424371, "message": "namedtuple space cost is zero!", "group_id": 373, "id": 341454}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032712.4003861, "message": "@davidblewett zero overhead, faster lookup", "group_id": 373, "id": 341460}, {"user_id": 20709, "stars": [], "topic_id": 12806, "date_created": 1300032768.2135489, "message": "memory usage", "group_id": 373, "id": 341472}, {"user_id": 20709, "stars": [], "topic_id": 12806, "date_created": 1300032399.145278, "message": "this is how it's different than a default dict", "group_id": 373, "id": 341414}, {"user_id": 1243, "stars": [], "topic_id": 12806, "date_created": 1300032519.7872961, "message": "2.5 or 2.6", "group_id": 373, "id": 341428}, {"user_id": 1243, "stars": [], "topic_id": 12806, "date_created": 1300032525.760813, "message": "Looking now", "group_id": 373, "id": 341429}, {"user_id": 1243, "stars": [], "topic_id": 12806, "date_created": 1300032630.2867429, "message": "Probably less memory, too, but I don't know for sure.", "group_id": 373, "id": 341444}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032093.1591561, "message": "defaultdict is more flexible in types that it handles", "group_id": 373, "id": 341388}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032131.8106239, "message": "Counter doesn't create new keys when queried", "group_id": 373, "id": 341393}, {"user_id": 20709, "stars": [{"date_created": 1300032359.2877109, "user_id": 14463}], "topic_id": 12806, "date_created": 1300032346.060082, "message": "woah. casual sliding into knuth", "group_id": 373, "id": 341407}, {"user_id": 14957, "stars": [], "topic_id": 12806, "date_created": 1300032386.439409, "message": "my mind was just blown.", "group_id": 373, "id": 341410}, {"user_id": 14957, "stars": [], "topic_id": 12806, "date_created": 1300032417.579989, "message": "I need a python prompt. right NOW.", "group_id": 373, "id": 341418}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032548.2477751, "message": "http://docs.python.org/library/collections.html#collections.namedtuple", "group_id": 373, "id": 341432}, {"user_id": 20792, "stars": [], "topic_id": 12806, "date_created": 1300032587.8501029, "message": "wow.... available on v2.6", "group_id": 373, "id": 341435}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300032606.5820999, "message": "ah", "group_id": 373, "id": 341440}, {"user_id": 20750, "stars": [], "topic_id": 12806, "date_created": 1300032626.7871151, "message": "@davidblewett immutable", "group_id": 373, "id": 341443}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300032724.8669059, "message": "hehe, thanks. :)", "group_id": 373, "id": 341461}, {"user_id": 19652, "stars": [], "topic_id": 12806, "date_created": 1300032783.4200621, "message": "I made a mistake I should have been there :(", "group_id": 373, "id": 341475}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032728.671675, "message": "@davidblewett you can also use list expansions: failed, attempted = results", "group_id": 373, "id": 341463}, {"user_id": 20745, "stars": [], "topic_id": 12806, "date_created": 1300032731.8438499, "message": "patience grasshopper", "group_id": 373, "id": 341464}, {"user_id": 14463, "stars": [], "topic_id": 12806, "date_created": 1300032760.743542, "message": "@wiredfool << dict? 0_o", "group_id": 373, "id": 341471}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032960.1822159, "message": "whenever you have any object that has keys and values, use a dict", "group_id": 373, "id": 341503}, {"user_id": 1243, "stars": [], "topic_id": 12806, "date_created": 1300032799.31376, "message": "The sample implementations are awesome.", "group_id": 373, "id": 341476}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032832.3079741, "message": "fast and easy, my favorite!", "group_id": 373, "id": 341485}, {"user_id": 560, "stars": [], "topic_id": 12806, "date_created": 1300033648.5982931, "message": "lru_cache is untrustworthy if you have mutable arguments", "group_id": 373, "id": 341568}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300033148.924628, "message": "create a prototype and clone from it and you have instant instances. Woot!", "group_id": 373, "id": 341534}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300032995.3775351, "message": "key/value pairs should be able to turn into a dict and back again", "group_id": 373, "id": 341511}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300033748.0944431, "message": "if you have to combine python and javascript, use the string.Template", "group_id": 373, "id": 341574}, {"user_id": 5694, "stars": [{"date_created": 1300032908.4765999, "user_id": 1243}], "topic_id": 12806, "date_created": 1300032892.4097619, "message": "@davidblewett psycopg2 uses 'em", "group_id": 373, "id": 341495}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300033044.2039239, "message": "no more ugly slicing to replace the first item in a tuple!", "group_id": 373, "id": 341524}, {"user_id": 18540, "stars": [{"date_created": 1300033529.8348379, "user_id": 19652}], "topic_id": 12806, "date_created": 1300033467.9816589, "message": "LRU Cache can be used on older versions of python", "group_id": 373, "id": 341558}, {"user_id": 18540, "stars": [], "topic_id": 12806, "date_created": 1300033573.1920791, "message": "@lru_cache() makes fibonacci fast and efficient!", "group_id": 373, "id": 341562}, {"user_id": 6600, "stars": [], "topic_id": 12806, "date_created": 1300033673.3398869, "message": "I love how Raymond has just ignored the time limit in both of his talks.", "group_id": 373, "id": 341571}]