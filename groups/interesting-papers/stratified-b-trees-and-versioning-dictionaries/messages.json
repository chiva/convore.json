[{"user_id": 14944, "stars": [{"date_created": 1302673706.3083169, "user_id": 719}, {"date_created": 1303674830.4213541, "user_id": 1516}], "topic_id": 19102, "date_created": 1302658429.2206349, "message": "I remembered to post the abstract :P", "group_id": 12, "id": 654495}, {"user_id": 14944, "stars": [], "topic_id": 19102, "date_created": 1302658395.897939, "message": "Abstract\nA classic versioned data structure in storage and computer science is the copy-on-write (CoW) B-tree -- it underlies many of today's file systems and databases, including WAFL, ZFS, Btrfs and more. Unfortunately, it doesn't inherit the B-tree's optimality properties; it has poor space utilization, cannot offer fast updates, and relies on random IO to scale. Yet, nothing better has been developed since. We describe the `stratified B-tree', which beats all known semi-external memory versioned B-trees, including the CoW B-tree. In particular, it is the first versioned dictionary to achieve optimal tradeoffs between space, query and update performance. ", "group_id": 12, "id": 654489}, {"user_id": 14944, "stars": [{"date_created": 1302812614.811528, "user_id": 21819}], "topic_id": 19102, "date_created": 1302658416.3362269, "message": "http://arxiv.org/pdf/1103.4282v2", "group_id": 12, "id": 654493}]