[{"user_id": 2789, "stars": [], "topic_id": 13681, "date_created": 1300400726.7643139, "message": "I know there are several options when it comes to using grep in vim (see http://vim.wikia.com/wiki/Find_in_files_within_Vim). I was wondering if there was an easy way to open the file listed in the results.", "group_id": 100, "id": 378205}, {"user_id": 6389, "stars": [{"date_created": 1300455372.673557, "user_id": 21122}, {"date_created": 1300471802.0758469, "user_id": 1243}, {"date_created": 1300627157.233217, "user_id": 19090}, {"date_created": 1300798922.9857409, "user_id": 16810}], "topic_id": 13681, "date_created": 1300401968.9407401, "message": "I prefer ack.vim (https://github.com/mileszs/ack.vim) it opens the results in a split window and enter will open the file.", "group_id": 100, "id": 378334}, {"user_id": 2142, "stars": [], "topic_id": 13681, "date_created": 1300405629.9129119, "message": "ack is the answer", "group_id": 100, "id": 378608}, {"user_id": 1873, "stars": [{"date_created": 1300630341.1514289, "user_id": 13919}], "topic_id": 13681, "date_created": 1300418156.0210421, "message": "@zimbatm Agreed.  http://betterthangrep.com. There's also an Ack plugin for vim iirc.", "group_id": 100, "id": 379528}, {"user_id": 1873, "stars": [{"date_created": 1300630347.7333889, "user_id": 13919}], "topic_id": 13681, "date_created": 1300418216.4731331, "message": "ack.vim: http://www.vim.org/scripts/script.php?script_id=2572", "group_id": 100, "id": 379534}, {"user_id": 1873, "stars": [], "topic_id": 13681, "date_created": 1300418237.7978721, "message": "ugh, apparently I can't read.  @chrisgibson already linked it.", "group_id": 100, "id": 379538}, {"user_id": 1873, "stars": [], "topic_id": 13681, "date_created": 1300418241.707819, "message": "My bad :)", "group_id": 100, "id": 379540}, {"user_id": 12677, "stars": [], "topic_id": 13681, "date_created": 1300465233.6107979, "message": "Yeah, it's easy to open the file listed in the result. grep is handled by the quickfix system. :grep foo %% is usually what I do (%% for all the opened buffer). Then you'll see all the hits. Hit enter and you'll go to the file for the first hit. :cn go to the next one. :cp to the previous one. :cl list all of them. You don't need any plugin, and on windows you don't even need grep, just replace :grep by :vimgrep", "group_id": 100, "id": 383234}, {"user_id": 2789, "stars": [], "topic_id": 13681, "date_created": 1300473248.5852361, "message": "@bsergean that\u2019s pretty good actually. But is it at all possible to call up the list with :cl and then ask to open a particular result instead of having to use :cn or :cp to navigate through all of them?", "group_id": 100, "id": 384456}, {"user_id": 22642, "stars": [], "topic_id": 13681, "date_created": 1300539719.739162, "message": "+1 for ack.", "group_id": 100, "id": 388159}, {"user_id": 1355, "stars": [], "topic_id": 13681, "date_created": 1300604898.3780949, "message": "@bsergean is %% something you've mapped? For me, `:grep foo %%` expands the current buffer's filename twice, without a space between the two occurrences.", "group_id": 100, "id": 390960}, {"user_id": 3409, "stars": [], "topic_id": 13681, "date_created": 1300626292.3551791, "message": "@adrianocastro Sure, just use :cw to bring up the \"quickfix\" list, and there you'll see all the results and can hit \"enter\" to go to one.", "group_id": 100, "id": 391857}, {"user_id": 1822, "stars": [], "topic_id": 13681, "date_created": 1300692154.37921, "message": "I've been having trouble with ack for some reason returning no results - check working dir, seems OK.  Quit and restart macvim, and then ack results as expected.  Is there some command to kickstart or reset ack in some way?", "group_id": 100, "id": 396320}, {"user_id": 20848, "stars": [], "topic_id": 13681, "date_created": 1300702541.439024, "message": "This is sort of a different question, but does anyone have a way to emulate the \"find in project\" feature in textmate?  I suppose you'd just grep/awk pattern ../../whatever but perhaps there's a shorter way?", "group_id": 100, "id": 396969}, {"user_id": 2833, "stars": [], "topic_id": 13681, "date_created": 1300703571.938349, "message": "@sequoia I think you want tags. See :help tags", "group_id": 100, "id": 397072}, {"user_id": 2588, "stars": [], "topic_id": 13681, "date_created": 1300723309.2587881, "message": "@ptone Do you have pyflakes installed? I often see similar behavior since pyflakes also uses the quickfix window.", "group_id": 100, "id": 399339}, {"user_id": 1822, "stars": [], "topic_id": 13681, "date_created": 1300725640.808419, "message": "@unbracketed I do, but only use the highlight hinting - will try:\nlet g:pyflakes_use_quickfix = 0\nand see if the problem goes away - thanks", "group_id": 100, "id": 399795}, {"user_id": 2789, "stars": [], "topic_id": 13681, "date_created": 1300735205.3751509, "message": "@edanm if I try hitting enter in the results list I get an error message: \u201cE21: Cannot make changes, \u2018modifiable\u2019 is off\u201d.", "group_id": 100, "id": 401683}, {"user_id": 14470, "stars": [{"date_created": 1301397686.6034701, "user_id": 20745}], "topic_id": 13681, "date_created": 1300757094.911386, "message": "+1 for ack.vim. The latest version (via github, https://github.com/mileszs/ack.vim) adds some nice touches. My biggest issue was starting ack while in a nerd tree buffer, then ack would load the first match in the file browser :( The latest version adds the :Ack! which only shows the results and does not open the first one. #win", "group_id": 100, "id": 404230}, {"user_id": 3409, "stars": [], "topic_id": 13681, "date_created": 1300955346.453552, "message": "@adrianocastro That happened to me too. It's because you've mapped \"Enter\" to something that tries to modify the buffer. Get rid of the mapping and you should be OK.", "group_id": 100, "id": 424827}, {"user_id": 19808, "stars": [], "topic_id": 13681, "date_created": 1300962859.8335421, "message": "I'll have to check out Ack, but I've had no problems using EasyGrep. This gives you a split window with results (filenames + excerpts) which you can click on to open up and edit.", "group_id": 100, "id": 425476}, {"user_id": 12677, "stars": [], "topic_id": 13681, "date_created": 1301382241.1573901, "message": "@nelstrom ... sorry, I meant ##", "group_id": 100, "id": 467290}, {"user_id": 12677, "stars": [], "topic_id": 13681, "date_created": 1301382332.157573, "message": "@adrianocastro You'll have to type :cl to list all the hits with their ids, and then :cc <id> to jump to that one.", "group_id": 100, "id": 467307}, {"user_id": 13339, "stars": [], "topic_id": 13681, "date_created": 1301415864.523222, "message": "I use `set grepprg=grep\\ -rn\\ --color=never\\ --exclude-dir=.env\\ --exclude-dir=.git\\ --exclude-dir=.svn\\ --exclude-dir=.Trash` in my ~/.vimrc then `:grep pattern .` and :cw to open the list in a split.", "group_id": 100, "id": 470574}, {"user_id": 1355, "stars": [], "topic_id": 13681, "date_created": 1301468761.8687489, "message": "@bsergean incidentally, I recently added this mapping to my .vimrc: `cnoremap %% <C-R>=expand('%:h').'/'<cr>` - now when I press %% in Vim's commandline, it expands to the path for the file that I'm currently editing. More context here, under the 'Update' heading: http://vimcasts.org/episodes/the-edit-command/", "group_id": 100, "id": 479218}, {"user_id": 1355, "stars": [], "topic_id": 13681, "date_created": 1301468398.694948, "message": "@bsergean thanks for clearing that up! Running `:help ##` tells me that \"## is replaced with all names in the argument list concatenated, separated by spaces.  Each space in a name is preceded with a backslash.\" I'd been looking for something like that, but didn't realize it already existed.", "group_id": 100, "id": 479100}, {"user_id": 14243, "stars": [], "topic_id": 13681, "date_created": 1301488005.566529, "message": "I have a map to look for the word im standing on on my files tree using Ack like this... :nmap <leader>g \"zyiw:exe \"Ack \".@z.\"\"<CR>", "group_id": 100, "id": 481135}]