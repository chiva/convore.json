[{"user_id": 2148, "stars": [], "topic_id": 22043, "date_created": 1304096413.243746, "message": "I think you should write the blog post first. ;)", "group_id": 2768, "id": 859796}, {"user_id": 8391, "stars": [], "topic_id": 22043, "date_created": 1304096429.0034781, "message": "I don't have anything to bring to the table, but I look forward to reading it :)", "group_id": 2768, "id": 859799}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1304096546.9159999, "message": "@DasIch The argument is about the design, not whether it works or not.", "group_id": 2768, "id": 859820}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1304097034.7517109, "message": "Ring: https://github.com/mmcgrana/ring", "group_id": 2768, "id": 859914}, {"user_id": 8391, "stars": [], "topic_id": 22043, "date_created": 1304096015.9712889, "message": "What's sparking this?", "group_id": 2768, "id": 859718}, {"user_id": 2313, "stars": [{"date_created": 1304314274.266242, "user_id": 8391}], "topic_id": 22043, "date_created": 1304096459.673558, "message": "It just works for a hell of a lot of people. Such a discussion is pointless until you can show that it somehow doesn't work for some people.", "group_id": 2768, "id": 859804}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1304095717.905262, "message": "I'm looking for arguments on both side of this issue, so please discuss (a) Why you think the Rack/WSGI model is broken or (b) Why you think the Rack/WSGI model is NOT broken. Specific examples appreciated.", "group_id": 2768, "id": 859652}, {"user_id": 31667, "stars": [], "topic_id": 22043, "date_created": 1304096851.3605919, "message": "We (the community working on Ring) have thought about the design question a lot and still have not found a satisfactory answer.", "group_id": 2768, "id": 859867}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1304096148.806468, "message": "@kennethreitz I'm currently on one side of the issue, but I want to hear what other people think before I make up my mind.", "group_id": 2768, "id": 859753}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1304096701.898699, "message": "... maybe this should have been in the flamewar room.", "group_id": 2768, "id": 859836}, {"user_id": 3611, "stars": [{"date_created": 1304096408.9557321, "user_id": 8391}, {"date_created": 1304096510.5399809, "user_id": 4156}], "topic_id": 22043, "date_created": 1304096159.476198, "message": "@kennethreitz ...and then blog about it.", "group_id": 2768, "id": 859762}, {"user_id": 31667, "stars": [{"date_created": 1304118143.323698, "user_id": 2107}], "topic_id": 22043, "date_created": 1304096729.782933, "message": "@seancribbs my experience with Ring has been that the req/app/res as map/fun/map paradigm captures most of HTTP that is relevant to most simple web apps. The problem we've had is that this is not sufficiently general. A lot of use cases for HTTP, e.g. streaming uploading and long polling, are very poorly served by this model. Then you need a different HTTP abstraction (or a raw binding) to handle those cases. It's not awesome to have these two paths. I'm not sure if the benefits in the common case of map/fun/map are strong enough to outweigh the cost of a non-general model.", "group_id": 2768, "id": 859843}, {"user_id": 1, "stars": [], "topic_id": 22043, "date_created": 1304104731.7317009, "message": "I don't think it's a necessarily broken way, it's just a more language-specific abstraction.", "group_id": 2768, "id": 861630}, {"user_id": 1, "stars": [], "topic_id": 22043, "date_created": 1304104792.331567, "message": "One of the core things that people do with wsgi is to add layers which build up Python objects that can be used in another layer of the stack.  I'm not really sure how that could be done in HTTP.", "group_id": 2768, "id": 861650}, {"user_id": 31726, "stars": [], "topic_id": 22043, "date_created": 1304117578.71365, "message": "Furthermore, in most applications the 90-10 (or higher) rule applies that the parts that need to be \"efficient\" or \"advanced\" and use websockets / long polling / etc can and *should* be abstracted into separate services in separate backends and balanced appropriately, in order to provide architectural, library and normal sane encapsulation boundaries. This also makes operational management significantly easier. Trying to pack several different styles of common IO and response patterns into single processes often causes all kinds of mess and complexity that will bite you at some point. Even collecting cleanly separated metrics in these scenarios to identify problems becomes a major pain - try it and see, if you can't see it.", "group_id": 2768, "id": 864801}, {"user_id": 31726, "stars": [{"date_created": 1304125040.5778589, "user_id": 4935}, {"date_created": 1304181249.8203621, "user_id": 2410}, {"date_created": 1304271339.1305101, "user_id": 1516}], "topic_id": 22043, "date_created": 1304117435.2011139, "message": "Broken is not the thing. It's a lightweight abstraction. More complex / flexible abstractions require more work at every step. I've been doing async hacks through the rack API about as long as anyone (I had the first implementation in Thin (ruby for those that aren't aware)). It's always been a pain point having to implement it like that, but a lot of investigation and authoring of alternative apis, every one makes middleware more complex, and the response model more prone to poorly handled error conditions. Encapsulation and error handling are poorly handled by users (developers) in general and as such, providing simple abstractions that do sane things in these scenarios provides a sufficient system for the 90-10 rule and probably more.", "group_id": 2768, "id": 864799}, {"user_id": 16, "stars": [], "topic_id": 22043, "date_created": 1304278381.2938399, "message": "(fab) is fully asynchronous and hard as hell to use for normal stuff.  Rack/wsgi definitely isn't broken with the awesome apps people build.", "group_id": 2768, "id": 877434}, {"user_id": 16, "stars": [], "topic_id": 22043, "date_created": 1304278389.319943, "message": "Maybe it IS time for a RackMachine port :)", "group_id": 2768, "id": 877438}, {"user_id": 16058, "stars": [], "topic_id": 22043, "date_created": 1304320133.519346, "message": "I was always wondering why python/ruby apps don't just listen to regular http on a unix domain socket and frontends like nginx proxy requests to it\u2026 unix way is the best way", "group_id": 2768, "id": 880996}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1304571917.542115, "message": "@technoweenie s/Rack/Web/", "group_id": 2768, "id": 924524}, {"user_id": 34894, "stars": [], "topic_id": 22043, "date_created": 1306983851.0554471, "message": "@myfreeweb Because some people develop on Windows... for some obscure reason.", "group_id": 2768, "id": 1262095}, {"user_id": 3611, "stars": [], "topic_id": 22043, "date_created": 1317653877.934655, "message": "FYI, I addressed this discussion (finally) at RubyConf. http://rubyconf-webmachine.heroku.com/  I guess my point was that Rack is not \"broken\", but a bad model for HTTP-based apps. You can \"make it work\", but its model does not help you get there.", "group_id": 2768, "id": 2267512}]