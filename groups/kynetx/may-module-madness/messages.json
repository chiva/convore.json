[{"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305332598.0293, "message": "I've been wanting to release a kynetx module for access Qwerly data for weeks now. The time is ripe. So while I'm hack'in KRL it just seemed like a good idea to share bits of knowledge as I learn them for myself ...", "group_id": 236, "id": 1048866}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305332782.8477061, "message": "Within the Hoverme app I make calls to Qwerly via a datasource. One reason is to hide my API Key, but the major benefit is the caching that is offered by KNS when using a datasource. So as I'm coding the Qwerly module I would obviously set up a datasource to the Qwerly API in the module. And my test rulesets within the module work just fine, but the separate test app that uses the new Qwerly module does not work ...", "group_id": 236, "id": 1048882}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305332866.2110939, "message": "DUH! You have to include the datasource as part of the \"provides\", otherwise it's not usable by the calling ruleset. Not back to hack'in", "group_id": 236, "id": 1048894}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305333095.201664, "message": "Reading what I just typed makes me reconsider the logic. Why do I need to add the datasource to the provides? The datasource is ONLY accessed within the function in the module, I don't want to expose the datasource to the user of the module. But it seems to be the only want to get it to work currently. Well, it's working for now", "group_id": 236, "id": 1048914}, {"user_id": 30494, "stars": [{"date_created": 1305335667.64782, "user_id": 4291}], "topic_id": 35217, "date_created": 1305335191.60254, "message": "Keep the pressure! We want to qwerl !", "group_id": 236, "id": 1049147}, {"user_id": 31203, "stars": [{"date_created": 1305544927.9693639, "user_id": 30462}], "topic_id": 35217, "date_created": 1305342337.2401919, "message": "If you're not using it outside the module, you shouldn't have to add it. That's a bug. The problem is that datasets and datasources are old and thus treated differently that other global decls. I'm sure there's something messed up in how the module creates a closure. Sorry.", "group_id": 236, "id": 1049721}, {"user_id": 763, "stars": [], "topic_id": 35217, "date_created": 1305356229.2949469, "message": "thanks for your sluthing on this Ed, and for digging into modules.", "group_id": 236, "id": 1050703}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305779194.7939961, "message": "So I must confess that I am completely in love with modules after developer my first module for Qwerly ...", "group_id": 236, "id": 1107730}, {"user_id": 30494, "stars": [], "topic_id": 35217, "date_created": 1305779508.5428021, "message": "excellent", "group_id": 236, "id": 1107780}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305779571.2914021, "message": "Coding up a test module to publish as a gist, which will serve as usage doc as well", "group_id": 236, "id": 1107788}, {"user_id": 4291, "stars": [{"date_created": 1305779502.139132, "user_id": 30494}], "topic_id": 35217, "date_created": 1305779235.696523, "message": "Here is the 2nd child in my module family: PeerIndex http://apps.kynetx.com/modules/a169x319", "group_id": 236, "id": 1107737}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305781145.6314809, "message": "Demo & Test Ruleset for #Kynetx PeerIndex API Module http://bit.ly/jUB3ZR See it running here: http://bit.ly/m4FZEC", "group_id": 236, "id": 1108182}, {"user_id": 4291, "stars": [{"date_created": 1305844576.209219, "user_id": 30494}, {"date_created": 1305847913.655431, "user_id": 30462}], "topic_id": 35217, "date_created": 1305844465.146004, "message": "I'm on a module roll! Peeps-On-Empire-Module: Retrieve Empire Avenue Ticker Symbol, Share Price and ProfileURL based on Twitter Username http://apps.kynetx.com/modules/a169x322", "group_id": 236, "id": 1117580}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305845085.2722981, "message": "Demo & Test Harness for #kynetx Peeps On Empire https://gist.github.com/981971 Run the demo here: http://exampley.com/?appid=a169x323", "group_id": 236, "id": 1117630}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1305852578.732245, "message": "@edorcutt Keep the modules rolling! http://ktest.heroku.com/a421x69", "group_id": 236, "id": 1118306}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1305853189.1777649, "message": "a421x69 source: https://gist.github.com/982124", "group_id": 236, "id": 1118435}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305863382.8415091, "message": "@rsbohn Brilliant! May I use?", "group_id": 236, "id": 1120265}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1305863695.435528, "message": "Please do!", "group_id": 236, "id": 1120298}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1305864061.0546069, "message": "@rsbohn Many thanks sir!", "group_id": 236, "id": 1120339}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1305864344.5999351, "message": ":)", "group_id": 236, "id": 1120371}, {"user_id": 763, "stars": [], "topic_id": 35217, "date_created": 1305908679.3862431, "message": "@rsbohn Let's create a regression module with your pattern! I see a few things that can be made a little more terse.", "group_id": 236, "id": 1127499}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1305908958.0423319, "message": "Also, some way to make sure numbers are actually numbers.", "group_id": 236, "id": 1127555}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1305908913.3512061, "message": "That's what I'm shooting for. Needs a bit more refactoring to make it lean.", "group_id": 236, "id": 1127542}, {"user_id": 763, "stars": [{"date_created": 1306003143.0343261, "user_id": 4291}], "topic_id": 35217, "date_created": 1305910031.8274059, "message": "http://docs.kynetx.com/docs/Typeof ?", "group_id": 236, "id": 1127736}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1306003199.36885, "message": "@TelegramSam Love the new operator \"Typeof\", where have you been all my KRL Life :)", "group_id": 236, "id": 1135630}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306008882.4406371, "message": "Updated a421x69 to use Regression module: https://gist.github.com/982124", "group_id": 236, "id": 1136391}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306153316.1732211, "message": "2 - delayed evaluation of equalp", "group_id": 236, "id": 1151509}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306153237.0406661, "message": "Two things I like about above:", "group_id": 236, "id": 1151500}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306153264.4929309, "message": "1 - cascaded ternary handles multiple cases", "group_id": 236, "id": 1151504}, {"user_id": 30462, "stars": [{"date_created": 1306164744.9823191, "user_id": 4291}], "topic_id": 35217, "date_created": 1306153203.4933341, "message": "        isEqual = defaction(d,e,a) {\n            equalp = (a.typeof() eq 'num') => function(){eqNumber(d,e,a)}\n                | (a.typeof() eq 'str') => function(){eqString(d,e,a)}\n                | function(){ebad(\"'#{a}' not ('num'|'str')\")};\n            append(rloc, equalp());\n        };", "group_id": 236, "id": 1151495}, {"user_id": 763, "stars": [], "topic_id": 35217, "date_created": 1306165666.1758499, "message": "I like it. Any reason why you kept the initial statements in the pre block? whitespace formatting is flexible, so you can break your action calls onto multiple lines.", "group_id": 236, "id": 1154035}, {"user_id": 4291, "stars": [], "topic_id": 35217, "date_created": 1306164752.058512, "message": "@rsbohn Nicely done sir!", "group_id": 236, "id": 1153908}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168867.402873, "message": "see http://ktest.heroku.com/a421x68", "group_id": 236, "id": 1154417}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168364.648401, "message": "@edorcutt Thank you!", "group_id": 236, "id": 1154360}, {"user_id": 763, "stars": [], "topic_id": 35217, "date_created": 1306168645.555166, "message": "Having them in JS does help watch intermediate values. If you are displaying the values in your test results anyway, it might not be as critical to have that.", "group_id": 236, "id": 1154388}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168575.3095009, "message": "@TelegramSam: Great question! Anything you assign in a pre block is easier to find in the generated Javascript. I think I'd recommend calculating values in the pre block and using the actions just for reporting results.", "group_id": 236, "id": 1154378}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168619.111769, "message": "Trying to balance simplicity vs clarity vs 'access to data when you need it'.", "group_id": 236, "id": 1154383}, {"user_id": 763, "stars": [], "topic_id": 35217, "date_created": 1306168672.8952069, "message": "Using typeof, you could coerce everything to a string.", "group_id": 236, "id": 1154393}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168849.6040361, "message": "Also uri:escape(s) sometimes makes sense, when you want to see the whitespace.", "group_id": 236, "id": 1154413}, {"user_id": 763, "stars": [], "topic_id": 35217, "date_created": 1306168694.721885, "message": "If it's a string or a number, leave it. else, call .encode on it so you can see the json encoding.", "group_id": 236, "id": 1154395}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168704.711508, "message": "Yeah, I'm still trying to get a feel for it.", "group_id": 236, "id": 1154396}, {"user_id": 30462, "stars": [], "topic_id": 35217, "date_created": 1306168761.386261, "message": "That's a good tip, use .encode to make it a JSON string. Thanks!", "group_id": 236, "id": 1154402}, {"user_id": 763, "stars": [{"date_created": 1306169019.798948, "user_id": 30462}], "topic_id": 35217, "date_created": 1306168986.374047, "message": "good point. Remember the with modifiers on defaction. You could allow an override for the output formatting.", "group_id": 236, "id": 1154435}]