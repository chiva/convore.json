[{"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832477.832428, "message": "However, I must generate a \"guest\" login which was not generated by any auth backend.", "group_id": 81, "id": 320568}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299832644.587574, "message": "it's really more like a security token", "group_id": 81, "id": 320580}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299833162.4655731, "message": "yeah, you would do a redirect or something and set the cookie in that response", "group_id": 81, "id": 320628}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832325.013202, "message": "If you want to send a certain deep link of your Django site to another person so that they can open it in their browser without being logged in (although this is mandatory for every request), how can you do that?", "group_id": 81, "id": 320555}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299832856.2386119, "message": "you could also make it a one time token so that once the browsing session was over, a new security token would have to be generated for that content to be viewable again", "group_id": 81, "id": 320594}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299833071.427536, "message": "the session cookie will be part of any request to the same domain", "group_id": 81, "id": 320620}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832397.587075, "message": "Currently, I think about a DB table with cookies and their associated unlocked URLs.  (It must be more than one so that the recipient of the link can see the embedded images, too.)", "group_id": 81, "id": 320561}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832418.2055371, "message": "And with middleware, I both send and interpret those special cookies.", "group_id": 81, "id": 320564}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832495.1857851, "message": "Anyway, do you think this is a viable approach?  Do you have other ideas?", "group_id": 81, "id": 320569}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299832804.1684549, "message": "well, the initial url you give to the other person would include the security token as a query parameter.  Your middleware would process the query param and store the id referencing the row in your database in the users session", "group_id": 81, "id": 320590}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299832627.725199, "message": "sounds pretty good to me, though I probably would avoid using the term cookie", "group_id": 81, "id": 320577}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832881.1662581, "message": "I thought of that, too, but: How is this session id passed to other request if, e.g., a JPEG image is retrieved?", "group_id": 81, "id": 320596}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299833219.0834, "message": "maybe you wouldn't have to... as long as the first response sends the cookie I assume the browser will use it for all subsequent requests, even ones originating from that initial page load", "group_id": 81, "id": 320633}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832702.34905, "message": "But it is used it as a browser cookie after all.", "group_id": 81, "id": 320587}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299832943.526655, "message": "how are you serving the JPEG images?", "group_id": 81, "id": 320604}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299833047.9251201, "message": "If I don't want to append the session ID as a query string parameter to every URL -- which seems to be pretty complicated for me -- you must set a cookie.", "group_id": 81, "id": 320618}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299833137.6090031, "message": "This would be okay.  But when the very first request is made -- with the session ID after the \"?\" in the URL -- the middleware must move it into a cookie in the first response, right?", "group_id": 81, "id": 320626}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299833247.035244, "message": "Okay.", "group_id": 81, "id": 320635}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299832968.9290509, "message": "With the Apache, and it checks whether you a logged-in also for the images.", "group_id": 81, "id": 320609}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299833013.146611, "message": "The Lighty serves the static material -- icons and CSS.  For this, you needn't be logged-in.  But again, there are confidential graphics that are served by Django code.", "group_id": 81, "id": 320613}, {"user_id": 9650, "stars": [], "topic_id": 12292, "date_created": 1299833501.3918159, "message": "And does anybody know how to \"fake\" a login?  Do I only have to add a \"user\" attribute to the request object?", "group_id": 81, "id": 320655}, {"user_id": 18129, "stars": [], "topic_id": 12292, "date_created": 1299833579.0962391, "message": "you could probably just look at what the auth middleware does and do the same thing.  In fact, your middleware should probably be a replacement and subclass of the standard auth middleware", "group_id": 81, "id": 320657}]