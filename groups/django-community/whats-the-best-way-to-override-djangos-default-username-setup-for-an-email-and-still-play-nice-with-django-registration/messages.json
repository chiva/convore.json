[{"user_id": 17467, "stars": [], "topic_id": 9929, "date_created": 1299036929.6924009, "message": "I", "group_id": 81, "id": 243028}, {"user_id": 17467, "stars": [], "topic_id": 9929, "date_created": 1299037021.576112, "message": "I'm leaning towards the app, but am unsure how to do this cleanly for django-registration", "group_id": 81, "id": 243041}, {"user_id": 17467, "stars": [], "topic_id": 9929, "date_created": 1299036988.4400461, "message": "I've seen various snippets online which serve as a \"hard\" override to django's username field, as well as the django-email-username app which allows you to use _either_ a username or email address as a username", "group_id": 81, "id": 243036}, {"user_id": 4077, "stars": [], "topic_id": 9929, "date_created": 1299071293.483815, "message": "I'm using django-emailauth for this, and while I'm not trying to use it with Django-registration (it provides its own registration views and templates), the big win for me was in my ability to hook the post_save signal and auto-populate a mailchimp list.  It's not django-registration, but I don't see any reason why it wouldn't work with django-profiles, and emailauth is quite good.", "group_id": 81, "id": 246673}, {"user_id": 12002, "stars": [], "topic_id": 9929, "date_created": 1299073176.682019, "message": "@crazygir what do you mean by 'allows you to use _either_ a username or email address'? is that on login or during the signup process? if it's the latter, then how do you infer usernames? and what would be the reasoning behind allowing both email and nicknames for usernames?", "group_id": 81, "id": 246943}, {"user_id": 12002, "stars": [], "topic_id": 9929, "date_created": 1299073289.3429911, "message": "what I did recently (without doing any prior research on best practices, i admit) was that I only asked users for email on registration and gave them a username based on that info. then i created a custom auth backend that checks against either username or email, depending on whether or not '@' is in the form.", "group_id": 81, "id": 246948}, {"user_id": 12002, "stars": [], "topic_id": 9929, "date_created": 1299073372.8728671, "message": "of course this is far from perfect, but writing custom backends for django-registration and for authenticating seems to be the way to go about this, as well as possibly subclassing the provided RegistrationForm in james bennett's app.", "group_id": 81, "id": 246954}]