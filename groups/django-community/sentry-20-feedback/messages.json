[{"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304499265.5378079, "message": "I'm looking for some feedback on how we can make Sentry even more kickass for version 2", "group_id": 81, "id": 910835}, {"user_id": 1127, "stars": [{"date_created": 1304526444.315058, "user_id": 12843}], "topic_id": 33600, "date_created": 1304499306.734019, "message": "The biggest change is that it's Django abstract (on the server) so that its friendlier for other Python projects. It's also going to be on a super fast backend (by default, Redis) that lets us do some even more cool things.", "group_id": 81, "id": 910843}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304499276.38218, "message": "Here's kind of a rough TODO atm: https://github.com/dcramer/django-sentry/issues?_pjax=true&direction=desc&labels=2.0&sort=created&state=open", "group_id": 81, "id": 910837}, {"user_id": 18665, "stars": [], "topic_id": 33600, "date_created": 1304507420.830888, "message": "This sounds great! I love django-sentry and have started using it in my latest Django projects. A redis backend would be a great idea so it doesn't impact on the performance of the primary DB (for my smaller sites). What are the main reasons for using a different backend?", "group_id": 81, "id": 911712}, {"user_id": 212, "stars": [], "topic_id": 33600, "date_created": 1304517272.551537, "message": "@zeeg Is using the default django db going to continue being an option? For some of my smaller sites, sentry is useful, but running a separate db seems like overkill.", "group_id": 81, "id": 913073}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304527397.9663241, "message": "@gg We plan to fully support drop-in installation in Django yet. I'm also hoping to have a fully compatible SQL backend at launch as well, that will just read in your connection information from Django's databases settings", "group_id": 81, "id": 915459}, {"user_id": 12843, "stars": [], "topic_id": 33600, "date_created": 1304526483.333744, "message": "I also support the alternate backend change - sounds great!", "group_id": 81, "id": 915260}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304567135.719696, "message": "Finished up the new client/server protocol tonight in 1.x. It's slightly refined in 2.0 but its a good step forward to opening up development on more platforms", "group_id": 81, "id": 923965}, {"user_id": 212, "stars": [], "topic_id": 33600, "date_created": 1304692394.157793, "message": "@zeeg sounds perfect!", "group_id": 81, "id": 942484}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304896507.997983, "message": "Need to work on the Django layer (ideally you just pop sentry.contrib.django into your INSTALLED_APPS, or sentry.contrib.django.client respectively)", "group_id": 81, "id": 962135}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304896520.3635931, "message": "getting there though :)", "group_id": 81, "id": 962138}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304896484.2707119, "message": "So far we have a working Flask app (mostly), WSGI middleware for handling errors, basic Redis backend (with abstract ORM)", "group_id": 81, "id": 962134}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304896517.8057621, "message": "Also need to clean up some of the internals and conform some APIs", "group_id": 81, "id": 962137}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304896467.549968, "message": "Pushed the new repo to http://github.com/dcramer/sentry", "group_id": 81, "id": 962133}, {"user_id": 18347, "stars": [], "topic_id": 33600, "date_created": 1304935881.5135, "message": "@zeeg great :) I will try to use this where I work, btw are the readthedocs docs for 2.0 up to date?", "group_id": 81, "id": 970183}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304973096.3835809, "message": "e.g. in 1.8 (and 2.0) the server can be run, doing pip install sentry && sentry start", "group_id": 81, "id": 977361}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304973030.690047, "message": "No they're not. I wouldn't recommend using 2.0 yet, but you could easily write a client for the 1.8 (only on Git right now) version. 1.8 makes it super easy to setup a sentry server, and your client doesnt rely on Django (though the default implementations do if you were to install sentry)", "group_id": 81, "id": 977350}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304973097.0022531, "message": "though that behavior is still in development -- the biggest thing thats hairy right now is changing configuration", "group_id": 81, "id": 977363}, {"user_id": 12843, "stars": [], "topic_id": 33600, "date_created": 1304974875.0979171, "message": "@zeeg I don't see 1.8 at dcramer/django-sentry or dcramer/sentry ?", "group_id": 81, "id": 977880}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1304987406.9564371, "message": "dcramer/django-sentry should be 1.8 currently (master branch)", "group_id": 81, "id": 981122}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305007554.510025, "message": "Updated the README for anyone who's interested in playing w/ the API and contributing back ideas https://github.com/dcramer/sentry", "group_id": 81, "id": 985625}, {"user_id": 26920, "stars": [], "topic_id": 33600, "date_created": 1305039615.7845521, "message": "So if I understand correctly... for 2.0, the server piece will be a flask-based server instead of a django app... thus the ability to just \"run\" the server (e.g. \"sentry start\") instead of having to build out a full django project with sentry as an app within it? Also... what will the default storage engine be if you do that \"sentry start\" deal?", "group_id": 81, "id": 990933}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305045703.6442089, "message": "@swilcox default storage engine in 2.x will be Redis", "group_id": 81, "id": 992661}, {"user_id": 26920, "stars": [], "topic_id": 33600, "date_created": 1305055277.9284141, "message": "@zeeg thanks, good to know!", "group_id": 81, "id": 994753}, {"user_id": 12843, "stars": [], "topic_id": 33600, "date_created": 1305130304.468751, "message": "Had a rough time with 1.8, could have missed something in my setup, but added an issue: https://github.com/dcramer/django-sentry/issues/147 looking forward to 2.0", "group_id": 81, "id": 1009573}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305317894.4496419, "message": "1. Expiration of keys makes easy cleanup (no extra process) -- still can be done in SQL just more work", "group_id": 81, "id": 1046803}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305317925.8180399, "message": "2. Full-text search without external software -- again, still possible in SQL but we'd be doing a linear iterative query", "group_id": 81, "id": 1046810}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305317883.687072, "message": "What's peoples thoughts on not using an RDBMS for Sentry 2? Found a couple of things we can do really well (still possible in SQL) in things like Redis.", "group_id": 81, "id": 1046799}, {"user_id": 22774, "stars": [{"date_created": 1305479456.0549591, "user_id": 14653}], "topic_id": 33600, "date_created": 1305337095.447052, "message": "@zeeg love the work you are doing in Sentry, I'm promoting it in the company where I work as a Backend Engineer (http://tuenti.com, the largest social network in Spain with *a lot* of traffic and an error logging system that sucks ;)", "group_id": 81, "id": 1049369}, {"user_id": 22774, "stars": [], "topic_id": 33600, "date_created": 1305337145.8148739, "message": "@zeeg One of my co-workers will be setting up Sentry and so far we are very happy with it and with the direction it's heading. Awesome work!!", "group_id": 81, "id": 1049370}, {"user_id": 26920, "stars": [{"date_created": 1305593325.976923, "user_id": 28384}], "topic_id": 33600, "date_created": 1305495863.5896759, "message": "@zeeg If the total stack is fairly simple, using redis should be fine. I'd rather do that than have to run haystack + solr + postgres or mysql... fewer dependencies is a good thing.", "group_id": 81, "id": 1063707}, {"user_id": 1127, "stars": [{"date_created": 1305593327.1250401, "user_id": 28384}, {"date_created": 1305643702.7428961, "user_id": 26920}], "topic_id": 33600, "date_created": 1305578640.1474099, "message": "@swilcox ya I definitely dont like the idea of requiring Solr, and Redis is also much easier to setup than the SQL databases (and I generally want to promote Sentry being on a secondary server)", "group_id": 81, "id": 1074640}, {"user_id": 12843, "stars": [], "topic_id": 33600, "date_created": 1305726826.6292429, "message": "@zeeg do you plan to support other (no-sql) DBs relatively soon? Would CouchDB be on that list?", "group_id": 81, "id": 1097236}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305740896.2770779, "message": "@ethanmiller Right now the only thing planned is Redis. It's honestly the ideal database for what we need to do. It gives both 1. easy sortable data structures, as well as 2. expiration on keys (auto cleanup)", "group_id": 81, "id": 1100670}, {"user_id": 12843, "stars": [], "topic_id": 33600, "date_created": 1305750373.3222311, "message": "ok good to know... there's been a lot of activity on django-sentry lately - are you planning to keep that going for RDBMS concurrently?", "group_id": 81, "id": 1102773}, {"user_id": 1736, "stars": [], "topic_id": 33600, "date_created": 1305753446.650979, "message": "@ethanmiller My general understanding from @zeeg is that Sentry is being split in half. There will be Sentry, a turnkey application installed on its own that uses Redis as the backing store, and django-sentry, a Django app that acts as a client to send exceptions and log messages to a Sentry server somewhere.", "group_id": 81, "id": 1103371}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305763166.4309881, "message": "So 2.x we still plan to let you do something like ``INSTALLED_APPS = ('sentry.contrib.django', 'sentry.contrib.django.web')``, or something along those lines to make it easy", "group_id": 81, "id": 1104804}, {"user_id": 1127, "stars": [], "topic_id": 33600, "date_created": 1305763137.962641, "message": "Ya. I still want it turnkey for Django users as of 2.x, but we're trying to support not just Django, and now Python, but other languages/systems that don't have the time/energy/want to set up a Apache server for Sentry (which is arguable better than most error logging handlers that I've seen in the OS world).", "group_id": 81, "id": 1104801}]