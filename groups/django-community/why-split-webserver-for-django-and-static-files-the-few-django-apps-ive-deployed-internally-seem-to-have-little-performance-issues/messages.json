[{"user_id": 16069, "stars": [], "topic_id": 34846, "date_created": 1305153469.3318851, "message": "Is it simply a scalability issue?  Or are there other serious concerns?", "group_id": 81, "id": 1015697}, {"user_id": 16069, "stars": [], "topic_id": 34846, "date_created": 1305153637.6168101, "message": "So for \"smaller\" setups, you see no issues using the same server (tuned apache in my case)?", "group_id": 81, "id": 1015727}, {"user_id": 1736, "stars": [], "topic_id": 34846, "date_created": 1305153668.106992, "message": "Yep, or just let gunicorn do the whole thing :-)", "group_id": 81, "id": 1015731}, {"user_id": 1736, "stars": [], "topic_id": 34846, "date_created": 1305153463.270447, "message": "Keyword there \"internally\"", "group_id": 81, "id": 1015696}, {"user_id": 16069, "stars": [], "topic_id": 34846, "date_created": 1305153494.924772, "message": "My user base is small enough that scalability probably isn't that big of a deal.  How do you folks do it, and why/", "group_id": 81, "id": 1015700}, {"user_id": 16069, "stars": [], "topic_id": 34846, "date_created": 1305153496.3820469, "message": "?", "group_id": 81, "id": 1015702}, {"user_id": 1736, "stars": [{"date_created": 1305154259.5357111, "user_id": 1822}, {"date_created": 1305156026.5001161, "user_id": 13912}], "topic_id": 34846, "date_created": 1305153686.522825, "message": "Heck, I've deployed internal apps on devserver when they were just for me :-)", "group_id": 81, "id": 1015735}, {"user_id": 1736, "stars": [], "topic_id": 34846, "date_created": 1305153495.6517229, "message": "Yep, if you do anything public, you _will_ be using S3 for your static files", "group_id": 81, "id": 1015701}, {"user_id": 1736, "stars": [], "topic_id": 34846, "date_created": 1305153508.528558, "message": "But for internal use its not a huge deal", "group_id": 81, "id": 1015705}, {"user_id": 16069, "stars": [], "topic_id": 34846, "date_created": 1305153537.4822249, "message": "You're too fast @coderanger!", "group_id": 81, "id": 1015712}, {"user_id": 1736, "stars": [{"date_created": 1305339522.3532131, "user_id": 960}, {"date_created": 1313086899.6218171, "user_id": 1243}], "topic_id": 34846, "date_created": 1305153564.870451, "message": "Thats what she ... oh wait", "group_id": 81, "id": 1015719}, {"user_id": 32856, "stars": [{"date_created": 1305165515.2244999, "user_id": 3243}, {"date_created": 1305222794.954967, "user_id": 22109}, {"date_created": 1305253908.5414319, "user_id": 1284}, {"date_created": 1305613471.7815111, "user_id": 1677}, {"date_created": 1313086930.04461, "user_id": 1243}], "topic_id": 34846, "date_created": 1305157265.9449871, "message": "The verbage in the documentation on this could use some work.  It's not so much an issue of having physically separate servers managing static files and Django apps.  It's more about making sure the same pool of processes isn't responsible for doing both, because you optimize those tasks in very different ways.  For example, when mod_wsgi is in daemon mode, the processes that serve your Django apps are separated out from the rest of Apache's child processes, which then handle the static files.  If you had nginx reverse proxying gunicorn, then that gives you nginx serving static files, and gunicorn serving your Django apps.", "group_id": 81, "id": 1016144}, {"user_id": 26888, "stars": [], "topic_id": 34846, "date_created": 1305184621.6474831, "message": "Splitting django and static files is a good practice. For light traffic webservers, you might not seen any difference.", "group_id": 81, "id": 1021313}, {"user_id": 1127, "stars": [], "topic_id": 34846, "date_created": 1305184681.5854909, "message": "It's all about scale (and some performance, but mostly scaling easier). If you get little traffic (say its an admin app) it's easier to just serve it with the app and keep configuration down. In development it's also easier to serve it with the app", "group_id": 81, "id": 1021325}, {"user_id": 26888, "stars": [], "topic_id": 34846, "date_created": 1305184679.3235021, "message": "However, this also means that your website process will server static data instead of computing pages.", "group_id": 81, "id": 1021324}, {"user_id": 16069, "stars": [], "topic_id": 34846, "date_created": 1305243222.1163211, "message": "Ok, you folks have confirmed my understanding of it.  Certainly, if the apps I am building right now were for public consumption, I'd be much more concerned.  Agreed with @mattmcc about the documentation--that is the reason why I asked the question here!  Thanks, all.", "group_id": 81, "id": 1031308}, {"user_id": 5436, "stars": [{"date_created": 1305518848.7199249, "user_id": 12817}], "topic_id": 34846, "date_created": 1305273454.732379, "message": "sure, it's about scalability but it's also about making snappier websites. Using aggressive cache headers and CDNs makes for a better user-experience even if traffic is extremely low.", "group_id": 81, "id": 1037938}, {"user_id": 22774, "stars": [{"date_created": 1305339584.927932, "user_id": 960}], "topic_id": 34846, "date_created": 1305337346.5287681, "message": "@brookshire as other said, it doesn't matter for the type of usage you will see. But my recommendation is try it out and understand how to do it because if your site starts getting popular or if you want to scale up a bit your apps, this is probably *the* place to start optimizing. Thus, it's good to be ready and know how to do it in a snap :)", "group_id": 81, "id": 1049376}, {"user_id": 27140, "stars": [], "topic_id": 34846, "date_created": 1305418304.38603, "message": "https://github.com/jaddison/django-cachebuster is an app I put together to handle far future file headers.  django-cachebuster supports media files in Django 1.2 and 1.3 and the new static files in 1.3.  See my brief writeup on the topic of far future static file cache busting: http://www.scottisheyes.com/helping-speed-up-websites-with-django-cachebu", "group_id": 81, "id": 1056430}]