[{"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299692590.703681, "message": "I am writing an app; where data is being processed once a day", "group_id": 81, "id": 307102}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299692811.386807, "message": "but it should check for data that hasn't been found yet either", "group_id": 81, "id": 307147}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299692750.116612, "message": "and everyday that data could change, but once something has been found in that data it will always be found so if I run the test once and it returns true; we should never need to run that test again (performance gains)", "group_id": 81, "id": 307132}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299692836.205586, "message": "interesting problem; I am just looking for best practices for this type of thing and your opinions of course.", "group_id": 81, "id": 307149}, {"user_id": 13949, "stars": [], "topic_id": 11753, "date_created": 1299696667.1226411, "message": "If am understanding you correctly... then I would use get or create. http://docs.djangoproject.com/en/1.2/ref/models/querysets/#get-or-create", "group_id": 81, "id": 307443}, {"user_id": 2588, "stars": [], "topic_id": 11753, "date_created": 1299701740.9192929, "message": "How are you determining that \"some piece\" of data has or has not been found. Where/how are you maintaining the collection of \"found\" artifacts?", "group_id": 81, "id": 307939}, {"user_id": 2588, "stars": [], "topic_id": 11753, "date_created": 1299701667.8971851, "message": "Where is the data being processed coming from? What format is it in?", "group_id": 81, "id": 307929}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704462.4494419, "message": "data is something I am creating with python dictionary initially", "group_id": 81, "id": 308307}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704528.305306, "message": "anyways", "group_id": 81, "id": 308313}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704515.5908129, "message": "but it is a django app context", "group_id": 81, "id": 308312}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299705245.811393, "message": "kk thanks guys", "group_id": 81, "id": 308400}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704468.886868, "message": "then storing in a json object", "group_id": 81, "id": 308308}, {"user_id": 1736, "stars": [], "topic_id": 11753, "date_created": 1299704937.6694479, "message": "This sounds sufficiently domain-specific that I don't think there is really a \"best practice\" you could follow.", "group_id": 81, "id": 308348}, {"user_id": 1736, "stars": [], "topic_id": 11753, "date_created": 1299704950.262028, "message": "Just code the way that looks right and worry about it later :-)", "group_id": 81, "id": 308349}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704507.922904, "message": "@jackiekazil this is more of a generic python question than django specific", "group_id": 81, "id": 308310}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704560.572485, "message": "the way i am determining if that data has been found is on the initial analysis if it is present the key pertaining to that data set is set to true", "group_id": 81, "id": 308318}, {"user_id": 8990, "stars": [], "topic_id": 11753, "date_created": 1299704593.1328621, "message": "I only need to run sets on the remaining false dictionary values that might later appear in the data set", "group_id": 81, "id": 308321}]