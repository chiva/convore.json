[{"user_id": 9650, "stars": [], "topic_id": 12390, "date_created": 1299864379.3663931, "message": "Currently, I cannot find an instance in my database for which this assumption is not true.  However, I'd like to see it documented somewhere.", "group_id": 81, "id": 324954}, {"user_id": 9650, "stars": [], "topic_id": 12390, "date_created": 1299863934.961165, "message": "As far as I understood it, if I have multi-table inheritance, the derived model *always* has the same pk value as the parent model, right?", "group_id": 81, "id": 324847}, {"user_id": 9650, "stars": [], "topic_id": 12390, "date_created": 1299864006.814198, "message": "I now found out that with o2o relation, Django doesn't guarantee that both instances share the same pk.  This is logical since you may have more than one O2O field in one model.", "group_id": 81, "id": 324863}, {"user_id": 9650, "stars": [], "topic_id": 12390, "date_created": 1299864043.3588159, "message": "*But*: If the O2O field has primary_key=True, ... well ... do I then have same pks?", "group_id": 81, "id": 324869}, {"user_id": 9650, "stars": [], "topic_id": 12390, "date_created": 1299864271.10886, "message": "It gets a O2O to the main clas with primary_key=True.  Question is whether this guarantees the PKs to be the same.", "group_id": 81, "id": 324921}, {"user_id": 1736, "stars": [], "topic_id": 12390, "date_created": 1299864190.797127, "message": "Multi-table inheritance doesn't require PKs to be the same.", "group_id": 81, "id": 324901}, {"user_id": 1736, "stars": [], "topic_id": 12390, "date_created": 1299864230.7783301, "message": "The sub-table will just get a column which is an FK to the main class.", "group_id": 81, "id": 324910}, {"user_id": 1736, "stars": [], "topic_id": 12390, "date_created": 1299863909.0149021, "message": "When you manually make it that way?", "group_id": 81, "id": 324840}, {"user_id": 9650, "stars": [], "topic_id": 12390, "date_created": 1299918076.614691, "message": "Okay, O2O with primary_key=True indeed guarantees that the PK values are the same as with the related model -- actually, we were blockheads because this is trivial.  ;-)  However, I still can't find documentation about the PKs for multi-table inheritance models.", "group_id": 81, "id": 330834}]