[{"user_id": 13325, "stars": [{"date_created": 1302551156.3283989, "user_id": 7376}, {"date_created": 1302585076.2406631, "user_id": 960}], "topic_id": 18661, "date_created": 1302550892.2557991, "message": "I didn't use tastypie or anything like that, but I did some nice apps using Couchdb and Django. I kept all the auth and that jazz in MySQL and used Couchdb where it fit. Python made this pretty easy considering that most things can be thrown around as dictionaries.", "group_id": 81, "id": 628439}, {"user_id": 28161, "stars": [], "topic_id": 18661, "date_created": 1302550712.100354, "message": "So, I'm pondering architecture and seem to have two options: a) Django nonrel + Mongo\u00a0+ a nonrel fork of tastypie, or b) pure\u00a0Django + postgres, Mongo + something like Flask and build my own API by hand", "group_id": 81, "id": 628416}, {"user_id": 28161, "stars": [], "topic_id": 18661, "date_created": 1302550645.6273291, "message": "I also want to expose a lot of the schemaless stuff via an API, and I had decided on using this opportunity to give tastypie a whirl", "group_id": 81, "id": 628403}, {"user_id": 28161, "stars": [], "topic_id": 18661, "date_created": 1302550761.337182, "message": "ie: all on nonrel, with the tradeoffs of what nonrel can't give me yet (eg M2Ms) or split my codebase and have to write a lot more by hand", "group_id": 81, "id": 628421}, {"user_id": 28161, "stars": [], "topic_id": 18661, "date_created": 1302550556.8022759, "message": "I'm starting work on a sizeable project which will have some data that suits a proper, relational model pretty well (fixed, known fields, use of FKs, M2Ms etc) and other data that's pretty much schemaless and would suit something like MongoDB well", "group_id": 81, "id": 628387}, {"user_id": 28161, "stars": [], "topic_id": 18661, "date_created": 1302550781.1530809, "message": "I'd welcome suggestions of a third (or fourth, fifth, etc) way", "group_id": 81, "id": 628428}, {"user_id": 1930, "stars": [], "topic_id": 18661, "date_created": 1302552619.9742291, "message": "From what I _think_ I remember reading (no experience) I remember you can mix a dual-data model with django orm, and mongoengine.org", "group_id": 81, "id": 628976}, {"user_id": 7376, "stars": [{"date_created": 1302693232.690567, "user_id": 2341}], "topic_id": 18661, "date_created": 1302551376.3253341, "message": "Often when I'm mucking around with schemaless DBs such as K/V,  I often feel like an ORM is overkill because I'm just using native dictionaries everywhere.  Though it is nice to have an object that has methods to organize your models.  This is a handy module for those cases, https://github.com/j4mie/micromodels", "group_id": 81, "id": 628528}, {"user_id": 3965, "stars": [], "topic_id": 18661, "date_created": 1302558759.229774, "message": "@ericmoritz Thanks for the micromodels pointer... that looks really useful", "group_id": 81, "id": 630744}, {"user_id": 3965, "stars": [], "topic_id": 18661, "date_created": 1302558729.516263, "message": "@stevejalim I'd love to know what you end up doing as I've got a similar project going.", "group_id": 81, "id": 630735}, {"user_id": 28161, "stars": [], "topic_id": 18661, "date_created": 1302606424.6299231, "message": "Yeah, micromodels does look interesting and could sit well alongside Mongo, with some extra gubbins to handle throttling, etc. Cheers", "group_id": 81, "id": 640179}]