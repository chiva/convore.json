[{"user_id": 1398, "stars": [{"date_created": 1301782830.2527511, "user_id": 1}, {"date_created": 1301791092.0548329, "user_id": 14070}], "topic_id": 16945, "date_created": 1301782780.2382071, "message": "'Back in the day' I guess it made sense to have the sites framework, because you might need to run tens or hundreds of sites off one server. With the advent of fast-setup servers such as Rackspace and competitiors, not to mention  DjangoZoom/Ep.io/Gondo.io I don't see this use case anymore.", "group_id": 81, "id": 510647}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784002.7057731, "message": "@sivictor In this case we don't want different DBs, we want a single DB with certain articles attached to one site or the other.", "group_id": 81, "id": 510692}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784075.105726, "message": "(think marketing folks wanting to put up a sale announcement on both sites at once)", "group_id": 81, "id": 510698}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784230.198791, "message": "that may be the biggest problem with the module", "group_id": 81, "id": 510719}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784264.66434, "message": "(by design)", "group_id": 81, "id": 510723}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784359.003839, "message": "It is _not_ a full-stack solution for Drupal-style multi-tenancy", "group_id": 81, "id": 510732}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301783874.3526559, "message": "Does the sites module do the same thing as the drupal multi-site functionality, though?", "group_id": 81, "id": 510689}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784316.9611361, "message": "...or am I totally wrong?", "group_id": 81, "id": 510728}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784330.4953001, "message": "@sivictor Eh, it is what it is and it works fine for that. Just seems like people project a lot more functionality on it than is intended", "group_id": 81, "id": 510730}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784382.244499, "message": "(nor do I think that that is even possible in Django)", "group_id": 81, "id": 510733}, {"user_id": 1398, "stars": [], "topic_id": 16945, "date_created": 1301782807.0636859, "message": "I'm happy to get corrected on this but to me, this seems like a mostly deprecated use case.", "group_id": 81, "id": 510648}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301783795.55547, "message": "It is still useful when you have multiple \"sites\" that share the same backend. For example (though this is Drupal right now) champions-online.com and startrekonline.com are really just different themes on the same CMS backend.", "group_id": 81, "id": 510686}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301783913.4526491, "message": "Can you run multiple sites that share nothing but code (i.e. different settings, dbs and content repositories)?", "group_id": 81, "id": 510690}, {"user_id": 1398, "stars": [], "topic_id": 16945, "date_created": 1301783993.5035059, "message": "@coderanger - Why not simply stand up two CMS instances for those two sites? Why share one system? I'm not saying your technique is wrong, I'm just wondering why you've done things this way.", "group_id": 81, "id": 510691}, {"user_id": 1736, "stars": [{"date_created": 1301791118.996392, "user_id": 14070}], "topic_id": 16945, "date_created": 1301784021.3428881, "message": "@pydanny Easier to non-technical folks to have all editing in one place, since the same people work on all sites", "group_id": 81, "id": 510694}, {"user_id": 6894, "stars": [], "topic_id": 16945, "date_created": 1301784109.843466, "message": "I have a client that uses sites for that purpose too", "group_id": 81, "id": 510705}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301785863.1194379, "message": "Maybe some feature flags or something, but that can be done in the DB instead of the settings file", "group_id": 81, "id": 510811}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784152.5868599, "message": "I think people see sites as doing a lot more than it does, it is really just a place to point FKs that represent a website (for example, it has nothing to do with settings or templating, etc etc)", "group_id": 81, "id": 510710}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784201.872838, "message": "Much like contenttypes provides a place for FKs to models", "group_id": 81, "id": 510716}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784261.11761, "message": "it sounds like a good multi-tenancy solution, but it falls short of that", "group_id": 81, "id": 510722}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784485.857981, "message": "There are some people working toward that: http://blog.uysrc.com/2011/03/23/serving-multiple-sites-with-django/", "group_id": 81, "id": 510736}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301785826.66733, "message": "@sivictor We don't really need any settings different between them, so it isn't a problem :-)", "group_id": 81, "id": 510806}, {"user_id": 1398, "stars": [], "topic_id": 16945, "date_created": 1301784329.953361, "message": "Thanks @coderanger this makes a ton of sense.", "group_id": 81, "id": 510729}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784494.049917, "message": "http://www.revsys.com/officehours/2010/nov/05/#question5", "group_id": 81, "id": 510738}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301784660.2695589, "message": "I'm on the fence myself. I'm part of a team that is running 80+ sites off of a single Drupal instance, and the approach has some advantages... but I'm not sure that's the best way to deal with that situation in Django.", "group_id": 81, "id": 510741}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301784681.3287899, "message": "@sivictor The Django settings system is unfortunately not really amenable to multi-tenancy the way Druapl does it", "group_id": 81, "id": 510742}, {"user_id": 26100, "stars": [], "topic_id": 16945, "date_created": 1301785356.5968361, "message": "So are champions-online and startrekonline moving away from Drupal? Your first post made it sound like they might be. How will you handle the issue in that case?", "group_id": 81, "id": 510761}, {"user_id": 1736, "stars": [], "topic_id": 16945, "date_created": 1301785910.58569, "message": "The only fancy thing we would have to do is include the current site name on template lookups", "group_id": 81, "id": 510815}, {"user_id": 6431, "stars": [{"date_created": 1301926038.677603, "user_id": 209}, {"date_created": 1301926676.2512231, "user_id": 4936}], "topic_id": 16945, "date_created": 1301800973.286958, "message": "@pydanny multi-tenancy doesn't mean running multiple django sites off of one server (which could be accomplished with many separate django projects and wsgi files serving different domains), it means using the same django project for many sites.  The primary reason for this approach is content sharing.  If multiple sites must use the same database to share content, there's really no choice but to handle all sites within a single codebase (requiring something like the contrib.sites, if not contrib.sites itself).", "group_id": 81, "id": 511446}, {"user_id": 1, "stars": [{"date_created": 1301926678.0782609, "user_id": 4936}], "topic_id": 16945, "date_created": 1301801600.9795539, "message": "There's also a massively reduced memory footprint if you can use the same long-running processes to serve two sites.", "group_id": 81, "id": 511479}, {"user_id": 1982, "stars": [], "topic_id": 16945, "date_created": 1301810295.8892601, "message": "also when code and content are shared among sites, deployment and migrations can be easier for one project versus many.  And eventually one project per server becomes cost prohibitive.", "group_id": 81, "id": 512424}, {"user_id": 12775, "stars": [], "topic_id": 16945, "date_created": 1301825681.113162, "message": "We have a single platform which runs 42 sites altogether (26 of which use a similar configuration). We use te concept of a 'SiteNetwork' that abstracts this a bit more, but the sites app is still very useful for us. As well as the recommended use, Site is also used heavily as a form of taxonomy in our CMS.", "group_id": 81, "id": 513695}, {"user_id": 205, "stars": [], "topic_id": 16945, "date_created": 1301877752.1104259, "message": "It is a somewhat niche requirement, but it works for that use case fairly well", "group_id": 81, "id": 519074}, {"user_id": 205, "stars": [{"date_created": 1301904119.1044879, "user_id": 27233}], "topic_id": 16945, "date_created": 1301877737.5660419, "message": "Having a single DB that powers multiple sites on the same codebase", "group_id": 81, "id": 519073}, {"user_id": 205, "stars": [], "topic_id": 16945, "date_created": 1301877728.0940809, "message": "It's used heavily at the Journal World (suprise) for the above mentioned reason", "group_id": 81, "id": 519071}, {"user_id": 14309, "stars": [], "topic_id": 16945, "date_created": 1301906688.6050141, "message": "I used it to build 5 blogs for one client using one deployment, one backend. It was really helpful.", "group_id": 81, "id": 521718}, {"user_id": 13912, "stars": [], "topic_id": 16945, "date_created": 1301910580.2920029, "message": "not really, but you shouldn't asume if there's stuff like rackspace, amazon es, gondor ep.io etc. that everyone will just ditch the huge dedicated server as a hosting option. I for one won't, because it's cheaper and gives me more control.", "group_id": 81, "id": 522119}, {"user_id": 19105, "stars": [{"date_created": 1301923769.190907, "user_id": 2087}, {"date_created": 1301930215.843152, "user_id": 22109}], "topic_id": 16945, "date_created": 1301911873.033602, "message": "Anyone using Webfaction is going to want a deployment option that minimised memory usage and multi-tenancy is the a big win there. (and just to reiterate contrib.sites won't do that on it's own but something like django-dynamicsites builds upon it)", "group_id": 81, "id": 522229}, {"user_id": 21387, "stars": [], "topic_id": 16945, "date_created": 1301926223.116353, "message": "I agree that the sites framework is very useful, but it should be completely optional to its use cases; some apps require that it's enabled to work, which I dislike.", "group_id": 81, "id": 523596}]