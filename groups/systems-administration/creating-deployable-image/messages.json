[{"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683300.1631269, "message": "(the reason to move to Linode is because of the prices \u2013\u00a0I started to get around 80gb traffic a month \u2013\u00a0that gets to $30-40 on rackspacecloud, on Linode I can get 512Mb and 100GB traffic for $20)", "group_id": 351, "id": 1451022}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683220.4422009, "message": "I am communicating with the server only with SSH, and deploying stuff with git / mercurial.", "group_id": 351, "id": 1450998}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683226.6173799, "message": "It is all running on 256mb rackspace instance. I want to move to Linode and I want to build this stack anew. I want to make the image as easy to transfer as possible.", "group_id": 351, "id": 1450999}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683408.8382499, "message": "Is there a way of automating the process of building the stack? Perhaps writing some script that specifies all the software packages I need, their configs, installs them and configures them as I need?", "group_id": 351, "id": 1451051}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683484.2882631, "message": "Thanks!", "group_id": 351, "id": 1451069}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683124.703392, "message": "Hi! I am not a sysadmin my self, I am a developer, I have various websites (mostly with a very low load) running on a simple Ubuntu VPS \u2013 one Django website, running on WSGI managed by Apache and Nginx for static assets, one (biggest) WordPress blog with around 15,000 visitors a day that runs on PHP-FPM, proxied by the same Nginx and some static websites served with Nginx.", "group_id": 351, "id": 1450993}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308683471.8072281, "message": "I mean, is there a tool, that allows to do this stuff only one time (all this setup) and to reuse it later? It would also be helpful for me to use for future reference, to know what do I have installed, what versions, how exactly it is all configured etc.", "group_id": 351, "id": 1451063}, {"user_id": 1736, "stars": [], "topic_id": 40028, "date_created": 1308691465.298775, "message": "Chef and Puppet are the two main players in the field right now (full disclosure, I work for the company that makes Chef)", "group_id": 351, "id": 1452406}, {"user_id": 1736, "stars": [], "topic_id": 40028, "date_created": 1308691524.794199, "message": "For your applications in specific, you might want to check out http://help.opscode.com/kb/otherhelp/build-a-django-stack and http://help.opscode.com/kb/otherhelp/build-a-lamp-stack", "group_id": 351, "id": 1452426}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308721716.3227019, "message": "Thanks! What about python fabric ( http://docs.fabfile.org/en/1.0.1/index.html ) ?", "group_id": 351, "id": 1454953}, {"user_id": 1736, "stars": [], "topic_id": 40028, "date_created": 1308762264.722698, "message": "Fabric on its own doesn't really fit the bill. If you are familiar with Ruby's Capistrano it fills the same niche, but neither are built for things like idempotent changes. There are some libraries that add this to Fabric, with mixed results. Personally I would reserve Fabric for more procedural tasks like maintenance or code pushes (I use it at work for doing forced cache clears, for example). Fabric and Chef also play nice via my PyChef module :-)", "group_id": 351, "id": 1458614}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308832710.751539, "message": "Thanks, I'll try to see which one is the fastest to learn, Chef or Puppet.", "group_id": 351, "id": 1465533}, {"user_id": 5863, "stars": [], "topic_id": 40028, "date_created": 1308929109.040343, "message": "Given you have an existing setup you might find blueprint from devstructure useful: https://devstructure.com/ and https://github.com/devstructure/blueprint", "group_id": 351, "id": 1477123}, {"user_id": 5863, "stars": [], "topic_id": 40028, "date_created": 1308929181.2741201, "message": "None of these tools are doing what you describe in the title, but they are probably the way to go for your problem", "group_id": 351, "id": 1477131}, {"user_id": 5863, "stars": [], "topic_id": 40028, "date_created": 1308929138.086292, "message": "it can output Chef/Puppet configs as well as tarballs, it's designed to reverse engineer a working servers configuration", "group_id": 351, "id": 1477126}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308993645.6511919, "message": "Thanks! This devstructure blueprint tool seems awesome. However, on my current hosting I have an old Ubuntu 9.04 and I should probably migrate to 10.04 LTS at least \u2013 so the .sh is not going to work out, because of versions, I suppose. Gonna try and see what happens :-)", "group_id": 351, "id": 1483394}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1308996059.771024, "message": "Yup, tens of lines saying: \"Version 'xxxxubuntu1' for 'xxxxx' was not found\"", "group_id": 351, "id": 1483489}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1309004121.7290981, "message": "Looks like this is going to take way more than I have anticipated, tutorials I find (on Chef or Pupper) are mainly outdated or incomprehensible. Blueprint seems to be great and intuitive, but not when major OS version is being upgraded. Looks like I'm gonna have to do it manually :-( Thanks for all the help anyway!", "group_id": 351, "id": 1483780}, {"user_id": 1736, "stars": [], "topic_id": 40028, "date_created": 1309028045.161571, "message": "@gryzzly Anything in particular you are finding outdated or incomprehensible on the Chef side of things?", "group_id": 351, "id": 1485179}, {"user_id": 1148, "stars": [], "topic_id": 40028, "date_created": 1309108618.2516229, "message": "With any method of moving to a new version of Ubuntu, I think you are going to run into trouble if your sites rely on older versions of various tools (php, etc.) You may have to make code changes to adapt to the new versions of those tools. Generally, I think you are going to have an easier time if you separate the migration from the OS upgrade. Get all your sites working on a new 9.04 VPS and then look into upgrading that system to 10.04. Conflating those tasks will get messy.", "group_id": 351, "id": 1489698}, {"user_id": 1148, "stars": [], "topic_id": 40028, "date_created": 1309108314.8968771, "message": "@gryzzly, Are all of your site files, configurations, etc stored in a few file trees, e.g., /var/www and /etc/http? One keep-it-simple method would be to create a tar file of your app directories and config trees, install all the packages on which you rely on the new ubuntu system, and the untar the configuration trees.", "group_id": 351, "id": 1489662}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1309154931.4495649, "message": "@ghostis, the point is, it's fairly simple configuration: nginx with several rules in sites-available, apache with wsgi for django and php 5.3.6 compiled with FPM support, FPM daemon + IPTables config. That's all. My only problem is that I mess with these things rarely. \n\nI actually don't mind to install all this stuff on a clean 10.04, but I would just like to do it in a new, better way, so I can reuse it some time, perhaps with small changes, etc.\n\nWhat I would like to do is something like ruby's bundle + gemfile, I'd just like to describe the minimum required versions of packages, their configs. \n\nFrom what I've seen Chef (and Puppet too) allows you to do this, but I didn't find easy enough tutorial to start. Example: all the tutorials / docs I've found suggest using \"cookbooks\", but I don't want 10 cookbooks, one for each of the \"pieces\" I have, I want one single \"recipe\" that would have all this packages in it. Something like:\npackages : {\n}", "group_id": 351, "id": 1493160}, {"user_id": 1101, "stars": [], "topic_id": 40028, "date_created": 1309154960.1234119, "message": "well, I accidentally hit \"enter\", but I believe you get what I mean, anyway :-)", "group_id": 351, "id": 1493163}, {"user_id": 1736, "stars": [], "topic_id": 40028, "date_created": 1309192367.6737471, "message": "@gryzzly Plenty of people do that with Chef (and Puppet). Take a look at https://github.com/ericholscher/chef-django-example/tree/master/cookbooks/main/recipes for example (one quite one recipe, but definitely not many). Chef makes no assumptions about layout.", "group_id": 351, "id": 1496878}, {"user_id": 5863, "stars": [], "topic_id": 40028, "date_created": 1309298804.7197659, "message": "grzzly: that's a failing of the docs, it's perfectly valid to have a single recipe in Chef or to put everying in a single pp file just against the node with puppet. Here's a hello world for chef that has the absoluye minimum fluff I wrote a while back - http://morethanseven.net/2010/10/30/Chef-hello-world.html", "group_id": 351, "id": 1512011}]