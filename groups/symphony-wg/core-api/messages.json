[{"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220066.9920781, "message": "Ok", "group_id": 8448, "id": 741400}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220621.8004789, "message": "Maybe", "group_id": 8448, "id": 741578}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221559.1448259, "message": "t", "group_id": 8448, "id": 741790}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303190305.861737, "message": "4) Use Cases (30 mins)", "group_id": 8448, "id": 738293}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303190276.0031929, "message": "1) Background (5 mins)", "group_id": 8448, "id": 738287}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303190244.4671061, "message": "The goal of this discussion is to solidify a proposal for Symphony 3's core API", "group_id": 8448, "id": 738280}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303190287.92872, "message": "2) Scope (10 Mins)", "group_id": 8448, "id": 738289}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303190296.6286609, "message": "3) Goals (15 mins)", "group_id": 8448, "id": 738292}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303190255.81231, "message": "Our agenda:", "group_id": 8448, "id": 738283}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221583.3154969, "message": "Sure", "group_id": 8448, "id": 741796}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303211371.1405261, "message": "FIRST!", "group_id": 8448, "id": 739759}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221562.5148921, "message": "yes, sounds good", "group_id": 8448, "id": 741791}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303211383.9253981, "message": "(I'll be back in an hour.)", "group_id": 8448, "id": 739761}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303213041.174083, "message": "NIce", "group_id": 8448, "id": 739837}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214482.9777949, "message": "Brendan should be", "group_id": 8448, "id": 739951}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303213059.858779, "message": "Hi Nick", "group_id": 8448, "id": 739840}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303213076.7242219, "message": "back in 23 mins", "group_id": 8448, "id": 739844}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214545.6520269, "message": "Have pinged Brendan on iChat, no reply yet", "group_id": 8448, "id": 739956}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214570.672787, "message": "ca = typo", "group_id": 8448, "id": 739964}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214723.4930961, "message": ":-)", "group_id": 8448, "id": 739998}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214732.928232, "message": "Hi chaps", "group_id": 8448, "id": 740002}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303214744.3650739, "message": "hey, you pasted me that link :P", "group_id": 8448, "id": 740005}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303213498.65418, "message": "I might be 5 mins late, running out to buy lunch now. Start without me if I am late...", "group_id": 8448, "id": 739866}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303213801.347647, "message": "Woah that's quick. Now I know I can get to the canteen, buy lunch and be back in four minutes", "group_id": 8448, "id": 739892}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214464.002764, "message": "Is Allen joining us?", "group_id": 8448, "id": 739947}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214720.1926429, "message": "Evidently Symphony and sport do not mix.", "group_id": 8448, "id": 739996}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303214721.462373, "message": "wrong room", "group_id": 8448, "id": 739997}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215336.9524839, "message": "I agree largely to what nick said, I'm not sure how much I like the idea of dropping in another framework as we like how Symphony is lean, but the concept I get", "group_id": 8448, "id": 740080}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215351.467448, "message": "My list was more of some guidelines to keeping the classes simple:", "group_id": 8448, "id": 740081}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214610.7723041, "message": "Brendan is on his way in", "group_id": 8448, "id": 739975}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214756.466619, "message": "i didn't even know that room existed", "group_id": 8448, "id": 740006}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214990.886986, "message": "1. An Entries (class) API (SymQL)", "group_id": 8448, "id": 740035}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215153.1449809, "message": "3. REST, the backend should be fully RESTful, responding to the four main HTTP methods, and be able to return HTML, XML or maybe JSON", "group_id": 8448, "id": 740054}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215238.850527, "message": "Ah, so #1 is the symphony API, and #2 is the general API", "group_id": 8448, "id": 740063}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215251.2131879, "message": "#2 could be copied literally from cake, zend, igniter etc", "group_id": 8448, "id": 740064}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215261.112026, "message": "(could, not should)", "group_id": 8448, "id": 740067}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215263.132432, "message": "ok, got it", "group_id": 8448, "id": 740068}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215268.1620541, "message": "Me done.", "group_id": 8448, "id": 740069}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303214984.9516449, "message": "I had a list", "group_id": 8448, "id": 740033}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215024.7605, "message": "So from my perspective the \"Core API\" is three things:", "group_id": 8448, "id": 740041}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215129.5061021, "message": "2. A set of PHP classes to interact with the rest of Symphony (sections, fields, DS), which set Symphony out to be a _framework).", "group_id": 8448, "id": 740049}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215865.854605, "message": "right", "group_id": 8448, "id": 740183}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215919.5693929, "message": "Which is why we need to make a list ;-)", "group_id": 8448, "id": 740197}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216092.277813, "message": "so a developer is most likely going to have to resort to writing custom SQL", "group_id": 8448, "id": 740256}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216096.991307, "message": "#3 Goals?", "group_id": 8448, "id": 740257}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216112.1889639, "message": "ok, i want us to 'zoom out' for a second", "group_id": 8448, "id": 740261}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216251.6336949, "message": "right", "group_id": 8448, "id": 740302}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216305.290323, "message": "Nope", "group_id": 8448, "id": 740318}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216336.0580449, "message": "sounds good", "group_id": 8448, "id": 740325}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216365.1114891, "message": "but that will come from mapping it out first i think", "group_id": 8448, "id": 740328}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216482.583251, "message": "The contents list is a great set of ideals", "group_id": 8448, "id": 740357}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216969.032078, "message": "Probably only the public methods I'd think", "group_id": 8448, "id": 740459}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214878.3406479, "message": "we've discussed the core API many times over the last few months", "group_id": 8448, "id": 740025}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215563.2540669, "message": "I know we're skipping off the agenda, but I'll mention that I recall seeing a load of stuff in S3 that needed to be tidied. From my perspective, you should be abke to fetch entries without writing SQL, for example", "group_id": 8448, "id": 740118}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214803.502315, "message": "So... let's get this show on the road, as they say", "group_id": 8448, "id": 740011}, {"user_id": 26941, "stars": [], "topic_id": 20301, "date_created": 1303214836.4227109, "message": "Hi guys, I won't be able to follow the discussion live, but I will try and read the transcript...", "group_id": 8448, "id": 740017}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215657.8883519, "message": "Continue :-)", "group_id": 8448, "id": 740136}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214558.2870989, "message": "I'm not in any rush, ca", "group_id": 8448, "id": 739961}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215211.314142, "message": "Sorry, I explained that poorly.", "group_id": 8448, "id": 740062}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215418.0648551, "message": "and we've discussed adding stuff like proper routing, etc", "group_id": 8448, "id": 740089}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215677.7723839, "message": "let's focus on that and just make sure we're agreed", "group_id": 8448, "id": 740142}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215729.6934941, "message": "so... what does the API include? What does it not include?", "group_id": 8448, "id": 740150}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215765.942488, "message": "by following the above guidelines, I think we'll find that we can do anything via the API", "group_id": 8448, "id": 740156}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215934.131696, "message": "it's a big task", "group_id": 8448, "id": 740202}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215966.8650401, "message": "like was mentioned earlier, it forces us to think from the outset instead of sort fumbling through it", "group_id": 8448, "id": 740211}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214473.1593831, "message": "I guess not", "group_id": 8448, "id": 739950}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214695.439415, "message": "I remembering him saying he had soccer practice or something", "group_id": 8448, "id": 739988}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303214700.4790931, "message": "Im back", "group_id": 8448, "id": 739990}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214809.3071549, "message": "thanks everyone for coming", "group_id": 8448, "id": 740012}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214822.07496, "message": "You're welcome. Is there cake?", "group_id": 8448, "id": 740014}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214848.8131311, "message": "I want to allow 5 minutes here for background. ", "group_id": 8448, "id": 740021}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214905.66746, "message": "I want to give Allen, Brendan, Nick, or anyone else an opportunity to quickly summarize anything they feel is important", "group_id": 8448, "id": 740026}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214923.680877, "message": "Awesome. I wrote a bit down this morning:", "group_id": 8448, "id": 740028}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214977.782331, "message": "So I personally have tackled this in two ways for my own needs:", "group_id": 8448, "id": 740032}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215174.877316, "message": "So #1 is stuff like getting entries, creating a section", "group_id": 8448, "id": 740057}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215434.623594, "message": "All of BA's list makes good sense to me", "group_id": 8448, "id": 740093}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215473.3561289, "message": "Where does Symphony stop and API begin? To me, Core API is the public API", "group_id": 8448, "id": 740102}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215500.8381081, "message": "Domain objects", "group_id": 8448, "id": 740108}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214575.8172679, "message": "Makes a change :-)", "group_id": 8448, "id": 739965}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214843.956635, "message": "Just Alistair's famous awesome cake", "group_id": 8448, "id": 740019}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303214863.1419051, "message": "but it's hard to share through a laptop", "group_id": 8448, "id": 740022}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214877.1830549, "message": "Background is good", "group_id": 8448, "id": 740024}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215159.282793, "message": "All three of these I consider Core API", "group_id": 8448, "id": 740056}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215195.4096889, "message": "#2 is more like a framework (CodeIgniter), classes for doing things like building XML, creating sessions etc", "group_id": 8448, "id": 740061}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215648.7799971, "message": "Sorry Craig", "group_id": 8448, "id": 740135}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215830.7446051, "message": "which hits back at using private/protected/public methods correctly", "group_id": 8448, "id": 740171}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216022.76085, "message": "it has a fetch method", "group_id": 8448, "id": 740227}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216038.7132289, "message": "but it doesn't allow you to have a custom WHERE", "group_id": 8448, "id": 740230}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216241.9698949, "message": "This is something we chatted about when migrating the backend to XSLT", "group_id": 8448, "id": 740299}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216371.5133131, "message": "like the general class?", "group_id": 8448, "id": 740330}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218131.2094159, "message": "Factory design pattern? A generic way to load an object?", "group_id": 8448, "id": 740736}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303214728.550925, "message": "Hi guys", "group_id": 8448, "id": 740000}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214730.321306, "message": "They tried to start a splinter room", "group_id": 8448, "id": 740001}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303214734.4699609, "message": "and stage a coup", "group_id": 8448, "id": 740003}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303214994.6802509, "message": "how many chat groups do we need?", "group_id": 8448, "id": 740036}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215066.857707, "message": "1. A set of PHP classes to interact with Symphony in a very simple way. Symphony should use these itself. They should prevent code rewriting.", "group_id": 8448, "id": 740044}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215839.6330049, "message": "the thing that's left out in the dark at hte moment is delegates", "group_id": 8448, "id": 740176}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215255.8391371, "message": "Just that \"Core API\" should be more than just fetching entries \u2014 it's the interface we code anything against", "group_id": 8448, "id": 740065}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215335.4498539, "message": "BA?", "group_id": 8448, "id": 740079}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215446.7288079, "message": "What about error handling, is that considered API, too?", "group_id": 8448, "id": 740095}, {"user_id": 23057, "stars": [], "topic_id": 20301, "date_created": 1303215452.784472, "message": "What were your plans Rowan?", "group_id": 8448, "id": 740098}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215459.2804019, "message": "@huib no", "group_id": 8448, "id": 740099}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215532.6500609, "message": "I agree Nick", "group_id": 8448, "id": 740111}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215593.4629891, "message": "Ok, let me rein this in a bit", "group_id": 8448, "id": 740123}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215643.9051311, "message": "that would really help in two things:", "group_id": 8448, "id": 740132}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303214716.9443679, "message": "Hi", "group_id": 8448, "id": 739995}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303214814.2519701, "message": "No problem", "group_id": 8448, "id": 740013}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303214848.2289281, "message": "I had chocolate", "group_id": 8448, "id": 740020}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303214958.437206, "message": "S2 problem was that the Managers, while a good approach, are not a public API \u2014 there was never a _public_ API for S2's classes", "group_id": 8448, "id": 740029}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215011.284095, "message": "2. a RESTful API for more than just entries", "group_id": 8448, "id": 740038}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215100.5963271, "message": "(1. relates mostly to entries)", "group_id": 8448, "id": 740047}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215157.6717961, "message": "Sorry, what's the difference between 1 and 2?", "group_id": 8448, "id": 740055}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215259.4578719, "message": "Yes", "group_id": 8448, "id": 740066}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215861.613441, "message": "a good example is EntryPreEdit", "group_id": 8448, "id": 740180}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216293.3007951, "message": "anything else to be said about scope?", "group_id": 8448, "id": 740313}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215388.751487, "message": "(FWIW, I'm not suggesting we do drop in another framework, just that the Core API needs to consider all of the \"helper\" classes/functiosn we've got,. which could be built out)", "group_id": 8448, "id": 740086}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303215412.1538701, "message": "I plan on doing a large mount of core tidying up this easter holiday", "group_id": 8448, "id": 740088}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303215432.08233, "message": "Simple things like better class autoloading, etc", "group_id": 8448, "id": 740091}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215464.3920181, "message": "ok", "group_id": 8448, "id": 740101}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215476.692945, "message": "so Author, Entry, Event, Datasource, Section, View, Extension", "group_id": 8448, "id": 740103}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215606.549494, "message": "Yeah there is a fair bit of repetitiveness in the current codebase from memory", "group_id": 8448, "id": 740125}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215612.010529, "message": "Thanks Nick and Brendan for the background you've offered", "group_id": 8448, "id": 740126}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215360.8032279, "message": "- Classes shouldn't be as tightly coupled; Entry shouldn't rely on a method from Section for instance\n- Methods and variables should be named consistently\n- Methods should be consistent through all objects, ie. get shouldn't be fetch if they do the same thing\n- Use naming conventions help guessability of what should be returned; ie. isActive returns boolean\n- Use Static/Protected/Public/Private variables correctly\n- Everything should be documented from the start, pull requests will not be accepted otherwise\n- Classes/methods should aim to be written so they can be tested by unit tests\n- The `$this->_Parent` construct of Symphony 2 is dead, we should remember this and try not to make the same mistake twice\n- Delegates are currently not in the objects, they are tied to the presentation layer (ie. EntryPostCreate is on the publish page not the Entry class)", "group_id": 8448, "id": 740082}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215463.629796, "message": "I see Core API as being the Symphony objects", "group_id": 8448, "id": 740100}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303215508.1187479, "message": "@allen Get rid of any junk, sanitise how things are created, updated, basics really", "group_id": 8448, "id": 740109}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215547.2959361, "message": "everything that a content page for example uses to create it, should be accessible by the API", "group_id": 8448, "id": 740115}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215883.430217, "message": "that's definitely something we need to fix", "group_id": 8448, "id": 740188}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215981.5976961, "message": "yup", "group_id": 8448, "id": 740215}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215987.8952329, "message": "It should be simplier than what we have now, but more powerful", "group_id": 8448, "id": 740217}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215993.0329521, "message": "is it possible to create a UML with more than one person?", "group_id": 8448, "id": 740218}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216004.511451, "message": "yea i think so", "group_id": 8448, "id": 740220}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216015.3427589, "message": "will have a look around", "group_id": 8448, "id": 740224}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216019.4227591, "message": "A great example is the AuthorManager currently", "group_id": 8448, "id": 740226}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216056.6717911, "message": "or the fact that some listAll functions return names", "group_id": 8448, "id": 740238}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215589.707504, "message": "I'm thinking drafting the API on paper first would be better than jumping in and rewriting what we've got", "group_id": 8448, "id": 740121}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215645.5483601, "message": "No. That should be one of our goals", "group_id": 8448, "id": 740133}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216316.453356, "message": "That seems to be about it, indeed", "group_id": 8448, "id": 740321}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216354.507076, "message": "one thing to keep a view on here is what additional framework-y bits we'll want to look at adding to the system in order to make the API complete, if that makes sense", "group_id": 8448, "id": 740326}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216535.9595859, "message": "Is this the PDF from a while back nick?", "group_id": 8448, "id": 740371}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216669.5751901, "message": "and we've got a couple of minds on it this time :)", "group_id": 8448, "id": 740400}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303216782.648984, "message": "I'm personally not familiar with UML but I'd be happy to give it a shot", "group_id": 8448, "id": 740424}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216807.2762189, "message": "because we both have quite different tastes that worked really well", "group_id": 8448, "id": 740428}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303216812.548527, "message": "Unfortunately I don't understand how some of the ideas that have been brought forward here are intended to be integrated", "group_id": 8448, "id": 740429}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215730.9950571, "message": "so scope of API", "group_id": 8448, "id": 740151}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215849.925822, "message": "at present they are attached to the presentation layer", "group_id": 8448, "id": 740177}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215855.9962289, "message": "right... which I suppose needs to be kept to one side for now", "group_id": 8448, "id": 740179}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216301.053206, "message": "We need to flesh out the URL schema of the backend, probably so that it reflects the methods of the classes (create/update/fetch etc)", "group_id": 8448, "id": 740317}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216440.634531, "message": "we already know the basics", "group_id": 8448, "id": 740347}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216539.8619671, "message": "Short term goals I think should be to plan this thing out as much as possible, before jumping into code", "group_id": 8448, "id": 740373}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216983.4217651, "message": "yeah that's a good idea", "group_id": 8448, "id": 740465}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217180.8005221, "message": "fetch a paginated list of entries (with filters)", "group_id": 8448, "id": 740509}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217196.5449331, "message": "I made a short list:", "group_id": 8448, "id": 740516}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217333.9472899, "message": "So could provide inspiration", "group_id": 8448, "id": 740547}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217407.093154, "message": "It's the \"where\" bit that we'll need to think through the most", "group_id": 8448, "id": 740566}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218247.184561, "message": "Ok, step back then:", "group_id": 8448, "id": 740767}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215625.278055, "message": "Nick, this has been on my mind quite a while: do we have a drawn out schema of how the classes are supposed to work together?", "group_id": 8448, "id": 740129}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215636.603657, "message": "like a UML file or anything?", "group_id": 8448, "id": 740130}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215665.5939519, "message": "Our next item was to discuss the scope of the API, which Nick's already started to talk about", "group_id": 8448, "id": 740139}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215686.6517749, "message": "got carried away..;)", "group_id": 8448, "id": 740145}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215741.6555319, "message": "well I think everything is the API really", "group_id": 8448, "id": 740152}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215762.787955, "message": "My view on this can be demonstrated using the email API easiest", "group_id": 8448, "id": 740155}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215766.32217, "message": "We've got a) class design and b) RESTful backend", "group_id": 8448, "id": 740157}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215770.8969929, "message": "the API is everything the developer sees about the objects", "group_id": 8448, "id": 740159}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215797.701498, "message": "what happens in the background doesn't matter, it's the functions that can be called and the variables that can be set that matter", "group_id": 8448, "id": 740162}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215816.030695, "message": "yeah, that's what we should be aiming for", "group_id": 8448, "id": 740165}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215933.1027501, "message": "Yeah I like the idea of UML", "group_id": 8448, "id": 740201}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215945.5392361, "message": "but it's a really good process", "group_id": 8448, "id": 740206}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216047.0462871, "message": "yes", "group_id": 8448, "id": 740235}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216113.2736721, "message": "by reducing all these sorts of fetchBy* functions, we have a clearer API, but it's more powerful", "group_id": 8448, "id": 740262}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216115.9356339, "message": "lean, easy to understand, powerful API?", "group_id": 8448, "id": 740265}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216116.138587, "message": "that is a goal ;)", "group_id": 8448, "id": 740266}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216120.9992061, "message": ":-)", "group_id": 8448, "id": 740267}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216194.8521659, "message": "2) The API includes a RESTful interface?", "group_id": 8448, "id": 740287}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215953.501693, "message": "exactly", "group_id": 8448, "id": 740208}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215957.4084949, "message": "#3 Goals?", "group_id": 8448, "id": 740209}, {"user_id": 23057, "stars": [], "topic_id": 20301, "date_created": 1303216278.344672, "message": "Indeed", "group_id": 8448, "id": 740308}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216386.268784, "message": "there's been discussion of adding things like proper routing, for example", "group_id": 8448, "id": 740331}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215659.680151, "message": "#1: cleaner code, because it has been thought out before it is coded", "group_id": 8448, "id": 740137}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215677.6646249, "message": "#2: ease of understanding the core", "group_id": 8448, "id": 740141}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215682.3530259, "message": "yes, sorry", "group_id": 8448, "id": 740143}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303215864.3826139, "message": "ah", "group_id": 8448, "id": 740182}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215878.6525371, "message": "this is duplicated twice in the UI layer, on the Entry page, and on the Index page via the With Selected", "group_id": 8448, "id": 740187}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216060.0636771, "message": "others return objects", "group_id": 8448, "id": 740240}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216074.6196489, "message": "but they still don't allow custom code", "group_id": 8448, "id": 740249}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216569.7905941, "message": "So I think chapter 2 of that PDF summarizes the broad goals for the API", "group_id": 8448, "id": 740380}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216642.160238, "message": "remember Symphony 2 (to my knowledge) had none of this sort of planning", "group_id": 8448, "id": 740396}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216228.316901, "message": "yeah, that would be really awesome, to be honest", "group_id": 8448, "id": 740297}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303215896.418458, "message": "should this API include delegates on the objects?", "group_id": 8448, "id": 740191}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216011.5358641, "message": "@Huib yes", "group_id": 8448, "id": 740221}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216124.9381061, "message": "as far as scope...", "group_id": 8448, "id": 740270}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216870.0005119, "message": "I don't think the purpose of this chat is to iron out all of the implementations", "group_id": 8448, "id": 740439}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217186.628437, "message": "update an entry", "group_id": 8448, "id": 740513}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217490.621691, "message": "(for reference)", "group_id": 8448, "id": 740587}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218033.3767619, "message": "So split the Query bit out of the iterator", "group_id": 8448, "id": 740714}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218041.7352059, "message": "which is what I did", "group_id": 8448, "id": 740716}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218050.1765201, "message": "But don't do Entry::loadId(...)", "group_id": 8448, "id": 740718}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218156.699842, "message": "Factory::load(objecttype, clause)", "group_id": 8448, "id": 740741}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218284.2936971, "message": "Entries::fetchCustom(new EntriesQuery('whatever'))", "group_id": 8448, "id": 740776}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218333.810365, "message": "Why Entries::fetchCustom and not just EntriesQuery->fetch?", "group_id": 8448, "id": 740793}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218518.9454291, "message": "Yes, agreed", "group_id": 8448, "id": 740851}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218542.919944, "message": "@brendan: what you said", "group_id": 8448, "id": 740862}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218555.8851559, "message": "But then why have one method to fetch by ID and one to fetch by anything else that use two completely different styles of code?", "group_id": 8448, "id": 740868}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303215911.5654631, "message": "I vote \"it depends\"", "group_id": 8448, "id": 740195}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303215943.825114, "message": "but it will be so rewarding", "group_id": 8448, "id": 740205}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216150.917279, "message": "no, all the public methods and properties of those classes", "group_id": 8448, "id": 740275}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216157.393563, "message": "right", "group_id": 8448, "id": 740278}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216185.66401, "message": "sorry for interrupting", "group_id": 8448, "id": 740284}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216481.8513789, "message": "thanksn ick", "group_id": 8448, "id": 740356}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216485.3562679, "message": "thanks nick*", "group_id": 8448, "id": 740359}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216573.982383, "message": "anything to add there?", "group_id": 8448, "id": 740381}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216263.698271, "message": "Backend controllers expose an XML doc to XSLT, so we realised it was one extra step to expose the raw XML", "group_id": 8448, "id": 740304}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216063.9672799, "message": "others return about functions", "group_id": 8448, "id": 740243}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216679.0457449, "message": "yes, exactly", "group_id": 8448, "id": 740403}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216687.8320479, "message": "one second, printing the document", "group_id": 8448, "id": 740405}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216787.05182, "message": "before actually writing it", "group_id": 8448, "id": 740426}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217289.841222, "message": "Yeah", "group_id": 8448, "id": 740539}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216069.7848401, "message": "this is a) different to the EntryManager b) supplemented by two other functions, fetchByUsername, fetchByID", "group_id": 8448, "id": 740246}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216134.4912651, "message": "1) the API is all core classes", "group_id": 8448, "id": 740273}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216161.62763, "message": "thanks", "group_id": 8448, "id": 740280}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216224.886591, "message": "Ish", "group_id": 8448, "id": 740296}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216417.906399, "message": "anyway, for now, I think we're good", "group_id": 8448, "id": 740337}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216451.329088, "message": "tough to misuse", "group_id": 8448, "id": 740351}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216457.0735259, "message": "I recommend everyone reads http://chaos.troll.no/~shausman/api-design/api-design.pdf", "group_id": 8448, "id": 740352}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216519.1361001, "message": "\"As you implement the API or write unit tests for your implementation, you will most probably find flaws or undefined corner cases in your original design. Use this opportunity to refine your design, but don\u2019t let implementation considerations leak into the API, apart in exceptional cases (e.g., optimization options).\"", "group_id": 8448, "id": 740366}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216539.418668, "message": "it's a pretty good read", "group_id": 8448, "id": 740372}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216540.7678959, "message": "it is", "group_id": 8448, "id": 740374}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216589.4561069, "message": "We don't necessarily have to model the whole system in UML if that's not going to be useful, but getting something down to discuss would be useful", "group_id": 8448, "id": 740383}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303216627.1144929, "message": "I guess it doesn't have to be strict UML either, I think the 80/20 rule is going to be applicable here", "group_id": 8448, "id": 740392}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216632.9553931, "message": "Yarp", "group_id": 8448, "id": 740394}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216750.6246419, "message": "I'd be happy to entrust it to a single person, so long as it could be reviewed before the point of no return", "group_id": 8448, "id": 740418}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216798.520947, "message": "online tool like creately.com?", "group_id": 8448, "id": 740427}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217032.46525, "message": "(SQL free API ftw)", "group_id": 8448, "id": 740477}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217112.0870731, "message": "Entries/Sections/Fields is by far the biggest part of all of this", "group_id": 8448, "id": 740494}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216285.0766101, "message": "ok...", "group_id": 8448, "id": 740311}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216421.825279, "message": "Goals", "group_id": 8448, "id": 740338}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216443.1981299, "message": "easy to learn", "group_id": 8448, "id": 740349}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217348.5263729, "message": "etc", "group_id": 8448, "id": 740551}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216431.191678, "message": "Brendan's gotten us off to a good start with his list above", "group_id": 8448, "id": 740344}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217221.7011139, "message": "Some extensions that mess with entries", "group_id": 8448, "id": 740524}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217222.6387811, "message": "sorry guys, net dropped out", "group_id": 8448, "id": 740525}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217780.250767, "message": "how would you go about it with the iterator?", "group_id": 8448, "id": 740651}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217894.2492931, "message": "(sidenote, array shouldn't be capitalized as it's not a class)", "group_id": 8448, "id": 740675}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303216685.5152321, "message": "How are we going to collab on that?", "group_id": 8448, "id": 740404}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303216895.8886411, "message": "@buzzomatic Does it help to not think of the task as an integration but rather as a fresh start?", "group_id": 8448, "id": 740442}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218195.5075929, "message": "I am talking about a factory pattern", "group_id": 8448, "id": 740756}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303217117.5757999, "message": "so from what I've gleaned from the PDF Nick's shared, and other reading I did in the wee hours this morning, the thing to do would be to think through use cases for that bit of the API... entries/sections/fields", "group_id": 8448, "id": 740495}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217199.408752, "message": "delete an entry", "group_id": 8448, "id": 740518}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217270.08271, "message": "Which is where SymQL/SymQuery came in useful, providing a (albeit very contrived, experimental) set of methods on top", "group_id": 8448, "id": 740536}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217412.9574699, "message": "Yeah", "group_id": 8448, "id": 740567}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217453.506187, "message": "@rowan: exactly", "group_id": 8448, "id": 740581}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217515.6941881, "message": "this wouldn't be ideal for entries, because it would assume the iterator already has all the entries in memory", "group_id": 8448, "id": 740591}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217536.7861669, "message": "but you get the idea", "group_id": 8448, "id": 740596}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216691.950542, "message": "Yeah. I don't think it was ever considered that the innards of S2 would be used as public methods. It began closed source, remember", "group_id": 8448, "id": 740407}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217148.0175829, "message": "I can see that some slightly disconnected classes could be done seperately", "group_id": 8448, "id": 740498}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217148.235642, "message": "Agreed", "group_id": 8448, "id": 740499}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218935.6693599, "message": "I like the chaining here", "group_id": 8448, "id": 741004}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219057.0074749, "message": "I agree", "group_id": 8448, "id": 741036}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219073.528784, "message": "the SymQL/SymRead chaining is useful", "group_id": 8448, "id": 741040}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216753.601794, "message": "still, thats why I think collab is important", "group_id": 8448, "id": 740419}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216783.328902, "message": "for instance on the email API michael and I have been discussing the API over and over again", "group_id": 8448, "id": 740425}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217347.5099599, "message": "getElementsByName, getElementsById", "group_id": 8448, "id": 740550}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217374.201972, "message": "Code thought/out of scope comment: $i = EntryIterator(); $i->where('name', 'foobar'); $entry = $i->current();", "group_id": 8448, "id": 740558}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217733.199465, "message": "or symhony", "group_id": 8448, "id": 740640}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217747.613621, "message": "Agreed", "group_id": 8448, "id": 740645}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216704.8037989, "message": "Collab will be tricky", "group_id": 8448, "id": 740409}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216721.464658, "message": "As everyone has their own preference in style", "group_id": 8448, "id": 740412}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216822.7433691, "message": "Rowan and I have SymQL/SymQuery which share a lot, so that would be useful as a starting point... but it shouldn't prescribe the S3 ideas (or even whether they are appropriate)", "group_id": 8448, "id": 740431}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217430.053519, "message": "Just foreach it", "group_id": 8448, "id": 740575}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217432.0277359, "message": "can't we just use a filterediterator?", "group_id": 8448, "id": 740577}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303216934.064405, "message": "By the way, I see this UML document as a document of the entire core, am I correct in this?", "group_id": 8448, "id": 740450}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303216977.6540511, "message": "Entries/Sections/Fields must be done first, for example", "group_id": 8448, "id": 740461}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303216981.9227419, "message": "Agreed", "group_id": 8448, "id": 740464}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217012.40272, "message": "nice", "group_id": 8448, "id": 740472}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217064.8158879, "message": "agreed", "group_id": 8448, "id": 740482}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217073.1733689, "message": "As an aside: the BBC guys working on Glow (http://www.bbc.co.uk/glow/docs/1.7/) actually write the API documentation (unit tests...) before writing the code itself", "group_id": 8448, "id": 740484}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217015.2977691, "message": "How those work together is most important, especially if we want a mostly SQL free API", "group_id": 8448, "id": 740474}, {"user_id": 23057, "stars": [], "topic_id": 20301, "date_created": 1303217037.9326849, "message": "Agreed", "group_id": 8448, "id": 740478}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217476.962724, "message": "http://php.net/manual/en/class.filteriterator.php", "group_id": 8448, "id": 740585}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217709.6640019, "message": "so you still are writing your own API", "group_id": 8448, "id": 740634}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218111.005609, "message": "so what if there was one common method to do this for everything in symphony?", "group_id": 8448, "id": 740730}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218373.2269011, "message": "I don't think anyone is arguing that the current implementation of Manager's is correct", "group_id": 8448, "id": 740805}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218511.6067209, "message": "but it should not be the way to get the objects", "group_id": 8448, "id": 740847}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217168.4235899, "message": "Entries for example: fetch an entry by ID (edit form)", "group_id": 8448, "id": 740505}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217294.3352849, "message": "We've talked a bit about ORMs", "group_id": 8448, "id": 740540}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217737.066854, "message": "The iterator would just return the entries?", "group_id": 8448, "id": 740641}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217739.967226, "message": "imo", "group_id": 8448, "id": 740643}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217969.3645251, "message": "Entries should not be static however", "group_id": 8448, "id": 740690}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218020.5177031, "message": "Yes", "group_id": 8448, "id": 740709}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218096.068049, "message": "Fuck EntryManager", "group_id": 8448, "id": 740726}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218128.474839, "message": "Think of this as building a query, not as some Manager with a limited set of functionality", "group_id": 8448, "id": 740735}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303216962.7306249, "message": "I think UML should be done in stages", "group_id": 8448, "id": 740456}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217161.4393461, "message": "@brendo, agreed", "group_id": 8448, "id": 740503}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217633.4161029, "message": "no, that doesn't make sense..", "group_id": 8448, "id": 740612}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217637.741204, "message": "I'm with you on new Entry()", "group_id": 8448, "id": 740613}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217764.3350279, "message": "@rowan", "group_id": 8448, "id": 740649}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217820.1206529, "message": "(yeah)", "group_id": 8448, "id": 740661}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217854.5636649, "message": "$entries = Entries::getById(Array(1,2,4));", "group_id": 8448, "id": 740667}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217869.4179831, "message": "done", "group_id": 8448, "id": 740670}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217992.4912219, "message": "EntryManager...", "group_id": 8448, "id": 740698}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218171.6617529, "message": "and that would return an array of objecttype", "group_id": 8448, "id": 740747}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218584.0920911, "message": "firefox doesn;t like convore", "group_id": 8448, "id": 740881}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219109.6093221, "message": "How do you handle a where and/or two levels deep?", "group_id": 8448, "id": 741065}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219188.0801671, "message": "WHERE 1 = 1 AND (2 = 2 OR 3 = 3)", "group_id": 8448, "id": 741094}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219457.874274, "message": "I like the manager to \"know\" the table", "group_id": 8448, "id": 741199}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217089.6298881, "message": "yes, it happens a lot", "group_id": 8448, "id": 740489}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217184.38253, "message": "create an entry", "group_id": 8448, "id": 740511}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217311.4633861, "message": "We're pretty clear that an ORM would be a bad idea in terms of the actual object mapping to databases", "group_id": 8448, "id": 740542}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217396.9712231, "message": "Sounds good", "group_id": 8448, "id": 740562}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217650.9019439, "message": "But if you want to return a collection of domain objects", "group_id": 8448, "id": 740619}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217545.602061, "message": "Not really, no", "group_id": 8448, "id": 740597}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217561.820399, "message": "Iterators aside, how about one level up. Would there be a single \"Entries\" class? Would I even need to create an EntryIterator()?", "group_id": 8448, "id": 740599}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217579.3230081, "message": "Entries::fetch(...)", "group_id": 8448, "id": 740604}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217642.6139879, "message": "Create a single domain object", "group_id": 8448, "id": 740615}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217650.3410721, "message": "Why not?", "group_id": 8448, "id": 740618}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217678.999753, "message": "if you wanted to get 3 entries with id's 1,2,3", "group_id": 8448, "id": 740630}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217701.6673341, "message": "you'd have to loop over the ideas and do the new Entry; entry->load", "group_id": 8448, "id": 740632}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217721.6589141, "message": "Perhaps this is what we need to establish. Is there a conventional design pattern that we can all follow to be consistent?", "group_id": 8448, "id": 740635}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217722.946039, "message": "it's nice for single objects", "group_id": 8448, "id": 740637}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217814.502316, "message": "But with a where clause, obviously", "group_id": 8448, "id": 740658}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217818.740052, "message": "but I already have the ID's of the entries I want", "group_id": 8448, "id": 740660}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217859.4728489, "message": "!!", "group_id": 8448, "id": 740668}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217931.233182, "message": "It's longer, but one way to do it is better than two", "group_id": 8448, "id": 740681}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217950.8784161, "message": "Fair enough", "group_id": 8448, "id": 740685}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217961.569294, "message": "@nick, that feels wrong", "group_id": 8448, "id": 740687}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217961.986398, "message": "to be simple and easy to use", "group_id": 8448, "id": 740688}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217988.217325, "message": "entries is the manager class, here", "group_id": 8448, "id": 740697}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217158.846734, "message": "The system has some obvious use cases already", "group_id": 8448, "id": 740502}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218290.9882879, "message": "Messy, redundant code split between Entry and EntryManager", "group_id": 8448, "id": 740779}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218390.541579, "message": "totally agree with that nick", "group_id": 8448, "id": 740813}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218501.3065259, "message": "I think the iterator pattern is fine", "group_id": 8448, "id": 740840}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218661.5284469, "message": "Although they do make development easier", "group_id": 8448, "id": 740917}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218739.0412531, "message": "However it doesn't quite solve it when we want to filter Entry's data", "group_id": 8448, "id": 740942}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218824.6746991, "message": "So let's write a couple of examples:", "group_id": 8448, "id": 740968}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218829.0470159, "message": "- getting a single entry by ID", "group_id": 8448, "id": 740970}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218838.863189, "message": "- getting entries with a Title matching a regexp", "group_id": 8448, "id": 740972}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218843.709434, "message": "- creating a new entry", "group_id": 8448, "id": 740974}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218866.791527, "message": "- getting multiple entries with IDs", "group_id": 8448, "id": 740983}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219096.4676239, "message": "get() implies that something is going to be returned right away", "group_id": 8448, "id": 741051}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219218.353857, "message": "SymQL had a pretty nasty enum passed as an optional argument", "group_id": 8448, "id": 741100}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217202.1355391, "message": "- XMLImporter: check if an entry exists (if a field contains a certain value), update it or create new (set data)\n- Search Index: return XML of an entry of some fields only\n- Subsection Manager: return whole XML of an entry\n- Entity Diagram: get all sections and fields, determine relationships\n- Order Entries: use an AJAX page to update the entry order field of all fields in a section (uses raw SQL)\n- REST API: read/update/insert entries (uses DS/Events), read authors and sections (*Manager), update/insert authors and sections (none)", "group_id": 8448, "id": 740521}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217309.0286331, "message": "I'd like to continue the *Iterator concept used in S3 currently", "group_id": 8448, "id": 740541}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217416.334775, "message": "I hate the current() and next functions", "group_id": 8448, "id": 740569}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217660.9467599, "message": "I don't", "group_id": 8448, "id": 740622}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217669.3242209, "message": "I'm sorta leaning towards Huib here", "group_id": 8448, "id": 740624}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217671.4984159, "message": "This works in a way similar to DOMDocument", "group_id": 8448, "id": 740627}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217681.261291, "message": "Manager design pattern?", "group_id": 8448, "id": 740631}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217884.563133, "message": "the object returned by the Entries object will be a iterator object", "group_id": 8448, "id": 740672}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217911.647701, "message": "$entries = new EntryIterator(); $entries->where('id', array(1,2,3)); foreach($entries as $entry) {... }", "group_id": 8448, "id": 740678}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217325.402123, "message": "But the API methods that ORMs expose can be really easy to use", "group_id": 8448, "id": 740546}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218666.5645249, "message": "I quite like the way SymQL works, and would like the API to be more like that but with better integration", "group_id": 8448, "id": 740920}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218850.628052, "message": "getting multiple id's", "group_id": 8448, "id": 740976}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219017.2903399, "message": "or is chaining perferrable because of the jQuery fame?", "group_id": 8448, "id": 741024}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219017.92957, "message": "I don't like the get('id', 1) function at all", "group_id": 8448, "id": 741025}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219031.7937829, "message": "My chaining example is horrible, by the way", "group_id": 8448, "id": 741032}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219104.1741731, "message": "select()->where()->and()->group() etc", "group_id": 8448, "id": 741054}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217334.351747, "message": "yes, I really like the cake way:", "group_id": 8448, "id": 740548}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217369.4476581, "message": "definitely", "group_id": 8448, "id": 740557}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217422.443048, "message": "Hehe", "group_id": 8448, "id": 740571}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217425.9201429, "message": "Meh", "group_id": 8448, "id": 740572}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217430.5802341, "message": "Why?", "group_id": 8448, "id": 740576}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217609.561409, "message": "$entry = new Entry(); $entry->loadDataById($blah);", "group_id": 8448, "id": 740607}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217615.7094009, "message": "Sick of stupid static functions", "group_id": 8448, "id": 740608}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217644.244354, "message": "I'm not", "group_id": 8448, "id": 740616}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217661.7722261, "message": "instead of filling it with data later", "group_id": 8448, "id": 740623}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217730.012593, "message": "like domdocument", "group_id": 8448, "id": 740639}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217737.478112, "message": "but it's horrible otherwise", "group_id": 8448, "id": 740642}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217747.703016, "message": "yeah I don't think we should be using DOMDocument as an example of a good API", "group_id": 8448, "id": 740646}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217775.871866, "message": "so in the case of getting three entries with id's 1,2,3", "group_id": 8448, "id": 740650}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217862.4827459, "message": "foreach($entries a $entry){", "group_id": 8448, "id": 740669}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217950.4989879, "message": "I think it breaks one of our design principles", "group_id": 8448, "id": 740684}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217978.8968329, "message": "@Huib, agreed", "group_id": 8448, "id": 740693}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217994.8225329, "message": "the manager classes at the moment being not static is a major bottleneck", "group_id": 8448, "id": 740699}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217995.3414481, "message": "it should be static, because there has to be only one", "group_id": 8448, "id": 740700}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218015.784971, "message": "then that query should be a class", "group_id": 8448, "id": 740704}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218073.75457, "message": "well this is a common thing here between all Symphony objects", "group_id": 8448, "id": 740720}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218087.1573579, "message": "EntryManager::loadById(..)? what's wrong with that?", "group_id": 8448, "id": 740723}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218145.5894091, "message": "@nickdunn yeah perhaps?", "group_id": 8448, "id": 740739}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218420.2951419, "message": "that's why I'm against that iterator pattern, I'm fine if that's how it's done privately, but it should not be exposed as the public API", "group_id": 8448, "id": 740823}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218178.913502, "message": "That's why I ask, is there a design pattern that we're actually talking about right now wiothout realising it?", "group_id": 8448, "id": 740752}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218194.6375189, "message": "If there's already a design pattern, let's see how it can be applied", "group_id": 8448, "id": 740755}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218377.828613, "message": "Hehe", "group_id": 8448, "id": 740807}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218683.434936, "message": "Rather than having to remember fetch(\"system:id\", value) i.e. remembering what string values I can pass", "group_id": 8448, "id": 740925}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218747.415081, "message": "Building up multiple filters", "group_id": 8448, "id": 740944}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218854.0852571, "message": "What might it look like?", "group_id": 8448, "id": 740979}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218867.1014919, "message": "$e = Entries::getById($id);", "group_id": 8448, "id": 740984}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218921.854774, "message": "And what about combining filters?", "group_id": 8448, "id": 740999}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218939.6822369, "message": "See, Entries has become the same as EntryManager (but static)", "group_id": 8448, "id": 741006}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217574.9583099, "message": "No Entries class", "group_id": 8448, "id": 740603}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217591.368855, "message": "this is where I get concerned", "group_id": 8448, "id": 740606}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217653.8065939, "message": "I think a function should return the object", "group_id": 8448, "id": 740621}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217708.459619, "message": "exatly", "group_id": 8448, "id": 740633}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217811.898469, "message": "by the way, is convore taking up a lot of CPU with you, too?", "group_id": 8448, "id": 740656}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303217831.21209, "message": "Ok, what about this:", "group_id": 8448, "id": 740664}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218179.002043, "message": "?", "group_id": 8448, "id": 740753}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218522.385632, "message": "there should be a factory method that returns the iterator", "group_id": 8448, "id": 740852}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218661.5185111, "message": "those functions could also be defined magically", "group_id": 8448, "id": 740916}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218686.137548, "message": "I believe cake does that, every field in your data can be accessed using the getby function", "group_id": 8448, "id": 740927}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217799.4614589, "message": "foreach (new EntryIterator() as $entry) { ... }", "group_id": 8448, "id": 740655}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217824.654088, "message": "Yep", "group_id": 8448, "id": 740662}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217828.6272931, "message": "So?", "group_id": 8448, "id": 740663}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217880.5548091, "message": "Really not happy about that", "group_id": 8448, "id": 740671}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303217998.7451351, "message": "You may want to build an entry query, and re-use it later", "group_id": 8448, "id": 740701}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218205.278244, "message": "combined with the iterator patterns", "group_id": 8448, "id": 740758}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218261.2518229, "message": "@rowan what's the main reason you dislike managers?", "group_id": 8448, "id": 740771}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218421.1742311, "message": "I can't see a reason not to use it and to use a Manager instead, have one way of doing things instead of two", "group_id": 8448, "id": 740824}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218474.7581639, "message": "I think we've explained why", "group_id": 8448, "id": 740833}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218914.3732901, "message": "$e = new Entry();\nEntries::save($e);", "group_id": 8448, "id": 740997}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218962.2881, "message": "$e->getByname()->and()->getByid()->and()", "group_id": 8448, "id": 741013}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303217929.9627309, "message": "It feels wrong that the iterator should have the where", "group_id": 8448, "id": 740680}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217970.0346749, "message": "to me that feels verbose", "group_id": 8448, "id": 740691}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217976.453732, "message": "and it's not intiutive", "group_id": 8448, "id": 740692}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303217981.3300631, "message": "@rowan, definitely", "group_id": 8448, "id": 740694}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218019.752315, "message": "remember I did that experiment of moving all of Symphony across to static, (static-test branch)", "group_id": 8448, "id": 740707}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218020.0343449, "message": "not the manager class", "group_id": 8448, "id": 740708}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218133.5735559, "message": "any*", "group_id": 8448, "id": 740737}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218581.8014009, "message": "that was just an example I believe", "group_id": 8448, "id": 740880}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218593.3648951, "message": "switching to chrome, 1 sec", "group_id": 8448, "id": 740886}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219039.5733731, "message": "Hah", "group_id": 8448, "id": 741033}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303219363.4340811, "message": "how did you know i was going to create a field called My Crazy Field?", "group_id": 8448, "id": 741158}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218126.804069, "message": "rowan, what's wrong with managers?", "group_id": 8448, "id": 740734}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218330.112957, "message": "How might I get a single entry?", "group_id": 8448, "id": 740792}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218362.85233, "message": "By all means use that internally, but it doesn't feel like a logical public API", "group_id": 8448, "id": 740803}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218399.642626, "message": "me too", "group_id": 8448, "id": 740818}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218518.529629, "message": "again, internally it can be done like that (private), but the API should be intuitive (public)", "group_id": 8448, "id": 740850}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218983.1591821, "message": "Huib, see EntriesQuery", "group_id": 8448, "id": 741020}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219388.4913599, "message": "I don't mind it", "group_id": 8448, "id": 741169}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219394.3105381, "message": "me neither, I like it even", "group_id": 8448, "id": 741173}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219530.629123, "message": "example: varchar could accept literal and regexp", "group_id": 8448, "id": 741220}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219644.137418, "message": "$entries = Entries::getById(...); $entry = $entries->current();", "group_id": 8448, "id": 741265}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219653.84325, "message": "How does it know you're only expecting one?", "group_id": 8448, "id": 741267}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219673.0434201, "message": "yes but does it return an array with a single entry or an array of entries", "group_id": 8448, "id": 741277}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219772.2352729, "message": "Just a note: 'title'\t=> 'regexp:Nick'", "group_id": 8448, "id": 741305}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219834.666966, "message": "or maybe even:", "group_id": 8448, "id": 741324}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219873.2867329, "message": "Pagination can be had through the more advanced API", "group_id": 8448, "id": 741336}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218350.0738969, "message": "Because if I have to create an iterator and then use current() then to me that isn't an obvious, simple API", "group_id": 8448, "id": 740799}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218648.7277851, "message": "I donh't think there should be separate getById, getByName etc, if it can be avoided", "group_id": 8448, "id": 740910}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303218581.720674, "message": "guys, I want to interrupt just for a second", "group_id": 8448, "id": 740879}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218614.366044, "message": "Yeah, I guess there'd need to be a generic \"where\" or \"fetch\" method to which you pass filters, much like DS filters", "group_id": 8448, "id": 740898}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218626.6072371, "message": "or, hey, a filter() method :-P", "group_id": 8448, "id": 740900}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303218789.6960709, "message": "Ahem. Quick announcement. I think we've got the scope question and the broad goals sorted, and we've agreed on the next steps (UML-ish outline, start with entries, sections, and fields). Consider that part of the meeting over, I'll work on the skeleton of a proposal, and you guys feel free to continue discussing implementation as long as you like.", "group_id": 8448, "id": 740961}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218960.6667509, "message": "Wouldn';t you call save() on the entry itself?", "group_id": 8448, "id": 741012}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219143.7793169, "message": "You'd have to take the result of ->where() and call ->where again?", "group_id": 8448, "id": 741082}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219367.186393, "message": "my-crazy-field-handle => My-Crazy-Field-Handle => MyCrazyFieldHandle", "group_id": 8448, "id": 741161}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218247.498632, "message": "You want a way to get an iterator, but I don't want to have to write a specific function for just fetching by Id that is separate from the field querying", "group_id": 8448, "id": 740768}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218249.7831681, "message": "@rowan: you could also do something like this:", "group_id": 8448, "id": 740769}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218491.8804481, "message": "it's not intuitive and breaks our most important goal", "group_id": 8448, "id": 740838}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218565.5002789, "message": "This is what I'm not happy about", "group_id": 8448, "id": 740874}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218965.8288641, "message": "And the real querying side of Entries is passed off to external class", "group_id": 8448, "id": 741014}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219040.5298691, "message": "is*", "group_id": 8448, "id": 741034}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219117.7949009, "message": "Hehe @Huib, that's SymQL", "group_id": 8448, "id": 741067}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219132.0465839, "message": "never used it to be honest.. ;)", "group_id": 8448, "id": 741077}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219168.3301029, "message": "@buzzomatic could yo elaborate?", "group_id": 8448, "id": 741087}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219257.24231, "message": "Hmm..", "group_id": 8448, "id": 741113}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219268.821053, "message": "it could be possible if you had a query object", "group_id": 8448, "id": 741119}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219356.7537961, "message": "not*", "group_id": 8448, "id": 741154}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218988.694135, "message": "Entries::get('id', 1); Entries::get('id', array(1,2,3)); Entries::get(array('title' => /pattern/, 'active' => 'yes'))", "group_id": 8448, "id": 741022}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219082.858319, "message": "touche", "group_id": 8448, "id": 741045}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219223.9338889, "message": "This is currently possible in Symphony 3", "group_id": 8448, "id": 741102}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219229.2977369, "message": "But through SQL hackery", "group_id": 8448, "id": 741103}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219385.3575549, "message": "It's reversable too", "group_id": 8448, "id": 741168}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219474.61024, "message": "Remember, this is a shortcut to avoid creating your own EntryQuery object", "group_id": 8448, "id": 741206}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219670.7214711, "message": "just like the functions in the DOM", "group_id": 8448, "id": 741275}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220068.6945159, "message": "getBy(array('id'=>1, 'name'=>'test')", "group_id": 8448, "id": 741402}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220433.2544439, "message": "exactly", "group_id": 8448, "id": 741537}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220644.4399559, "message": ":-", "group_id": 8448, "id": 741583}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220663.1620209, "message": "A lot of the time you just have a section ID or handle", "group_id": 8448, "id": 741585}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220677.2132151, "message": "No biggie really", "group_id": 8448, "id": 741591}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218702.6413071, "message": "so if you have an id and a name, you would have:", "group_id": 8448, "id": 740930}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218705.830442, "message": "Huib, that somewhat solves the problem", "group_id": 8448, "id": 740932}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218709.309361, "message": "getById() and getByname()", "group_id": 8448, "id": 740933}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218718.6635399, "message": "I want to have _one_ basic way of doing things, even if it is abstracted", "group_id": 8448, "id": 740935}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218723.313463, "message": "Indeed", "group_id": 8448, "id": 740937}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218738.6509581, "message": "I am too!", "group_id": 8448, "id": 740941}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218766.945781, "message": "Maybe you want to filter on 3 entry IDs and a checkbox (to get up to three entries)", "group_id": 8448, "id": 740948}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303218776.6663721, "message": "But I suppose I'm muddling concepts", "group_id": 8448, "id": 740953}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303218777.7870929, "message": "There should be an EntryQuery class for actually asking for entry Ids, EntryIterator for instanciating entry Ids and Entry for dealing with the entries themselves?", "group_id": 8448, "id": 740954}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218785.4987891, "message": "I believe cake does it like this:", "group_id": 8448, "id": 740959}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218890.9974999, "message": "$e = Entries::getByName(new RegExp('');", "group_id": 8448, "id": 740993}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218940.2708189, "message": "so something like:", "group_id": 8448, "id": 741007}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303218985.8403969, "message": "ok", "group_id": 8448, "id": 741021}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220010.814013, "message": "nick, that example is bad because getBy is a shortcut to getting the entries", "group_id": 8448, "id": 741377}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220049.9412429, "message": "getById(1)", "group_id": 8448, "id": 741392}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220056.9305129, "message": "nickdunn, behind the scenes getBy uses EntryQuery", "group_id": 8448, "id": 741395}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220120.053051, "message": "I didn't like the idea of chaining getBy statements", "group_id": 8448, "id": 741430}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220129.5590539, "message": "I'd prefer this:", "group_id": 8448, "id": 741433}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220177.0065801, "message": "It doesn't make sense to me to add sorting into that call", "group_id": 8448, "id": 741452}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220177.173157, "message": "I think that is the easiest to understand", "group_id": 8448, "id": 741453}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303218999.7911501, "message": "what about just passing an array?", "group_id": 8448, "id": 741023}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219064.1179171, "message": "on a sql class the zend way is really cool:", "group_id": 8448, "id": 741037}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219139.5844171, "message": "symql that is", "group_id": 8448, "id": 741080}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219573.355757, "message": "Are we crossing the boundary between data source filtering syntax and API design?", "group_id": 8448, "id": 741236}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219885.6896341, "message": "I'm not keen on the All thing. Maybe it always needs to return an array/iterator", "group_id": 8448, "id": 741339}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219891.9113719, "message": "With the current() wotsit", "group_id": 8448, "id": 741342}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219980.0490761, "message": "Agreed, no duplication for \"all\"", "group_id": 8448, "id": 741365}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219984.971621, "message": "so current in that case would return Entry(1)", "group_id": 8448, "id": 741369}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220130.730351, "message": "Grammatically incorrect", "group_id": 8448, "id": 741434}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220192.6017981, "message": "Sorting should be a separate method call", "group_id": 8448, "id": 741463}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219031.5329599, "message": "See the API pdf about passing arrays \u2014 I'm inclined to agree that chaining (or multiple methods) while more verbose it more readable", "group_id": 8448, "id": 741030}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219205.130306, "message": "Right", "group_id": 8448, "id": 741099}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219847.095587, "message": "getAllById(array())", "group_id": 8448, "id": 741325}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219919.8059139, "message": "i don't really mind, to be honest", "group_id": 8448, "id": 741348}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220120.8928721, "message": "and then the advanced things could be added in a second parameter", "group_id": 8448, "id": 741431}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220182.1897271, "message": "No", "group_id": 8448, "id": 741457}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219282.419564, "message": "it would become something like:", "group_id": 8448, "id": 741124}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219326.094528, "message": "My other question about building these get* methods is... that works fine when you've got private properties that these map on to on the object itself. But would they correctly map on to _field_ names within an entry?", "group_id": 8448, "id": 741138}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219425.8988731, "message": "Well whatever", "group_id": 8448, "id": 741181}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219642.7641461, "message": "if you are only expecting one it should only return one", "group_id": 8448, "id": 741263}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219829.6901469, "message": "getBy()", "group_id": 8448, "id": 741321}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219066.863724, "message": "So Brendan you example might be addFilter() rather than get()", "group_id": 8448, "id": 741039}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219105.3103881, "message": "Whereas you're building up a query", "group_id": 8448, "id": 741058}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219140.6465411, "message": "Which is neat, but tightly coupled to SQL, and oriented toward Entries", "group_id": 8448, "id": 741081}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219170.1175251, "message": "->where()->and()->and()?", "group_id": 8448, "id": 741088}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219196.698987, "message": "@czheng, sounds good to me", "group_id": 8448, "id": 741097}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219942.915159, "message": "getByid(12, array('pagination'=>true);", "group_id": 8448, "id": 741355}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219333.9655199, "message": "getByMyCrazyFieldHandle", "group_id": 8448, "id": 741142}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219350.0170519, "message": "Not sure I like that.", "group_id": 8448, "id": 741149}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219355.158196, "message": "why noy?", "group_id": 8448, "id": 741153}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221556.8466239, "message": "two minds, one though", "group_id": 8448, "id": 741788}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219282.7221551, "message": "Pass in sub query to where()?", "group_id": 8448, "id": 741125}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219571.0693569, "message": "If ::getById can return multiple entries, don't you still need to call ->current() on the iterator it returns?", "group_id": 8448, "id": 741235}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219677.819561, "message": "getBy = one? getAllBy = many?", "group_id": 8448, "id": 741278}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303219681.0400331, "message": "Guys, I have to run out for a bit. Thanks all for participating. Will catch up with the transcript later and hopefully have the beginnings of a proposal within the next day or so. Will be posted to Github somewhere. @ me if there's anything you think of or decide that you want me to include", "group_id": 8448, "id": 741280}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219701.424166, "message": "Thanks craig!", "group_id": 8448, "id": 741288}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219713.4274769, "message": "See you craig", "group_id": 8448, "id": 741292}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219749.841146, "message": "that could be added, too", "group_id": 8448, "id": 741302}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219774.8718009, "message": "That is not s3", "group_id": 8448, "id": 741306}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219790.0480261, "message": "if you only need one fitler, just use the getBy... functions", "group_id": 8448, "id": 741307}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219965.6775761, "message": "I think getBy should just return an array all the time", "group_id": 8448, "id": 741359}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220078.726881, "message": "bye guys!", "group_id": 8448, "id": 741410}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220239.7072761, "message": "But then that needs to be mapped to an EntryQuery", "group_id": 8448, "id": 741472}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220270.7427771, "message": "You can't", "group_id": 8448, "id": 741479}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220375.204071, "message": "then it could be this:", "group_id": 8448, "id": 741523}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220736.46259, "message": "(name/handle/ID)", "group_id": 8448, "id": 741602}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220747.8535521, "message": "Thanks for lurking", "group_id": 8448, "id": 741606}, {"user_id": 26941, "stars": [], "topic_id": 20301, "date_created": 1303220756.036088, "message": "Bye!", "group_id": 8448, "id": 741609}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221148.470185, "message": "$entries = $section->getEntries();", "group_id": 8448, "id": 741711}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221155.0082071, "message": "$query = new EntryQuery();", "group_id": 8448, "id": 741712}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221413.733433, "message": "Or are we suggesting that you always must get entries through a Section object?", "group_id": 8448, "id": 741764}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221414.952404, "message": "if you want that to return a new entrymanager object it is fine", "group_id": 8448, "id": 741765}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219318.6991601, "message": "where->and(new Where('2=2')->OR('3=3'))", "group_id": 8448, "id": 741136}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219421.12887, "message": "Add filter to the static class?", "group_id": 8448, "id": 741179}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219447.702142, "message": "No thanks", "group_id": 8448, "id": 741193}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303220077.1383989, "message": "good chat, talk soon", "group_id": 8448, "id": 741408}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220097.8292301, "message": "Ah right, I didn't spot the getBy() sorry", "group_id": 8448, "id": 741424}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219383.669374, "message": "what's an alternative?", "group_id": 8448, "id": 741167}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219409.212024, "message": "Entries::addFilter('my-crazy-field', value);", "group_id": 8448, "id": 741177}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219803.0090499, "message": "so this could be named: getBy()", "group_id": 8448, "id": 741313}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220003.549727, "message": "but pagination will filter, right?", "group_id": 8448, "id": 741376}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220530.45259, "message": "$query = new SymQLQuery('published-articles');\n$query\n    ->select('title, content, date, publish')\n    ->from('articles')\n    ->where('published', 'yes')\n    ->orderby('system:date', 'desc')\n    ->perPage(10)\n    ->page(1);\n\n$result = SymQL::run($query);\n", "group_id": 8448, "id": 741562}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220640.9579229, "message": "Section::getEntries($query)?", "group_id": 8448, "id": 741581}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220851.082834, "message": "As descriptive as possible", "group_id": 8448, "id": 741641}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220855.0193529, "message": "Saves haviung to read docs", "group_id": 8448, "id": 741642}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220943.1657629, "message": "Seeing as how contentious it seems to be :-)", "group_id": 8448, "id": 741663}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220957.964643, "message": "Nick, can you eleborate on what you mean with the section and the getEntries function?", "group_id": 8448, "id": 741666}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221013.9041121, "message": "(yes)", "group_id": 8448, "id": 741680}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219826.6713171, "message": "getByname()", "group_id": 8448, "id": 741320}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219853.098985, "message": "getAllByName(array())", "group_id": 8448, "id": 741329}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220331.800344, "message": "Yeah, that'd work", "group_id": 8448, "id": 741500}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220447.9141641, "message": "Cool", "group_id": 8448, "id": 741542}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220462.1672759, "message": "I knew this woiuld be a fun discussion ;-)", "group_id": 8448, "id": 741546}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220550.3838601, "message": "yes, perfect", "group_id": 8448, "id": 741565}, {"user_id": 26941, "stars": [], "topic_id": 20301, "date_created": 1303220735.2830119, "message": "I have to leave. But I have read everything (and learnt a lot). Thank you all!", "group_id": 8448, "id": 741601}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220742.0263591, "message": "By michael!", "group_id": 8448, "id": 741603}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220810.849503, "message": "yes, I know", "group_id": 8448, "id": 741632}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219475.7948971, "message": "and based on the type of each field it could accept different types", "group_id": 8448, "id": 741207}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219806.360399, "message": "specifics aside, I don't mind that", "group_id": 8448, "id": 741315}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219823.9424989, "message": "getById()", "group_id": 8448, "id": 741319}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219984.5755379, "message": "ok", "group_id": 8448, "id": 741367}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220018.605933, "message": "It doesn't get an entryQuery", "group_id": 8448, "id": 741380}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220039.406498, "message": "no, we dont", "group_id": 8448, "id": 741388}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220158.27473, "message": "getById(12, array('sort-by'=> 'name'))", "group_id": 8448, "id": 741446}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220186.940347, "message": "ok, sorry", "group_id": 8448, "id": 741459}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220360.2168739, "message": "not if you left the other functions in place", "group_id": 8448, "id": 741516}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220442.963259, "message": "Doing a code mockup", "group_id": 8448, "id": 741539}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220503.9208961, "message": "Yep", "group_id": 8448, "id": 741554}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220559.7072639, "message": "If you're getting nby anything other than ID", "group_id": 8448, "id": 741571}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220593.314713, "message": "Are entry queries done on the section then?", "group_id": 8448, "id": 741575}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220604.458492, "message": "The above is very limited to entries. It'd be best for the syntax to work for any domain object in the system", "group_id": 8448, "id": 741576}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220645.9614229, "message": "/", "group_id": 8448, "id": 741584}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219732.8362989, "message": "Sorry if this is covering old ground, but isn't this simpler?", "group_id": 8448, "id": 741297}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219733.4386721, "message": "\t$entries = Entries::fetch(\n\t\t'id'\t=> array(1,2,3),\n\t\t'title'\t=> 'regexp:Nick'\n\t);", "group_id": 8448, "id": 741298}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219801.9639101, "message": "Right", "group_id": 8448, "id": 741312}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219813.189801, "message": "And supplying limiting, sorting, pagination etc?", "group_id": 8448, "id": 741316}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220158.915194, "message": "Me too.", "group_id": 8448, "id": 741447}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219621.013778, "message": "Yes, but if you're only expecting one", "group_id": 8448, "id": 741258}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219767.922507, "message": "if you need more than one filter, use that", "group_id": 8448, "id": 741304}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303220054.2130289, "message": "guys I've gotta run", "group_id": 8448, "id": 741394}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220332.4732361, "message": "I suppose the above is just SymQL/SymQuery", "group_id": 8448, "id": 741501}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220488.3433909, "message": "it would be fun if the addFilter function would return the object itself", "group_id": 8448, "id": 741550}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220111.98456, "message": "no problem", "group_id": 8448, "id": 741427}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220672.7460539, "message": "Would you have to create a section object from that first", "group_id": 8448, "id": 741587}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220821.450918, "message": "Not going to do code stuff yet, too hard :P", "group_id": 8448, "id": 741634}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221103.2476881, "message": "You're asking a section for entries by entry query", "group_id": 8448, "id": 741702}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221104.195101, "message": "But a ...By suffix isn't grammatically correct, if you think of readability", "group_id": 8448, "id": 741703}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221167.046531, "message": "$entry = $entries->getBy($query)->current()", "group_id": 8448, "id": 741714}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221223.66224, "message": "\t$section = Sections::getById('1');\n\t$query = new EntryQuery();\n\t$query->getById(2);\n\t$entries = $section->getEntries($query);", "group_id": 8448, "id": 741726}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221281.1722071, "message": "then I would prefer this:", "group_id": 8448, "id": 741738}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221293.884254, "message": "\t$entry = Sections::getById(1)->getEntries(new EntryQuery()->getById(1))->current();", "group_id": 8448, "id": 741741}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222261.2411301, "message": "How might it be rewritten?", "group_id": 8448, "id": 741936}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222265.9456911, "message": "Ah", "group_id": 8448, "id": 741938}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222280.100498, "message": "I had the same\t$filter = new EntryFilter()\n\t$filter->setSectionId(1);", "group_id": 8448, "id": 741941}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219856.4244571, "message": "etc*", "group_id": 8448, "id": 741331}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220017.1349821, "message": "exactly", "group_id": 8448, "id": 741378}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220508.5697711, "message": "That's what SymQL does", "group_id": 8448, "id": 741556}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220550.3866861, "message": "That's true, we haven't considered the section!", "group_id": 8448, "id": 741566}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220828.5219581, "message": "So $section->getEntries(...) makes more sense", "group_id": 8448, "id": 741636}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219607.4245191, "message": "@rowan: no, you would be able to foreach them", "group_id": 8448, "id": 741255}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219694.3010039, "message": "@rowan: exactly", "group_id": 8448, "id": 741286}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303219695.9802051, "message": "thanks all", "group_id": 8448, "id": 741287}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219717.3552351, "message": "See you", "group_id": 8448, "id": 741296}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219791.979002, "message": "In s3 each filter donates a type and value separately", "group_id": 8448, "id": 741309}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303219800.3751471, "message": "Yeah", "group_id": 8448, "id": 741311}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219817.7252159, "message": "so you could have 3 functions:", "group_id": 8448, "id": 741317}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219854.732094, "message": "erc", "group_id": 8448, "id": 741330}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303219928.665436, "message": "but pagination could be done using something like this:", "group_id": 8448, "id": 741350}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303219961.2460451, "message": "$entries = Entries::getById(1,2,3)->sortBy('title')->sortDirection(Entries::ASC)->current();", "group_id": 8448, "id": 741357}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303219966.397752, "message": "whether it has one or many", "group_id": 8448, "id": 741360}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220030.6249101, "message": "I'm lost as to why we'd have two syntaxes: getBySomething, and then an alternative method for if we want to filter by more than one thing", "group_id": 8448, "id": 741383}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220038.4141891, "message": "Ok", "group_id": 8448, "id": 741387}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303220060.9402549, "message": "this is productive though, so I'll check in the morning", "group_id": 8448, "id": 741397}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220071.808851, "message": "Cya Bredan, take it easy", "group_id": 8448, "id": 741404}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220075.398757, "message": "uses the same syntax", "group_id": 8448, "id": 741407}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220092.3413899, "message": "where guys is brandan..", "group_id": 8448, "id": 741420}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220124.8259101, "message": "me neither", "group_id": 8448, "id": 741432}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220141.745528, "message": "Just confusednow", "group_id": 8448, "id": 741439}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220231.5931959, "message": "The problem we have here is the following:", "group_id": 8448, "id": 741471}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220775.656816, "message": "See you", "group_id": 8448, "id": 741616}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220789.538727, "message": "Doesn't scroll down while window isn't focused", "group_id": 8448, "id": 741623}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220885.9980879, "message": "I can't communicate and code with this app", "group_id": 8448, "id": 741650}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221054.4035561, "message": "Why?", "group_id": 8448, "id": 741693}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221125.1074619, "message": "Ok, wait..", "group_id": 8448, "id": 741705}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221140.2879701, "message": "$section = Sections::getById('1');", "group_id": 8448, "id": 741710}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221168.2479501, "message": "Where getEntries() accepts an EntryFilter or EntryQuery or whatever", "group_id": 8448, "id": 741716}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221236.657459, "message": "->current();", "group_id": 8448, "id": 741727}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221571.3227201, "message": "Nick, are you leaving, too?", "group_id": 8448, "id": 741793}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220197.5584829, "message": "getByName(\"Huib\", array('sort-by'=> 'name'))", "group_id": 8448, "id": 741464}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220325.7916651, "message": "yes, that makes sense too", "group_id": 8448, "id": 741498}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220366.7198651, "message": "\t$query = EntryQuery();\n\t$query->addFilter('id', 1);\n\t$entry = Entries::fetch($query)->current();", "group_id": 8448, "id": 741518}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220691.4214771, "message": "$entryFilter = new EntryFilter();", "group_id": 8448, "id": 741592}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221044.074228, "message": "ok, so it would be named:", "group_id": 8448, "id": 741689}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221070.29333, "message": "because I really, really like the getById etc functions", "group_id": 8448, "id": 741696}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221089.795429, "message": "You're not asking for a section by entry query", "group_id": 8448, "id": 741698}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221128.6354029, "message": "so you are suggesting this:", "group_id": 8448, "id": 741707}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221167.8001139, "message": "?", "group_id": 8448, "id": 741715}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221257.1218641, "message": "that would take, 4 lines?", "group_id": 8448, "id": 741732}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221347.851476, "message": "@Huib that makes sense, but you're duplicating API methods", "group_id": 8448, "id": 741755}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221650.4046741, "message": "My thought was that having $entry->getByTitle and $section->getEntriesByTitle is confusing", "group_id": 8448, "id": 741817}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221664.478009, "message": "Two similar syntaxes to do similar things", "group_id": 8448, "id": 741821}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220096.3490641, "message": ";)", "group_id": 8448, "id": 741423}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220241.2860999, "message": "we are building a query which is forwarded to the database", "group_id": 8448, "id": 741473}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220281.3675649, "message": "then it could be something like this", "group_id": 8448, "id": 741484}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220305.64501, "message": "\t$query = EntryQuery();\n\t$query->addFilter('id', 1);\n\t$query->addFilter('title', 'Nick');\n\t$query->sort('title', 'asc');\n\t$entries = Entries::fetch($query);", "group_id": 8448, "id": 741493}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220346.822053, "message": "Yeah", "group_id": 8448, "id": 741506}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220387.6851201, "message": "$entry = Entries::getById(1)->current()", "group_id": 8448, "id": 741525}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220427.6239669, "message": "because one way is easier but limited, and the other is for advanced use", "group_id": 8448, "id": 741535}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220452.763123, "message": "I honestly think this will work", "group_id": 8448, "id": 741544}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220615.0339551, "message": "No idea about S3...", "group_id": 8448, "id": 741577}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220779.1128459, "message": "Hmm, I am not sure I follow, Nick", "group_id": 8448, "id": 741620}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220866.301573, "message": "hmm..", "group_id": 8448, "id": 741645}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221003.105082, "message": "A section object, right?", "group_id": 8448, "id": 741678}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221156.9447329, "message": "Yes", "group_id": 8448, "id": 741713}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222162.6194849, "message": "I'm still not keen on stuffing everything into an array in getBy", "group_id": 8448, "id": 741923}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220213.2237821, "message": "I mean, I sort of understand", "group_id": 8448, "id": 741469}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220270.737016, "message": "it would have to have a seperate function: execute() or something", "group_id": 8448, "id": 741478}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220745.809046, "message": "Cya Michael!", "group_id": 8448, "id": 741605}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220778.031975, "message": "This chat is annoying me now", "group_id": 8448, "id": 741619}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220790.483906, "message": "$section->getBy(...) implies you're returning a section", "group_id": 8448, "id": 741624}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220799.862875, "message": "Doesn't automatically jump to the input box when I start typing :S", "group_id": 8448, "id": 741627}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220804.7912011, "message": "Yeah that;s annoying", "group_id": 8448, "id": 741629}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220842.2721109, "message": "Yes", "group_id": 8448, "id": 741637}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220912.2041719, "message": "Would it be worth reconvening another time to post some samples?", "group_id": 8448, "id": 741654}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220922.564728, "message": "Yeah, probably", "group_id": 8448, "id": 741656}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220933.6687651, "message": "We should work this out with code before changing the codebase for sure", "group_id": 8448, "id": 741659}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220966.6580341, "message": "Lets each do our own mockup, just incase any of us forget some feature", "group_id": 8448, "id": 741669}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221021.514859, "message": "$section->getBy() does not make sense", "group_id": 8448, "id": 741681}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221117.2403021, "message": "Yes, what he said", "group_id": 8448, "id": 741704}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223342.3717141, "message": "The default returns all fields?", "group_id": 8448, "id": 742187}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220256.4031739, "message": "but if we can add functions on each function call, when is the query done?", "group_id": 8448, "id": 741476}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220284.865325, "message": "If you need that: new EntryQuery()->doAdvancedShit()", "group_id": 8448, "id": 741486}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220302.0286241, "message": "and then pass that entryQuery to the getBy function?", "group_id": 8448, "id": 741492}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220307.7372611, "message": "No", "group_id": 8448, "id": 741494}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220310.729001, "message": "Or maybe", "group_id": 8448, "id": 741496}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220357.04088, "message": "The fine details of EntryQuery need to be worked out later", "group_id": 8448, "id": 741515}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220564.1889229, "message": "by*", "group_id": 8448, "id": 741572}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220732.5740371, "message": "I thinkg getEntries makes sense, since getBy* would be for section-specific things", "group_id": 8448, "id": 741599}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220872.2486961, "message": "Haha Rowan you wuss", "group_id": 8448, "id": 741646}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220876.095139, "message": "Show uz ur codes!", "group_id": 8448, "id": 741647}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220972.7315471, "message": "Makes sense", "group_id": 8448, "id": 741671}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220975.992065, "message": "Sure:", "group_id": 8448, "id": 741672}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220998.7257819, "message": "$section->getName() returns the section name", "group_id": 8448, "id": 741677}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221037.1060579, "message": "$section->getEntries($query) returns the section's entries", "group_id": 8448, "id": 741686}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221051.2033851, "message": "$section->getEntriesBy()", "group_id": 8448, "id": 741692}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221270.2366941, "message": "Kind of lame to need the object at all times", "group_id": 8448, "id": 741735}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221402.8720131, "message": "which is why I asked: what do you want the getEntries function to return?", "group_id": 8448, "id": 741762}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222016.437804, "message": "would be identical to:", "group_id": 8448, "id": 741900}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222016.99154, "message": "$section = Sections::getById(1)->current();\n$entries = $section->getEntries();\n$entry   = $entries->getByName('Nick')->current();", "group_id": 8448, "id": 741901}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222102.6115141, "message": "$entry = Entries::getBy('section'=>1, 'name'=>'Nick');", "group_id": 8448, "id": 741912}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222172.4206481, "message": "oh, shit", "group_id": 8448, "id": 741926}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222180.425055, "message": "that last example is not good, apologies", "group_id": 8448, "id": 741927}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222352.5895391, "message": "at all", "group_id": 8448, "id": 741958}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220348.839112, "message": "Getting an entry would still be three lines", "group_id": 8448, "id": 741507}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303220421.796037, "message": "One simple and one advanced", "group_id": 8448, "id": 741533}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220492.558408, "message": "then they can be chained", "group_id": 8448, "id": 741552}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220675.4709389, "message": "$section = Sections::getByName('test');", "group_id": 8448, "id": 741590}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303220707.854991, "message": "$entries = $section->getBy($entryFilter);", "group_id": 8448, "id": 741594}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221702.7691431, "message": "My opinion is we wherever possible we suggest \"the way\" of doing tings", "group_id": 8448, "id": 741828}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221706.7556839, "message": "Aha", "group_id": 8448, "id": 741832}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221791.352926, "message": "(hope this makes sense)", "group_id": 8448, "id": 741858}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220408.887645, "message": "But why have two ways of doing the same thing?", "group_id": 8448, "id": 741529}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221864.05673, "message": "code sample coming up", "group_id": 8448, "id": 741875}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221967.5909951, "message": "$section = Sections::getById(1)->current();\n$entries = $section->getEntries();\n$filter  = new EntryFilter(array('name'=>'Nick'));\n$entry   = $entries->getBy($filter);", "group_id": 8448, "id": 741889}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221976.986922, "message": "shit", "group_id": 8448, "id": 741892}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221990.2456591, "message": "here", "group_id": 8448, "id": 741894}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222101.920577, "message": "which, in turn, is indentical to:", "group_id": 8448, "id": 741911}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222127.8200159, "message": "$entry = Entries::getBy('section'=>1, 'name'=>'Nick')->current();\nsorry, forgot the current", "group_id": 8448, "id": 741915}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222321.5862899, "message": "Nick, are you still here?", "group_id": 8448, "id": 741947}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220857.6935959, "message": "having*", "group_id": 8448, "id": 741644}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303220987.2411251, "message": "Sections::getById(1) returns a Section", "group_id": 8448, "id": 741675}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221006.662215, "message": "$section->getHandle() returns the section handle", "group_id": 8448, "id": 741679}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221558.6845989, "message": "Or a gist or whatever", "group_id": 8448, "id": 741789}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221081.4526091, "message": "But it isn't the same thing", "group_id": 8448, "id": 741697}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221241.3000791, "message": "ok, so how would you get entry id 1 from section 1?", "group_id": 8448, "id": 741728}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221285.9028349, "message": "1 if you want", "group_id": 8448, "id": 741739}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221302.221261, "message": "$entry = Sections::getByid(1)->getEntriesByid(1)->current();", "group_id": 8448, "id": 741743}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221311.503458, "message": "Can't do that nick", "group_id": 8448, "id": 741746}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221321.5125699, "message": "Oh ok, two lines it is :P", "group_id": 8448, "id": 741750}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221350.0220251, "message": "I thought we agreed the \"simple\" syntax, with the getByName etc was really handy", "group_id": 8448, "id": 741756}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221372.834991, "message": "I am not, i am just having a simple and an advanced api", "group_id": 8448, "id": 741760}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221426.7007461, "message": "I think you might have to", "group_id": 8448, "id": 741769}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221456.7519319, "message": "hmm..", "group_id": 8448, "id": 741773}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221469.060322, "message": "Yeah", "group_id": 8448, "id": 741775}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221500.8307011, "message": "It's midnight, got to sleep", "group_id": 8448, "id": 741778}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221509.864203, "message": "Ok, good night!", "group_id": 8448, "id": 741779}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221513.7318621, "message": "We've talked about a lot", "group_id": 8448, "id": 741781}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303221514.273483, "message": "Not turning this off or anything, but it's good night", "group_id": 8448, "id": 741782}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221517.6653459, "message": "How can we not forget all of this?", "group_id": 8448, "id": 741783}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221377.2010291, "message": "It is, but if you can have getByTitle on an Entry, but also getEntriesByTitle on a Section, I think that's confiusing", "group_id": 8448, "id": 741761}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221439.3849399, "message": "I mean. this is possible too:", "group_id": 8448, "id": 741771}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221446.903002, "message": "What if you know an entry ID but not the section ID?", "group_id": 8448, "id": 741772}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221461.0849521, "message": "can that ever happen", "group_id": 8448, "id": 741774}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221482.0094631, "message": "Sure. The S2 EntryManager supports it, so there are definitely use cases", "group_id": 8448, "id": 741777}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221510.4088621, "message": "Ok", "group_id": 8448, "id": 741780}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221543.8026841, "message": "maybe we should just write a few code samples at the end", "group_id": 8448, "id": 741785}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221547.7203541, "message": "Should we each write some samples and post them to Basecamp?", "group_id": 8448, "id": 741786}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221653.828227, "message": "you said you have problems with the getByName and getEntriesByName functions, and I undestand", "group_id": 8448, "id": 741819}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221674.28337, "message": "Choice is great, but a pain to document and a pain to learn", "group_id": 8448, "id": 741825}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221705.434902, "message": "we should probably rename the function to make more sense", "group_id": 8448, "id": 741829}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221721.5094349, "message": "Could you post a sample?", "group_id": 8448, "id": 741836}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221820.1180539, "message": "$e =", "group_id": 8448, "id": 741867}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222017.680341, "message": ":-)", "group_id": 8448, "id": 741902}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221605.959666, "message": "ok, because I think we are nearly there", "group_id": 8448, "id": 741804}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221836.732995, "message": "\t$section = Sections::getById(1);\n\t$entries = $section->getEntries();\n\t$e = $entries->getById(1)->current();", "group_id": 8448, "id": 741872}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221577.0533509, "message": "Cool. Rowan, reckon you'd have time to do that tomorrow?", "group_id": 8448, "id": 741794}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221712.0816021, "message": "but still, that will solve most of these problems", "group_id": 8448, "id": 741833}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221774.429646, "message": "so if you use the entrymanager by itself it will query all sections", "group_id": 8448, "id": 741853}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222015.6700001, "message": "But it ain't pretty", "group_id": 8448, "id": 741899}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221578.4642889, "message": "or can we discuss this for 10 more minutes?", "group_id": 8448, "id": 741795}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221604.9897959, "message": "@buzzomatic, thanks for sticking around so late. Your brain is a good'un ;-)", "group_id": 8448, "id": 741803}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221738.283958, "message": "the getByName functions will still work, because they no longer point to the section object, but to the entries object", "group_id": 8448, "id": 741839}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221896.760433, "message": "I suppose new EntryQuery(1); (section id = 1)", "group_id": 8448, "id": 741880}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221589.8515871, "message": "I need to go soon, got a busy afternoon", "group_id": 8448, "id": 741799}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221765.3240731, "message": "and the entrymanager will have its section set by the constructor in the section class", "group_id": 8448, "id": 741851}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222171.3721149, "message": "clearer*", "group_id": 8448, "id": 741925}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221654.6758349, "message": "yes", "group_id": 8448, "id": 741820}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221688.033515, "message": "so. what if the section->getEntries function did not return actual entries, but the entrymanager?", "group_id": 8448, "id": 741827}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221800.583137, "message": "\t$section = Sections::getById(1);\n\t$entry = $section->getEntries();\n\t$entry->getById(1)->current();", "group_id": 8448, "id": 741861}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221797.7221119, "message": "Like:", "group_id": 8448, "id": 741859}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303221813.133831, "message": "Forgive the last line", "group_id": 8448, "id": 741865}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303221985.773906, "message": "$section = Sections::getById(1)->current();\n$entries = $section->getEntries();\n$filter  = new EntryFilter(array('name'=>'Nick'));\n$entry   = $entries->getBy($filter)->current();", "group_id": 8448, "id": 741893}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222012.7727311, "message": "It makes _sense_", "group_id": 8448, "id": 741898}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222168.5082779, "message": "To me, separate methods is far more clear", "group_id": 8448, "id": 741924}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222337.9823401, "message": "Question:", "group_id": 8448, "id": 741953}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222092.7038331, "message": "Yeah makes sense", "group_id": 8448, "id": 741909}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222101.8450329, "message": "What of removing the need for a section completely", "group_id": 8448, "id": 741910}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222150.721802, "message": "Yeah", "group_id": 8448, "id": 741922}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222261.4518039, "message": "$filter = new EntryFilter();\n$filter->setSectionId(1);\n$filter->setName('Nick');\n$entry = Entries::getBy($filter)->current();", "group_id": 8448, "id": 741937}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222297.013253, "message": "Unless EntryFilter(1)", "group_id": 8448, "id": 741943}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222297.451314, "message": "?", "group_id": 8448, "id": 741944}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222326.456811, "message": "This was question I forgot to ask before Rowan left", "group_id": 8448, "id": 741948}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222331.151721, "message": "Yes! Replying", "group_id": 8448, "id": 741950}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222333.192934, "message": "Scroll down!", "group_id": 8448, "id": 741951}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222350.8012991, "message": "shit, it didn't show any of your comments", "group_id": 8448, "id": 741955}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222352.397373, "message": "Do you prefer getters/setters over public properties?", "group_id": 8448, "id": 741957}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222354.416585, "message": "reading them now", "group_id": 8448, "id": 741959}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222402.784749, "message": "not really, they can be rewritten using the __get and __set functions anyway", "group_id": 8448, "id": 741967}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222464.7053699, "message": "this chat is realyl annoying, I have to refresh the page for your comments to show up", "group_id": 8448, "id": 741972}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222503.0924621, "message": "D'oh", "group_id": 8448, "id": 741977}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222507.3344669, "message": "Make sure you scroll to the bottom", "group_id": 8448, "id": 741978}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222517.110117, "message": "Keep it anchored, else it won't show", "group_id": 8448, "id": 741979}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222524.646704, "message": "It runs really slow after a while", "group_id": 8448, "id": 741983}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222536.8313589, "message": "your comments didnt even show", "group_id": 8448, "id": 741984}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222541.47686, "message": "i only saw mine", "group_id": 8448, "id": 741987}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222542.8509641, "message": ":-(", "group_id": 8448, "id": 741988}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222555.745863, "message": "I think we're broadly on the same page with this stuff", "group_id": 8448, "id": 741990}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222561.4242661, "message": "yes, so do I", "group_id": 8448, "id": 741991}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222581.4631529, "message": "We may be able to simplify it even further, as it needs to be really easy for newbies", "group_id": 8448, "id": 741995}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222596.6312001, "message": "The getBy and current() stuff is going to be confuse them", "group_id": 8448, "id": 741997}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223072.1147511, "message": "it is 100% identical to the way the sections and entries work", "group_id": 8448, "id": 742130}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222603.9665899, "message": "I reckon", "group_id": 8448, "id": 741999}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222781.4740109, "message": "$field = $fields->getBy()", "group_id": 8448, "id": 742062}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224812.6330769, "message": "we are pretty much on the same page right now, aren't we?", "group_id": 8448, "id": 742519}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224821.5451729, "message": "yes", "group_id": 8448, "id": 742523}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222606.4331119, "message": "by the way, your question about the getting of an id without knowing the section", "group_id": 8448, "id": 742000}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222620.808702, "message": "Yeah?", "group_id": 8448, "id": 742005}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222633.280452, "message": "$entry = Entries::getById(1)->current()", "group_id": 8448, "id": 742010}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222745.114681, "message": "yes", "group_id": 8448, "id": 742050}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222755.6919711, "message": "Which tells the query to return only certain fields", "group_id": 8448, "id": 742054}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222854.4267609, "message": "setFields()?", "group_id": 8448, "id": 742088}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222885.033303, "message": "yes..", "group_id": 8448, "id": 742097}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222893.0979409, "message": "so it returns the fieldmanager", "group_id": 8448, "id": 742100}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223116.228905, "message": "ok", "group_id": 8448, "id": 742143}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223395.332386, "message": "I just want to tell it to get entries and certain fields", "group_id": 8448, "id": 742203}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223925.781173, "message": "I'm thinking like a data source", "group_id": 8448, "id": 742326}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224739.104779, "message": "Ok", "group_id": 8448, "id": 742498}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224740.5632479, "message": "I'm feeling burned out", "group_id": 8448, "id": 742499}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224747.609657, "message": "I'm not really understand some of this stuff", "group_id": 8448, "id": 742501}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224754.7126229, "message": "Probably time to call it a day", "group_id": 8448, "id": 742504}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222619.784734, "message": "But as long as the core uses this properly, people will learn", "group_id": 8448, "id": 742004}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222659.0031991, "message": "Ah yes, of course", "group_id": 8448, "id": 742020}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222685.891917, "message": "EntryManager::fetch has an argument $included_elements", "group_id": 8448, "id": 742031}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222761.2203109, "message": "How might this translate?", "group_id": 8448, "id": 742056}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222889.3432541, "message": "the entry contains fields", "group_id": 8448, "id": 742099}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223097.1683631, "message": "I think I'm talking about something different", "group_id": 8448, "id": 742137}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223106.0645349, "message": "brb", "group_id": 8448, "id": 742141}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222667.6419029, "message": "Ok, another question", "group_id": 8448, "id": 742025}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222773.540056, "message": "$fields = $entries->getFields();", "group_id": 8448, "id": 742061}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222915.083988, "message": "just like with the section/entry relation", "group_id": 8448, "id": 742107}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223389.1315639, "message": "But from an API point of view, I don't care about a field manager", "group_id": 8448, "id": 742201}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223562.3093331, "message": "Seems really long winded to me", "group_id": 8448, "id": 742234}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222668.1298001, "message": ":-)", "group_id": 8448, "id": 742026}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222897.5200131, "message": "which then queries the fields", "group_id": 8448, "id": 742103}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222932.879108, "message": "the section contains entries, so it returns the entrymanager which queries the entries", "group_id": 8448, "id": 742112}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223315.4821889, "message": "yes, this is identical to the section and entry", "group_id": 8448, "id": 742175}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223329.3003819, "message": "nope", "group_id": 8448, "id": 742181}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223397.348026, "message": "and you will realise we have been talking about the exact same thing we just did", "group_id": 8448, "id": 742205}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223415.4834909, "message": "seems convoluted though", "group_id": 8448, "id": 742213}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223957.796788, "message": "it is very different from what you said", "group_id": 8448, "id": 742335}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223984.605952, "message": "they are names of fields that the entry is a container for", "group_id": 8448, "id": 742344}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224091.4299159, "message": "as it is also only a contianer", "group_id": 8448, "id": 742380}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224094.227772, "message": "container*", "group_id": 8448, "id": 742382}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224255.982928, "message": "in other words; every entry in a section is identical except for values, where every field in the entry isn;'t", "group_id": 8448, "id": 742402}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224267.6236539, "message": "so, yes, ok, it makes sense to access them directly", "group_id": 8448, "id": 742403}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224302.3427279, "message": "so, something like this could work:", "group_id": 8448, "id": 742414}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224409.9390719, "message": "if that stupid current() function is removed", "group_id": 8448, "id": 742440}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222766.427175, "message": "this will be the same as with the section-entries thing", "group_id": 8448, "id": 742058}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222924.452553, "message": "I don't understand", "group_id": 8448, "id": 742109}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223279.3123579, "message": "Say my entries have 10 fields, but my data source is showing only 3 of those", "group_id": 8448, "id": 742167}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223349.2334011, "message": "the default returns no fields at all", "group_id": 8448, "id": 742189}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223368.9985631, "message": "which can return the fieldmanager by calling: getFields", "group_id": 8448, "id": 742194}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223382.7682171, "message": "just replace fields with entries and replace entries with sections", "group_id": 8448, "id": 742198}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223586.0278311, "message": "But it's confusing", "group_id": 8448, "id": 742241}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223045.629894, "message": "$section = Sections::getById(1)->current();\n$entries = $section->getEntries();\n$entry   = $entries->getByName('Nick')->current();\n$fields  = $entry->getFields();\n$filter  = new FieldFilter();\n$filter->name = 'Title';\n$field\t = $fields->getBy($filter);", "group_id": 8448, "id": 742126}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223318.627182, "message": "These would need to be passed along with the getByName()", "group_id": 8448, "id": 742176}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223581.0391059, "message": "I understand that it's using the same concepts, and it's archuitecturally clean", "group_id": 8448, "id": 742240}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223651.629945, "message": "Sure, but having to \"get\" the fields first? That doesn't make sense to me", "group_id": 8448, "id": 742264}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223674.543452, "message": "To my eyes, you should say \"I have this section\", \"filter entries by this\", \"return these fields\"", "group_id": 8448, "id": 742273}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223684.712301, "message": "Nothing more", "group_id": 8448, "id": 742277}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223734.6817729, "message": "Yeah, I don't want to return thje fields at all", "group_id": 8448, "id": 742295}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303222871.127512, "message": "get* always _returns_ stuff right?", "group_id": 8448, "id": 742091}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223286.733963, "message": "These three fields, their handles, would be passed to the query", "group_id": 8448, "id": 742168}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223566.4129741, "message": "yeah", "group_id": 8448, "id": 742235}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223590.589536, "message": "yes", "group_id": 8448, "id": 742244}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223612.2701859, "message": "ha", "group_id": 8448, "id": 742253}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224472.6278429, "message": "because before you start accessing the properties there is no need to query the database at all", "group_id": 8448, "id": 742458}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303222936.3666201, "message": "ok, code sample:", "group_id": 8448, "id": 742113}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223334.8666739, "message": "So I guess this is where you'd need to use the advanced method of the EntryFilter directly?", "group_id": 8448, "id": 742183}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223341.002923, "message": "no no no", "group_id": 8448, "id": 742186}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223357.7454929, "message": "it returns the section", "group_id": 8448, "id": 742192}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223599.1003251, "message": "was that already agreed somewhere?", "group_id": 8448, "id": 742250}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223609.450376, "message": "nick and I agree silently", "group_id": 8448, "id": 742252}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223615.5222969, "message": "The above code doesn't read like a sentence", "group_id": 8448, "id": 742254}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223634.9936719, "message": "it can be shortened, ofcourse", "group_id": 8448, "id": 742258}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223694.8902709, "message": "$fields = Entries::getById(1)->current->getFields()->getByName(array('name', 'title', 'body'));", "group_id": 8448, "id": 742280}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223717.8049009, "message": "it's the getFields()->getByName() that's counterintuitive", "group_id": 8448, "id": 742286}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223740.6420059, "message": "then it would read:", "group_id": 8448, "id": 742296}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223821.9506719, "message": "just like a section is not an entry?", "group_id": 8448, "id": 742311}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223888.5791991, "message": "I'm not thinking how that would be achieved under the hood, that doesn't interest me, I'm thinking purely how a user would use it", "group_id": 8448, "id": 742317}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223296.2137499, "message": "So only the data for these three us queried", "group_id": 8448, "id": 742172}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223423.6075101, "message": "So how would I then get entry id=1, and only show fields: title, date and body", "group_id": 8448, "id": 742216}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223430.4727981, "message": "ok, one second", "group_id": 8448, "id": 742218}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223520.8487999, "message": "$entry = Entries::getById(1)->current;\n$fields = $entry->getFields();\n$field = $fields->getByName(array('name', 'title', 'body'));", "group_id": 8448, "id": 742229}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223523.55651, "message": "something like this?", "group_id": 8448, "id": 742230}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223574.8943789, "message": "We are doing the exact same thing for the entries and sections", "group_id": 8448, "id": 742239}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223586.9810669, "message": "so if you think this is too long-winded, we should change it there, too", "group_id": 8448, "id": 742243}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223593.5925629, "message": "Yep, I think so", "group_id": 8448, "id": 742248}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223854.339206, "message": "$entries = Entries::getById(1)->selectFields(array('name', 'title', 'body');", "group_id": 8448, "id": 742315}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224814.124891, "message": "I reckon a gist each, covering some basic, and not to basic, use cases", "group_id": 8448, "id": 742520}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224881.7733381, "message": "- create a new entry", "group_id": 8448, "id": 742544}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224886.988858, "message": "- get an entry and specify return fields", "group_id": 8448, "id": 742546}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224939.9378741, "message": "I enjoyed it too", "group_id": 8448, "id": 742563}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223753.191813, "message": "$fields = Entries::getById(1)->current()->fields()->getByName(array('name', 'title', 'body'));", "group_id": 8448, "id": 742298}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223725.027755, "message": "maybe the getFields method should be renamed to Fields()", "group_id": 8448, "id": 742290}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223814.8857591, "message": "because entries is not fields?", "group_id": 8448, "id": 742309}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223878.1721039, "message": "what would this do?", "group_id": 8448, "id": 742316}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223902.3881531, "message": "get entryId=1, returning its name, title and body", "group_id": 8448, "id": 742321}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223951.7212081, "message": "Yes", "group_id": 8448, "id": 742333}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224020.2295771, "message": "To an API user are they not the same thing?", "group_id": 8448, "id": 742348}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224368.868006, "message": "(i hate the current() function", "group_id": 8448, "id": 742427}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224524.6920731, "message": "however, this might be a form of black magic", "group_id": 8448, "id": 742463}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224600.7610021, "message": "very easy to use, easy to understand", "group_id": 8448, "id": 742477}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303223722.5846879, "message": "feels redundant", "group_id": 8448, "id": 742287}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223968.384958, "message": "because the name, title and body are no properties of that entry", "group_id": 8448, "id": 742340}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224353.182729, "message": "$fields = Entries::getById(1)->current()->get(array('name', 'title', 'body'));", "group_id": 8448, "id": 742424}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224398.330569, "message": "$nameField = Entries::getById(1)->name;", "group_id": 8448, "id": 742435}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224061.6559291, "message": "ok, then what about this:", "group_id": 8448, "id": 742368}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224178.3911159, "message": "Hmm, I am trying to create an example, but I cant", "group_id": 8448, "id": 742394}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224188.374388, "message": "so apparently they are not 100% equal", "group_id": 8448, "id": 742395}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224288.384831, "message": "(I'll refresh again)", "group_id": 8448, "id": 742409}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224481.601202, "message": "I see", "group_id": 8448, "id": 742460}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224493.0341771, "message": "in the getName function..;)", "group_id": 8448, "id": 742461}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224534.2914691, "message": "Yeah", "group_id": 8448, "id": 742465}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224775.2511411, "message": "Haha. Try doing it when you have three project managers nagging you at the same time :P", "group_id": 8448, "id": 742511}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224877.1325459, "message": "- get entries and sort", "group_id": 8448, "id": 742542}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303223770.891048, "message": "Why return fields at all>", "group_id": 8448, "id": 742302}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224413.510695, "message": "Isn';t it too late to have called it by then already?", "group_id": 8448, "id": 742441}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224853.1989901, "message": "Feel free to suggest!", "group_id": 8448, "id": 742531}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224861.194299, "message": "We've got some already that we were using:", "group_id": 8448, "id": 742534}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224864.2893679, "message": "- get an entry by ID", "group_id": 8448, "id": 742537}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224872.0132611, "message": "- get entry by multiple filters", "group_id": 8448, "id": 742541}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224936.558567, "message": "Great stuff", "group_id": 8448, "id": 742560}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224943.624799, "message": "Thanks mate :-)", "group_id": 8448, "id": 742564}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303223931.5599489, "message": "get entry with id = 1, and return its name title and body fields", "group_id": 8448, "id": 742328}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224086.7133551, "message": "the section will need the exact same logic", "group_id": 8448, "id": 742378}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224045.490572, "message": "I'll end up with $entry->getTitle();", "group_id": 8448, "id": 742358}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224216.55375, "message": "a section has repititive entries, an entry has \"unique\" fieldnames", "group_id": 8448, "id": 742396}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224424.0328641, "message": "These fields need to be known to the database query before the entry is built", "group_id": 8448, "id": 742444}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224590.449497, "message": "This might actually work", "group_id": 8448, "id": 742476}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224801.8992419, "message": ";)", "group_id": 8448, "id": 742518}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224901.3810191, "message": "That's a good enough list methinks", "group_id": 8448, "id": 742549}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224758.946044, "message": "Yes, probabaly", "group_id": 8448, "id": 742507}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224761.5569201, "message": "probably*", "group_id": 8448, "id": 742508}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224768.6719589, "message": "anyways, very nice chat!", "group_id": 8448, "id": 742509}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224071.052834, "message": "(although to me $entry->title makes more sense)", "group_id": 8448, "id": 742374}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224476.5109019, "message": "At what point does the database get queried in the above?", "group_id": 8448, "id": 742459}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224538.1733999, "message": "Lazy loading, right?", "group_id": 8448, "id": 742466}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224660.6409631, "message": "hehe", "group_id": 8448, "id": 742489}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224797.5160301, "message": "Our*", "group_id": 8448, "id": 742516}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224275.758626, "message": "since there is no need to \"filter\" them", "group_id": 8448, "id": 742405}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224397.832669, "message": "or, even simpler:", "group_id": 8448, "id": 742434}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224426.4483211, "message": "no, that can be done internaly", "group_id": 8448, "id": 742445}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224542.7327261, "message": "yeah", "group_id": 8448, "id": 742468}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224626.737098, "message": "However, I really, really hate the current function", "group_id": 8448, "id": 742483}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224609.4843659, "message": "and easily portable to other parts of Symphony", "group_id": 8448, "id": 742480}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224712.1371169, "message": "so that (for instance) the getById always returns the object itself", "group_id": 8448, "id": 742495}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224690.705497, "message": "I think we should figure out a way to remove that", "group_id": 8448, "id": 742490}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224719.7586131, "message": "except when called with an array as argument, ofcourse", "group_id": 8448, "id": 742496}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224748.572618, "message": "I'm just getting warmed up!", "group_id": 8448, "id": 742502}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224861.4252, "message": "to ease the comparison..", "group_id": 8448, "id": 742535}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224784.393806, "message": "I have 2, does that count?", "group_id": 8448, "id": 742513}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224787.547545, "message": "So next steps. Write up your thoughts?", "group_id": 8448, "id": 742514}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224838.104151, "message": "Maybe it would be good if we could all use the same use cases", "group_id": 8448, "id": 742527}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224885.301697, "message": "- get entry by id and section", "group_id": 8448, "id": 742545}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224905.0456841, "message": "me too", "group_id": 8448, "id": 742550}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224914.324924, "message": "Ok, I'll be writing a few code samples then!", "group_id": 8448, "id": 742552}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224946.4591129, "message": "Bye!", "group_id": 8448, "id": 742566}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224836.884937, "message": "Insofar as I understand your idea. I still think we have a way to do in making it user friendly", "group_id": 8448, "id": 742526}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1303224867.482816, "message": "- get entries by IDs", "group_id": 8448, "id": 742538}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1303224925.7657969, "message": "Thanks for the chat, we'll talk again soon!", "group_id": 8448, "id": 742553}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1303224964.474143, "message": "thanks guys", "group_id": 8448, "id": 742571}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302047.2130251, "message": "$section = new Section(); $section->getByID(id); $section->getEntries()", "group_id": 8448, "id": 754081}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302048.3834231, "message": "is the same as", "group_id": 8448, "id": 754082}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301868.3504469, "message": "I know this is 21 hours late, but just posting here to keep things together", "group_id": 8448, "id": 754035}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301929.678694, "message": "but if you wanted Entries, that should come from the Entries class", "group_id": 8448, "id": 754047}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302094.8820601, "message": "so why have both?", "group_id": 8448, "id": 754096}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302130.34712, "message": "anyway that's my two cents", "group_id": 8448, "id": 754110}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301983.850091, "message": "I think the idea of an EntryFilter class works here (perhaps renamed), because it acts a bridging class that should have knowledge of both Section and Entry", "group_id": 8448, "id": 754061}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302126.016845, "message": "it's this sort of duplication to leads to inconsistent results, such as one function returning arrays and the other returning objects or whatever", "group_id": 8448, "id": 754106}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301900.0196731, "message": "the Section class shouldn't be able to do anything regarding Entries", "group_id": 8448, "id": 754040}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301887.963084, "message": "My thoughts are that we are starting to couple things together again", "group_id": 8448, "id": 754039}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302030.3704951, "message": "ie", "group_id": 8448, "id": 754075}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301919.1643469, "message": "you should be able to CRUD a section, perhaps associate a section with another", "group_id": 8448, "id": 754045}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303301948.2570319, "message": "the same thing starts to apply there though, you don't want to clutter the Entry class with knowledge of Sections", "group_id": 8448, "id": 754051}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302004.3294899, "message": "I'm going to search around and think of some examples, but that's just first impressions", "group_id": 8448, "id": 754068}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302018.6325829, "message": "I just don't want to have two ways of doing things", "group_id": 8448, "id": 754072}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1303302090.388588, "message": "$filter = new EntryFilter(); $filter->setSectionID(id); $entries = new Entry($filter)", "group_id": 8448, "id": 754095}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1303306660.9101319, "message": "Can't work out how to edit the damn wiki", "group_id": 8448, "id": 754745}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036037.3480129, "message": "{$name}", "group_id": 8448, "id": 989714}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305027905.9292879, "message": "Welcome to Round 2", "group_id": 8448, "id": 988231}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030595.02578, "message": "(in short: i would like to paginate the \"magic\" functions, too)", "group_id": 8448, "id": 988520}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305028213.022361, "message": "I'd love for us to settle on an approach today and begin fleshing out how it'll be implemented", "group_id": 8448, "id": 988266}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029502.9516759, "message": "I'll refresh again", "group_id": 8448, "id": 988374}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029510.687413, "message": "Does it now?", "group_id": 8448, "id": 988375}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029544.81004, "message": "Ok, nice", "group_id": 8448, "id": 988378}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030075.7652609, "message": "Don't like the idea of building the query as an array", "group_id": 8448, "id": 988426}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305027985.2534809, "message": "The ideas proposed so far by Rowan, Huib, and Nick are here: https://github.com/symphonycms/wg/wiki/Symphony-API-ideas", "group_id": 8448, "id": 988235}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305028159.6273999, "message": "The draft list of use cases is here: https://github.com/symphonycms/wg/wiki/API-Use-Cases", "group_id": 8448, "id": 988257}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029112.6145029, "message": "Hey", "group_id": 8448, "id": 988327}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029177.612674, "message": "Convore is freaking out for me, again", "group_id": 8448, "id": 988332}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029212.173188, "message": "how so?", "group_id": 8448, "id": 988335}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029236.1359079, "message": "it doesn't refresh automatically", "group_id": 8448, "id": 988339}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029243.5957899, "message": "buy my posts are inserted", "group_id": 8448, "id": 988340}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029395.6560359, "message": "Really? oh.. strange", "group_id": 8448, "id": 988356}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029069.8512101, "message": "Hi guys", "group_id": 8448, "id": 988325}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029416.6950309, "message": "again*", "group_id": 8448, "id": 988360}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029440.2451861, "message": "Ok, weird, I've never had any problems with talker, just here..", "group_id": 8448, "id": 988364}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305029524.3051889, "message": "Refresh fixed it", "group_id": 8448, "id": 988377}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029828.6469941, "message": "I will have to leave in about an hour", "group_id": 8448, "id": 988398}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029984.91502, "message": "I think they are all similar, to be honest", "group_id": 8448, "id": 988411}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030439.9596059, "message": "$entries = Entries::getAll();", "group_id": 8448, "id": 988503}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030665.325392, "message": "Hmm", "group_id": 8448, "id": 988529}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030706.2466159, "message": "Yes, but I don't like the code", "group_id": 8448, "id": 988533}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029414.9314561, "message": "I've had it a couple times here, but not as often", "group_id": 8448, "id": 988358}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029253.919035, "message": "so it looks like nobody is talking except for me..", "group_id": 8448, "id": 988346}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030317.5228851, "message": "this will keep the source of all entries at the same place, making it easier to understand", "group_id": 8448, "id": 988477}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030368.4873719, "message": "makes sense, too", "group_id": 8448, "id": 988487}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030392.3740959, "message": "ok, what about pagination?", "group_id": 8448, "id": 988493}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030398.6107609, "message": "should that be passed to the filter object?", "group_id": 8448, "id": 988496}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030414.2294199, "message": "because then I would prefer to set the filter seperately", "group_id": 8448, "id": 988499}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029481.801084, "message": "Nick couldn't make it", "group_id": 8448, "id": 988369}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305029485.435709, "message": "It doesn't show you as online Huib", "group_id": 8448, "id": 988370}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029309.1758139, "message": "ah well, I'll have to manually refresh every now and again.. that helps", "group_id": 8448, "id": 988351}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029377.0443909, "message": "that's what Talker used to do to me", "group_id": 8448, "id": 988354}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029415.089453, "message": "ah well, it is doable, just have to remind myself to refresh eveyr now and agin", "group_id": 8448, "id": 988359}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305029459.242784, "message": "Wonder where Brendan and Nick are?", "group_id": 8448, "id": 988365}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305029493.896395, "message": "funky shits", "group_id": 8448, "id": 988371}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029780.7823789, "message": "Brendan will pop in for a bit", "group_id": 8448, "id": 988391}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029495.756052, "message": "Hmm.. that is the beginning of trouble", "group_id": 8448, "id": 988372}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029847.1217461, "message": "pros/cons of each?", "group_id": 8448, "id": 988400}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029576.3049481, "message": "So we are just waiting for brendan, then/", "group_id": 8448, "id": 988380}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032254.9554141, "message": "why can it just not chain as it does with EntryQuery?", "group_id": 8448, "id": 988892}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032841.5865331, "message": "me too, however", "group_id": 8448, "id": 989008}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029788.0651841, "message": "But we should probably get started", "group_id": 8448, "id": 988393}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305029823.047744, "message": "yes please", "group_id": 8448, "id": 988395}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305029826.573446, "message": "Let's talk about the three approaches", "group_id": 8448, "id": 988396}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030079.0485499, "message": "Nick uses one method for filtering, which might make things a bit less clear, especially when the order of the preferences matters", "group_id": 8448, "id": 988429}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030080.707653, "message": "me neither", "group_id": 8448, "id": 988430}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030112.4059539, "message": "At this point, I prefer a query object that gets passed to the filter function", "group_id": 8448, "id": 988435}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030181.439697, "message": "Any issues with the way mine works?", "group_id": 8448, "id": 988446}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030184.7747829, "message": "Nope", "group_id": 8448, "id": 988447}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030191.5678661, "message": "Not that I can see right now", "group_id": 8448, "id": 988450}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030213.5413489, "message": "oh, yes", "group_id": 8448, "id": 988454}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030228.7691829, "message": "I would personally prefer to pass the filter to the entries object", "group_id": 8448, "id": 988456}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030244.6130159, "message": "and then fetch the entries, rather than having the filter object return the entires", "group_id": 8448, "id": 988458}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030246.304275, "message": "entries*", "group_id": 8448, "id": 988459}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030255.5086999, "message": "How?", "group_id": 8448, "id": 988461}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030268.833436, "message": "over", "group_id": 8448, "id": 988467}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030266.9466119, "message": "so I prefer:", "group_id": 8448, "id": 988465}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030273.3525989, "message": "$entries = $query->execute();", "group_id": 8448, "id": 988468}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030329.3252001, "message": "yes", "group_id": 8448, "id": 988479}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030337.253458, "message": "maybe it should be renamed:", "group_id": 8448, "id": 988481}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030411.6169159, "message": "$query->paginate(1);", "group_id": 8448, "id": 988498}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030429.579643, "message": "Entries::setQuery($query);", "group_id": 8448, "id": 988501}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031943.685195, "message": "that would map to whatever table", "group_id": 8448, "id": 988792}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032012.804249, "message": "I agree 100%", "group_id": 8448, "id": 988810}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032090.994246, "message": ";)", "group_id": 8448, "id": 988832}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032128.6183879, "message": "but the only difference is that is implemented on the Entries object", "group_id": 8448, "id": 988847}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032803.6581621, "message": "Entries return Entry object ;)", "group_id": 8448, "id": 989002}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030267.6533289, "message": "$entries = Entry::getAll($query);", "group_id": 8448, "id": 988466}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030995.622488, "message": "let me look up how cakePHP does it, I believe they solved it quite elegantly", "group_id": 8448, "id": 988581}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031807.9426601, "message": "So, Rowan, I agree on your query syntax, that is really cool, and really handy for complex cases", "group_id": 8448, "id": 988749}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032228.198452, "message": "sure, and that then maps back onto the EntryQuery object", "group_id": 8448, "id": 988884}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032241.633132, "message": "yes, but the hard part is, how do you use pagination etc there?", "group_id": 8448, "id": 988888}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032541.115258, "message": "the symquery solved it by adding a function to \"finish\" the query and execute it", "group_id": 8448, "id": 988947}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032581.06425, "message": "What if the Entry class managed its internal query entirely", "group_id": 8448, "id": 988956}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032606.758152, "message": "Entry->getQuery()->paginate(1)", "group_id": 8448, "id": 988960}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033473.0652101, "message": "Without knowing what these things do, can I understand the cod?", "group_id": 8448, "id": 989165}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030375.173547, "message": "Only automated methods (byID) need explanation", "group_id": 8448, "id": 988489}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030450.0828519, "message": "Why", "group_id": 8448, "id": 988504}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030325.498771, "message": "Because Entry has getByID and getAllByID too?", "group_id": 8448, "id": 988478}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030333.0676019, "message": "Makes sense", "group_id": 8448, "id": 988480}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030347.1109779, "message": "getByFitler(", "group_id": 8448, "id": 988482}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030350.557133, "message": "Nah, getAll should expect a complex query", "group_id": 8448, "id": 988483}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030350.816148, "message": "Filter*", "group_id": 8448, "id": 988484}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030438.0693071, "message": "filter == query?", "group_id": 8448, "id": 988502}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030463.16976, "message": "let me read you code samples again, one sec", "group_id": 8448, "id": 988505}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030499.748543, "message": "Imagine the following, you want to get ID's 1,5,7 and 9", "group_id": 8448, "id": 988509}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030531.6001899, "message": "and you want to sort them by date", "group_id": 8448, "id": 988511}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030532.2613959, "message": "it would make sense to me to build the query, then find out later: oh, I forgot to sort them", "group_id": 8448, "id": 988512}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030722.4265721, "message": "I don't think you should have a hidden internal query like that", "group_id": 8448, "id": 988537}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030734.6941199, "message": "Because you have to clean it up before other code can execute queries", "group_id": 8448, "id": 988539}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030788.3073299, "message": "getAllByID should be for pulling only the entries you want regardless of pagination or limits. LIMIT X where X == count($ids)", "group_id": 8448, "id": 988543}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030810.7886131, "message": "Use a query", "group_id": 8448, "id": 988545}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030574.768136, "message": "then it would be easier to just add a query than to replace getAllById() with the getAll function", "group_id": 8448, "id": 988516}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030896.5795031, "message": "I don't think the query syntax is hard to type either", "group_id": 8448, "id": 988568}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031131.0407839, "message": "from a users' standpoint, i would prefer something like this:", "group_id": 8448, "id": 988611}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030926.6407421, "message": "you have to agree its harder than just typing getAllById()", "group_id": 8448, "id": 988571}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030947.3488841, "message": "Yes, but how would you add pagination to that?", "group_id": 8448, "id": 988573}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031180.2894371, "message": "That's what SymQuery and SymQL already do", "group_id": 8448, "id": 988616}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031342.554529, "message": "It's the same", "group_id": 8448, "id": 988647}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031355.864274, "message": "ok", "group_id": 8448, "id": 988652}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031419.3543169, "message": "How does the symread object know when it is ready to execute the query?", "group_id": 8448, "id": 988661}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031437.1403899, "message": "so the ->paginate and ->order problems have already been solved then", "group_id": 8448, "id": 988665}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031442.9425499, "message": "in that case it seems it's just a case of documenting and planning the API that fixes an inconsistencies/issues of the current SymQuery/SymQL", "group_id": 8448, "id": 988668}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031445.934423, "message": "so if the main issue of those current API wrappers is that it is harder to write complex WHERE", "group_id": 8448, "id": 988670}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031449.3387101, "message": "or are we done that and now talking internal implementation", "group_id": 8448, "id": 988672}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031455.032588, "message": "obviously those extensions wrap around EntryManager", "group_id": 8448, "id": 988674}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030688.741591, "message": "Does that make sense?", "group_id": 8448, "id": 988530}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031677.4103789, "message": "I think the new EntryQuery bit can be improved", "group_id": 8448, "id": 988717}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031153.8897541, "message": "Entries::getAllById(array(1, 4, 6))->paginate()", "group_id": 8448, "id": 988613}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032069.307765, "message": "a section really is just a View if you like of tables", "group_id": 8448, "id": 988822}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032099.6933279, "message": "getByID is actually ->where('id', $x) correct?", "group_id": 8448, "id": 988836}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032103.522388, "message": "yes", "group_id": 8448, "id": 988840}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032292.084729, "message": "will internally be changed to EntryQuery->get('id')->where('id', array(1,2,4)", "group_id": 8448, "id": 988902}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032293.8699009, "message": "because the get function should return an entries object", "group_id": 8448, "id": 988903}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030747.6924961, "message": "Just build a new query, it's not that hard", "group_id": 8448, "id": 988540}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305030757.2358961, "message": "I think pagination should be able to happen at any time, and not be necessary defined as another parameter", "group_id": 8448, "id": 988541}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030801.3586111, "message": "ok, but what about sorting?", "group_id": 8448, "id": 988544}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030828.1803119, "message": "that doesn't make sense, then the getById functions would be a lot less useful", "group_id": 8448, "id": 988551}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305030876.331425, "message": "Well, I don't think sorting and limiting is complex, to be honest", "group_id": 8448, "id": 988565}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031902.4368451, "message": "Different implementations", "group_id": 8448, "id": 988773}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032363.5142491, "message": "off the top of my head, I know jQuery provides a .selector", "group_id": 8448, "id": 988916}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032365.293097, "message": "It's not the same thing", "group_id": 8448, "id": 988917}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032612.3835821, "message": "Then getByID", "group_id": 8448, "id": 988961}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032670.229054, "message": "No, every time it queried the DB it resets the internal query", "group_id": 8448, "id": 988971}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032753.4583681, "message": "yeah, that wouldn't be too bad", "group_id": 8448, "id": 988982}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032759.0181551, "message": "Ok", "group_id": 8448, "id": 988984}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032761.7202229, "message": "or, maybe\":", "group_id": 8448, "id": 988986}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032826.4524109, "message": "also, readDomDocument wouldn't be applicable in this case", "group_id": 8448, "id": 989005}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030861.959841, "message": "Indeed, they are mostly useless for complex querying", "group_id": 8448, "id": 988560}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031267.1336191, "message": "is an example of SymQuery", "group_id": 8448, "id": 988634}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031780.8685269, "message": "cool ok", "group_id": 8448, "id": 988740}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031973.412605, "message": "s", "group_id": 8448, "id": 988801}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032483.3608069, "message": "So thoughts?", "group_id": 8448, "id": 988939}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032484.2436581, "message": "ok, but then if you have a large list of id's (10000), and you want that paginated", "group_id": 8448, "id": 988940}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032648.4984829, "message": "you define all the parameters and then what you want, it'd be a weird headspace to get into", "group_id": 8448, "id": 988968}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032680.6560259, "message": "ok", "group_id": 8448, "id": 988973}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032796.229459, "message": "oh nvm", "group_id": 8448, "id": 989000}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032858.8285429, "message": "was thinking in the wrong direction..;)", "group_id": 8448, "id": 989014}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305033157.7707601, "message": "so this same approach will be used throughout? on views, users, etc?", "group_id": 8448, "id": 989067}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033175.9333091, "message": "Sorry for lateness", "group_id": 8448, "id": 989071}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033366.9892321, "message": "$sortAndPaginate = new EntryQuery()->sortBy()->paginate();", "group_id": 8448, "id": 989137}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033447.2283039, "message": "ok, thanks, I was worried that object would be tied to the actual query", "group_id": 8448, "id": 989158}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033610.3974631, "message": "It looks... complex", "group_id": 8448, "id": 989204}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033761.9002271, "message": "$entries = Entry::getAllById(array(1,2,4));", "group_id": 8448, "id": 989238}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033769.077131, "message": "These two syntax are very different in my eyes:", "group_id": 8448, "id": 989240}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033790.7975781, "message": "The former, it makes no sense to jhave these empty chained functions that do nothing", "group_id": 8448, "id": 989243}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034629.5865941, "message": "yep", "group_id": 8448, "id": 989394}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030865.990309, "message": "I don't see the problem", "group_id": 8448, "id": 988562}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305030988.1826711, "message": "setQuery? But then are you not already building a query with pagination/sorting set?", "group_id": 8448, "id": 988578}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031163.7742281, "message": "but I realise that is very hard to achieve", "group_id": 8448, "id": 988614}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031171.87988, "message": "It's not really", "group_id": 8448, "id": 988615}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031295.563076, "message": "We're not", "group_id": 8448, "id": 988639}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031448.542521, "message": "lets talk that?", "group_id": 8448, "id": 988671}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031615.197468, "message": "I believe we agreed on most of the \"query\" building syntax already", "group_id": 8448, "id": 988711}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031746.26193, "message": "sorry, thought I was talking to myself, just had to refresh", "group_id": 8448, "id": 988732}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031750.2330959, "message": "heh", "group_id": 8448, "id": 988734}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031887.8418801, "message": "It would only be possible with a DatabaseQuery or similar object", "group_id": 8448, "id": 988769}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031914.539993, "message": "Yeah, EntryQuery would return Entries", "group_id": 8448, "id": 988780}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031994.9895661, "message": "In my opinion it should use the exact same syntax we are using here", "group_id": 8448, "id": 988804}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032054.5502989, "message": "Ok, next point: magic functions (getById, getByName, etc)", "group_id": 8448, "id": 988818}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032068.4858229, "message": "after all, I think rowan hit it on the head, one queries sections, one queries tables", "group_id": 8448, "id": 988821}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032188.553329, "message": "so ById infers you want the ->get('id')", "group_id": 8448, "id": 988871}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032251.677629, "message": "because this makes sense:", "group_id": 8448, "id": 988891}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032264.798022, "message": "$entries = Entries::getById(array(1,2,4));", "group_id": 8448, "id": 988896}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032485.0297911, "message": "Craig?", "group_id": 8448, "id": 988942}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032842.009409, "message": "Instead there'd be something that takes an EntryIterator and spits out a dom document", "group_id": 8448, "id": 989009}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031074.9043479, "message": "Hmm, can't find it that quickly", "group_id": 8448, "id": 988599}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031190.502001, "message": "Have you used either?", "group_id": 8448, "id": 988617}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031197.9931369, "message": "Yes, but that would have to return a query object", "group_id": 8448, "id": 988619}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031258.7020209, "message": "$twitter_entries = SymRead('twitter')\n\t\t\t\t\t->get(\"date\")\n\t\t\t\t\t->get(\"comment\")\n\t\t\t\t\t->get(\"likes\")\n\t\t\t\t\t->get(\"campaign\")\n\t\t\t\t\t->where('moderation-status', array('Approved', 'Reported', 'Pending'))\n\t\t\t\t\t->where('moderation-reports', 'mysql: value < 3')\n\t\t\t\t\t->orderby('date', $sort)\n\t\t\t\t\t->perPage($count)\n\t\t\t\t\t->readDomDocument('twitter');", "group_id": 8448, "id": 988633}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031336.690382, "message": "Other than support for better where queries and no need to specify fields to fetch data for", "group_id": 8448, "id": 988644}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031728.164036, "message": "As it allows you to do one line queries", "group_id": 8448, "id": 988724}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033052.7607119, "message": "front", "group_id": 8448, "id": 989050}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031200.934489, "message": "the problem is that the getAllById already returns an entries object", "group_id": 8448, "id": 988620}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031338.5515611, "message": "so I'm a little as to the direction of this discussion", "group_id": 8448, "id": 988645}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031573.1626599, "message": "@brendan: we are discussing the shorthand \"magic\" functions like getAllById() that were proposed last meeting", "group_id": 8448, "id": 988704}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031715.1545129, "message": "Entry::newQuery()\n\t->where()\n\t\t->equals('moderation-status', array('Approved', 'Reported', 'Pending'))\n\t\t->sql('moderation-reports', 'value < 3')\n\t->sort('date', $sort)\n\t->paginate($count);", "group_id": 8448, "id": 988721}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031933.97557, "message": "so something similar could be used to replace/improve the current MySQL::fetchVar, fetchCol functions", "group_id": 8448, "id": 988790}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032390.46663, "message": "or doing something horrible", "group_id": 8448, "id": 988922}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032739.5957899, "message": "Entry::getById(1, Entry::query()->paginate(1));", "group_id": 8448, "id": 988980}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031229.9291761, "message": "so it would have to use lazy loading, which might be a lot of magic", "group_id": 8448, "id": 988631}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031284.37644, "message": "is there any reason why we are specifically trying to invent something vastly different to that?", "group_id": 8448, "id": 988636}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031464.522444, "message": "we are still talking user implementation at this point", "group_id": 8448, "id": 988676}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031490.8083961, "message": "Let me rewrite that SymRead", "group_id": 8448, "id": 988684}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031645.683923, "message": "$query = new EntryQuery('twitter');\n$query\n\t->where()\n\t\t->equals('moderation-status', array('Approved', 'Reported', 'Pending'))\n\t\t->sql('moderation-reports', 'value < 3')\n\t->sort('date', $sort)\n\t->paginate($count);", "group_id": 8448, "id": 988714}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031761.4278071, "message": "I have that same problem all the time..;)", "group_id": 8448, "id": 988735}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031829.28953, "message": "But it makes me wonder a few things: what if I want to use this for my extension (own tables?)", "group_id": 8448, "id": 988754}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031902.075469, "message": "Ok, thanks, so we will need that too, if we are going to implement this, right>", "group_id": 8448, "id": 988772}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033623.3594911, "message": "so you could also do:", "group_id": 8448, "id": 989208}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031963.1364141, "message": "Ok, just wanted to make sure..;)", "group_id": 8448, "id": 988797}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032078.4138761, "message": "is there anything to gain by getById instead of get('id') ?", "group_id": 8448, "id": 988826}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032144.51016, "message": "(in the current proposals)", "group_id": 8448, "id": 988852}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032202.1912711, "message": "(add a array(2,3,4)) in there too", "group_id": 8448, "id": 988877}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032212.882746, "message": "the getById is implemented on the Entry object, not on the EntryQuery object", "group_id": 8448, "id": 988879}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305031326.6920731, "message": "ok", "group_id": 8448, "id": 988642}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031431.466501, "message": "readDomDocument", "group_id": 8448, "id": 988663}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032397.5661719, "message": "what if the Entry had a reference to the EntryQuery that produced it?", "group_id": 8448, "id": 988924}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032596.988991, "message": "that would involve a lot of magic..", "group_id": 8448, "id": 988958}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031748.162365, "message": "Entry::newQuery('twitter')->where('id', 1);", "group_id": 8448, "id": 988733}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305031850.3316579, "message": "and: what shall we do with the magic functions? They can make your life a lot easier", "group_id": 8448, "id": 988756}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031860.3453031, "message": "It wouldn't be possible as it's for querying sections not tables", "group_id": 8448, "id": 988759}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032394.2561209, "message": "I think this can be answered quite easily:", "group_id": 8448, "id": 988923}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032815.358994, "message": ";)", "group_id": 8448, "id": 989003}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032850.681211, "message": "nvm", "group_id": 8448, "id": 989011}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032871.554148, "message": "me too", "group_id": 8448, "id": 989016}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031718.9961181, "message": "Or similar", "group_id": 8448, "id": 988722}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032083.795666, "message": "oh right sorry", "group_id": 8448, "id": 988829}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032378.045022, "message": "hrm, at the risk of getting too off the track", "group_id": 8448, "id": 988918}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032493.5271821, "message": "you would have to load the 1000 entires, then paginate", "group_id": 8448, "id": 988944}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032504.1902089, "message": "what rowan said..;)", "group_id": 8448, "id": 988945}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032827.5855069, "message": "I think that might work, to be honest", "group_id": 8448, "id": 989006}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032149.2737451, "message": "So could you replace EntryQuery->get('id')->where('id', array(2,3,4))->orderby('date')", "group_id": 8448, "id": 988853}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032862.505394, "message": "Toilet break", "group_id": 8448, "id": 989015}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305031972.4051349, "message": "s3 already has a much more capable database clas", "group_id": 8448, "id": 988800}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032081.347209, "message": "should these be implemented, and if so, how do we integrate the basics (sorting, pagination)", "group_id": 8448, "id": 988827}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032139.726649, "message": "rather than on the EntryQuery object", "group_id": 8448, "id": 988850}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032149.920681, "message": "with", "group_id": 8448, "id": 988854}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032160.988519, "message": "EntryQuery->getById(id')->orderby('date')", "group_id": 8448, "id": 988856}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032171.0157781, "message": "refresh..;)", "group_id": 8448, "id": 988860}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032307.2668829, "message": "if you chain that you will call the pagination function on the entries object", "group_id": 8448, "id": 988906}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032340.506124, "message": "perhaps rowan can shed some light on how SymQuery does the jQuery style chaining technically?", "group_id": 8448, "id": 988910}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032405.1217141, "message": "Hmm...", "group_id": 8448, "id": 988926}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032412.7850051, "message": "much like $('li > p').selector returns 'li > p'", "group_id": 8448, "id": 988928}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032431.329695, "message": "should Entry::getById()->selector() return the EntryQuery object?", "group_id": 8448, "id": 988933}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032451.109113, "message": "sorry", "group_id": 8448, "id": 988936}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032455.7258451, "message": "didn't refresh..;)", "group_id": 8448, "id": 988937}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032484.445488, "message": "Rowan?", "group_id": 8448, "id": 988941}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032581.434778, "message": "$entries = Entries::getAllById(array(1,2,3))->get()", "group_id": 8448, "id": 988957}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032833.967324, "message": "@buzzomatic I think Entry::getById(1, Entry::query()->paginate(1)); works", "group_id": 8448, "id": 989007}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033089.3340621, "message": "Yeah", "group_id": 8448, "id": 989059}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032485.2560229, "message": "brendan, it's too late at that point", "group_id": 8448, "id": 988943}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033252.6656489, "message": "why?", "group_id": 8448, "id": 989098}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033373.7145081, "message": "(example, don't know if the syntax is right)", "group_id": 8448, "id": 989141}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033688.7582631, "message": "it's the same, but they live hand in hand", "group_id": 8448, "id": 989228}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033728.5232379, "message": "Same syntax??", "group_id": 8448, "id": 989235}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034229.2964289, "message": "It's hardly an issue at all", "group_id": 8448, "id": 989320}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034236.316364, "message": "because the Entry object can also be used to save the entries", "group_id": 8448, "id": 989322}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034390.5708809, "message": "Sure, but we have to realise there is no \"best\" way", "group_id": 8448, "id": 989340}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032272.3964911, "message": "internally it will use EntryQuery, so why can't the syntax remain consistent?", "group_id": 8448, "id": 988898}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032311.524982, "message": "not on the entryquery object", "group_id": 8448, "id": 988907}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035617.8762691, "message": "->data('title') ?", "group_id": 8448, "id": 989578}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032434.2770081, "message": "@brendan: it's quite easy, the symquery provides a \"final\" function, that returns the entries", "group_id": 8448, "id": 988935}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032478.771266, "message": "heh", "group_id": 8448, "id": 988938}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032559.6555769, "message": "this would be really useful for the getByid function, but it would be ugly, too", "group_id": 8448, "id": 988952}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032600.6480379, "message": "So instead of Entry::setQuery you do", "group_id": 8448, "id": 988959}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032630.0082641, "message": "nah, it's too counter intutive", "group_id": 8448, "id": 988964}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032648.979161, "message": "then you would also have the problem of the sticky queries, right?", "group_id": 8448, "id": 988969}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032697.093333, "message": "Still bad if you cancel a query, as the next thing to do a query will have the same limits you set", "group_id": 8448, "id": 988974}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032772.08111, "message": "is ->execute() that bad?", "group_id": 8448, "id": 988992}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032777.1666999, "message": "Entry::query($section == null) would be the definition", "group_id": 8448, "id": 988993}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305032778.619113, "message": "Entry::getAllById(array(1,2,4), $query);", "group_id": 8448, "id": 988994}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305032789.41238, "message": "the readDomDocument or read functionality of SymQuery is nice", "group_id": 8448, "id": 988995}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305032633.8641081, "message": "Yeah", "group_id": 8448, "id": 988967}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033010.954936, "message": "back", "group_id": 8448, "id": 989039}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033081.223532, "message": "Probably easier if I just update my example", "group_id": 8448, "id": 989056}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033834.9784219, "message": "ok, sorry", "group_id": 8448, "id": 989255}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033842.5546629, "message": "let me fix the commands", "group_id": 8448, "id": 989258}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033849.687036, "message": "$sortAndPaginate = Entry::query()->sortBy()->paginate();\n$entries = Entries::getAllById(array(1,2,4), $sortAndPaginate);\n\n$entries = Entry::getAll();", "group_id": 8448, "id": 989260}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305033993.3693249, "message": "I think this is almost heading down the right track", "group_id": 8448, "id": 989280}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033202.4652331, "message": "rowan, do you prefer a seperate EntryQuery object, or do you prefer the Entry::query() approach?", "group_id": 8448, "id": 989081}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033298.4593971, "message": "Ah, i see", "group_id": 8448, "id": 989114}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033536.4001961, "message": "it would get the entries with id's 1,2 and 4 and it would sort and paginate them..", "group_id": 8448, "id": 989179}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033654.24143, "message": "Entry::query()->where('id'=>array(1,2,4))->sortBy('date', 'ASC')->paginate(1);", "group_id": 8448, "id": 989215}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033669.056581, "message": "It's the same as my syntax", "group_id": 8448, "id": 989222}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034064.4729381, "message": "Later", "group_id": 8448, "id": 989298}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034423.979944, "message": "getAll performs a query, then you query the query!??", "group_id": 8448, "id": 989346}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034555.3071239, "message": "Ok", "group_id": 8448, "id": 989381}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033717.4264741, "message": "I'm not sure why we'd have one syntax that is logical, but another that looks like a mess?", "group_id": 8448, "id": 989234}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033838.1187871, "message": "I know, one sec", "group_id": 8448, "id": 989256}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033907.3910229, "message": "Why pass an Entry::query() to Entry::getAll?", "group_id": 8448, "id": 989270}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033907.65185, "message": "I understand _why_, I'm being belligerent. The API should shield the user from needing to do these things, IMHO", "group_id": 8448, "id": 989271}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035466.840529, "message": "Default for where() == equals", "group_id": 8448, "id": 989544}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033173.483187, "message": "Hello", "group_id": 8448, "id": 989068}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033217.010251, "message": "(or do you see it as the same thing?)", "group_id": 8448, "id": 989085}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305033063.3553269, "message": "btw one of you guys is going to have to summarize all this on the wiki", "group_id": 8448, "id": 989052}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033185.261277, "message": "Deadlines, colleagues with babies, usual stuff", "group_id": 8448, "id": 989075}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033504.087465, "message": "$sortAndPaginate = Entry::query()->sortBy()->paginate();\n$entries1 = Entries::getAllById(array(1,2,4), $sortAndPaginate);", "group_id": 8448, "id": 989172}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034484.2411971, "message": "and it leaves you with very unreadable code:", "group_id": 8448, "id": 989361}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033866.2877879, "message": "Don't forget to paginate with something", "group_id": 8448, "id": 989265}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033965.7333021, "message": "Nick, that can only return entries if you then add ->execute()", "group_id": 8448, "id": 989276}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034158.973038, "message": "Why pass Entry::query() to Entry::getAll(), when you could call execute() on Entry::query()", "group_id": 8448, "id": 989311}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034406.8379271, "message": "Nope", "group_id": 8448, "id": 989343}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034533.1335821, "message": "the entries object", "group_id": 8448, "id": 989376}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034534.244467, "message": "EntryIterator", "group_id": 8448, "id": 989377}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034534.618551, "message": "(or getAll)", "group_id": 8448, "id": 989378}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034535.7696741, "message": "or entryiterateor", "group_id": 8448, "id": 989379}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034754.355361, "message": "I see", "group_id": 8448, "id": 989409}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034775.2800491, "message": "$entries = Entry::getAllById(array(1,2,4), new EntryQuery($something, $else, $another));", "group_id": 8448, "id": 989418}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034843.6004519, "message": "yes, maybe we should rename that, though", "group_id": 8448, "id": 989430}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305033079.3380229, "message": "you should have edit privileges now", "group_id": 8448, "id": 989055}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033267.316834, "message": "One less class for people to remember?", "group_id": 8448, "id": 989103}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033403.9340301, "message": "$entries1 = Entries::getAllById(array(1,2,4), $sortAndPaginate);", "group_id": 8448, "id": 989149}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033233.8105111, "message": "Have read the above. Nothing to add just yet, most of this is over my head. But I want to reiterate that what's under the hood matters little, the API is all about being obvious and intuitive", "group_id": 8448, "id": 989090}, {"user_id": 23184, "stars": [{"date_created": 1305033504.7056141, "user_id": 23210}], "topic_id": 20301, "date_created": 1305033417.3656869, "message": "$entries2 = Entries::getAllById(array(5,6,7), $sortAndPaginate);", "group_id": 8448, "id": 989151}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033854.1789639, "message": "shit", "group_id": 8448, "id": 989261}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033459.4890881, "message": "so that if I would pass it to entries2 it would change internally", "group_id": 8448, "id": 989162}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033462.576962, "message": "Rewind a bit \u2014 is the above obvious? Does it flow?", "group_id": 8448, "id": 989163}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033519.058533, "message": "What would that do?", "group_id": 8448, "id": 989177}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034016.9918211, "message": "/me looks", "group_id": 8448, "id": 989285}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305034039.3627961, "message": "just as a last minute comment, I don't think ->execute() or ->go() or ->fetch() or some sort of final function is _that_ bad, it's easier to explain to people", "group_id": 8448, "id": 989288}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033174.0163579, "message": "Yeah, roughly", "group_id": 8448, "id": 989069}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033276.3814039, "message": "Becuase you can't do new EntryQuery()->paginate()", "group_id": 8448, "id": 989106}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033712.9076619, "message": "It's so you can paginate or sort it", "group_id": 8448, "id": 989231}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033247.9223621, "message": "Entry::query", "group_id": 8448, "id": 989096}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033313.863081, "message": "but what if I had this \"uber-setting\" that I wanted all my queries to use?", "group_id": 8448, "id": 989119}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033323.774333, "message": "then I would have to copy-paste it?", "group_id": 8448, "id": 989122}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033342.3131621, "message": "example?", "group_id": 8448, "id": 989127}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033379.920841, "message": "then I could do:", "group_id": 8448, "id": 989143}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033422.895287, "message": "$sortAndPaginate = Entry::query()->sortBy()->paginate();", "group_id": 8448, "id": 989152}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033435.278477, "message": "I'm lost", "group_id": 8448, "id": 989155}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033474.9630589, "message": "code?", "group_id": 8448, "id": 989166}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033560.9411941, "message": "That syntax isn;t like anything I've seen before", "group_id": 8448, "id": 989185}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033607.4438341, "message": "It's the symquery syntax, but with one added shorthand function", "group_id": 8448, "id": 989202}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034753.5457399, "message": "oh wait", "group_id": 8448, "id": 989408}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034808.0745411, "message": ":)", "group_id": 8448, "id": 989425}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034831.9755371, "message": "Entry::query() makes it a little neater", "group_id": 8448, "id": 989429}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034917.9530981, "message": "Did we get to the bottom of how to query entries from a specific section? I recall we considered querying on a Section object :-/", "group_id": 8448, "id": 989440}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033667.2123151, "message": "So why don't we just use that?", "group_id": 8448, "id": 989221}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033703.317982, "message": "Nick, it's optional for getByID", "group_id": 8448, "id": 989229}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033813.816375, "message": "that would be the correct syntax", "group_id": 8448, "id": 989249}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033815.6013429, "message": "They do something", "group_id": 8448, "id": 989250}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034171.672374, "message": "$entries = Entry::query()->where('id'=>array(1,2,4))->sort('date', 'ASC')->paginate(1, 20)->execute();", "group_id": 8448, "id": 989313}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034259.137109, "message": "Entry::query() is the minimum", "group_id": 8448, "id": 989325}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034264.6871221, "message": "yes", "group_id": 8448, "id": 989327}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034629.5203829, "message": "I think I find it at odds that you pass an Entry::query() which is just a meta object. To me this is the correct use or parameters (or an array)", "group_id": 8448, "id": 989393}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034987.6618559, "message": "yeah", "group_id": 8448, "id": 989451}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035000.8015699, "message": "But that is a static singleton", "group_id": 8448, "id": 989453}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035094.929915, "message": "What if you don't clean up afte yourself, won't that singleton persist and be used bny other queries?", "group_id": 8448, "id": 989471}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035517.5730751, "message": "Field::buildWhereQueryEuals and buildWhereQueryDefault could be functions for example", "group_id": 8448, "id": 989554}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033675.3190091, "message": "sortBy==sort", "group_id": 8448, "id": 989224}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033831.4917171, "message": "Not sure what you mean nick", "group_id": 8448, "id": 989254}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305034046.2577131, "message": "you can do anything, but when you want entries, add ->execute()", "group_id": 8448, "id": 989291}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034969.454248, "message": "That doesn't make sense to me \u2014 feels like a static class that isn't", "group_id": 8448, "id": 989448}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035030.1556001, "message": "no", "group_id": 8448, "id": 989460}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035790.8337221, "message": "->get('title)", "group_id": 8448, "id": 989627}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035971.1417241, "message": "Oh I suppose", "group_id": 8448, "id": 989682}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033707.40957, "message": "the shorthand functions are really useful if you don't need a complex queyr", "group_id": 8448, "id": 989230}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033745.4815691, "message": "Nick, let me give a cleaner example, then:", "group_id": 8448, "id": 989236}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033905.8349011, "message": "$query = Entry::query()->sortBy('date', 'ASC')->paginate(1);\n$entries = Entries::getAllById(array(1,2,4), $query);\n\n$query = Entry::query()->where('id'=>array(1,2,4))->sortBy('date', 'ASC')->paginate(1));\n$entries = Entry::getAll($query);", "group_id": 8448, "id": 989267}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305034061.054065, "message": "ttyl", "group_id": 8448, "id": 989296}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034456.3317239, "message": "Out of interest, why do you hate it?", "group_id": 8448, "id": 989354}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034523.825057, "message": "What does getAllByID() return?", "group_id": 8448, "id": 989372}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033769.3273079, "message": "$sortAndPaginate = Entry::query()->sortBy()->paginate();\n$entries = Entries::getAllById(array(1,2,4), $sortAndPaginate);\n\n$entries = Entry::query()->where('id'=>array(1,2,4))->sortBy('date', 'ASC')->paginate(1);", "group_id": 8448, "id": 989241}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033906.7566781, "message": "So this makes more sense to me:", "group_id": 8448, "id": 989268}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033798.467679, "message": "$sortAndPaginate = Entry::query()->sortBy()->paginate();\n$entries = Entries::getAllById(array(1,2,4), $sortAndPaginate);\n\n$entries = Entry::getAll(Entry::query()->where('id'=>array(1,2,4))->sortBy('date', 'ASC')->paginate(1));", "group_id": 8448, "id": 989247}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033856.4208641, "message": "one sec", "group_id": 8448, "id": 989263}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305033907.1507411, "message": "$entries = Entry::getAll()->where('id'=>array(1,2,4))->sortBy('date', 'ASC')->paginate(1);", "group_id": 8448, "id": 989269}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305034058.5079999, "message": "anyway, I'm out", "group_id": 8448, "id": 989295}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305034273.492044, "message": "I know I've been a really valuable contributor to this conversation, but I need to run out for a few minutes. Back in a bit.", "group_id": 8448, "id": 989330}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034597.4179771, "message": "rowan, one question", "group_id": 8448, "id": 989389}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034618.3082249, "message": "$query = Entry::query()->sortBy('id', 'ASC');", "group_id": 8448, "id": 989391}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034957.1875801, "message": "Huib, that's better", "group_id": 8448, "id": 989447}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035304.433603, "message": "1. Get an entry by ID (no section required)", "group_id": 8448, "id": 989506}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035719.728085, "message": "How so?", "group_id": 8448, "id": 989607}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034064.4698391, "message": "Bye!", "group_id": 8448, "id": 989297}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034663.4713039, "message": "no, this is exactly what objects are designed for..", "group_id": 8448, "id": 989396}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034675.2966449, "message": "exactly", "group_id": 8448, "id": 989398}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035460.2387719, "message": "Yep", "group_id": 8448, "id": 989541}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036004.145551, "message": "Yeah", "group_id": 8448, "id": 989694}, {"user_id": 27420, "stars": [], "topic_id": 20301, "date_created": 1305033974.9577379, "message": "I'm out chaps, got some real world stuff to get to", "group_id": 8448, "id": 989277}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033983.2453859, "message": ";-)", "group_id": 8448, "id": 989278}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305033992.719331, "message": "cheers Brendan, say hello to the world for me", "group_id": 8448, "id": 989279}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034044.6308961, "message": "@Nick: does my second code sample make things a bit clearer?", "group_id": 8448, "id": 989290}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034774.714813, "message": "Is this illegal", "group_id": 8448, "id": 989417}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035425.474663, "message": "Like it.", "group_id": 8448, "id": 989535}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035455.0431459, "message": "equals, contains etc", "group_id": 8448, "id": 989540}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035796.0131879, "message": "?", "group_id": 8448, "id": 989629}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305033999.9893119, "message": "The reasons for Entry::getAll are described at the very beginning of this conversation", "group_id": 8448, "id": 989281}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034144.6733069, "message": "Nick, this is all about providing pagination to the short form functions, and not having to do the full query syntax", "group_id": 8448, "id": 989309}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034191.1709161, "message": "Or even bin the query() entirely", "group_id": 8448, "id": 989315}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034193.9991779, "message": "$entries = Entry::where('id'=>array(1,2,4))->sort('date', 'ASC')->paginate(1, 20)->execute();", "group_id": 8448, "id": 989317}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034211.1066611, "message": "Huib said: this will keep the source of all entries at the same place, making it easier to understand", "group_id": 8448, "id": 989319}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034282.722265, "message": ";)", "group_id": 8448, "id": 989331}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034302.5243649, "message": "Right, ok", "group_id": 8448, "id": 989332}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034327.801703, "message": "Also, to me it makes more sense to pass parameters to the get function than to call execute on a query", "group_id": 8448, "id": 989333}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034330.9191699, "message": "I hope you guys realise I'm being deliberately obtuse", "group_id": 8448, "id": 989334}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034391.0482249, "message": "If there are set methods to call on the query, could you have these as arguments on the getALl method instead?", "group_id": 8448, "id": 989341}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034406.651799, "message": "sorry?", "group_id": 8448, "id": 989342}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034434.8914471, "message": "$entries = Entry::getAll(Array $where, String $sort, Integer $limit, Integer $page);", "group_id": 8448, "id": 989348}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034442.60374, "message": "No", "group_id": 8448, "id": 989351}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034446.232904, "message": "I hate that syntax", "group_id": 8448, "id": 989352}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034460.9360099, "message": "it requires you to look up the entrymanager function if you forgot the order of the paramters", "group_id": 8448, "id": 989355}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034462.76579, "message": "The syntax, not the concept", "group_id": 8448, "id": 989356}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034463.6694901, "message": "parameters*", "group_id": 8448, "id": 989357}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034447.4847839, "message": "I suppose that;s back to EntryManager::fetch() :-P", "group_id": 8448, "id": 989353}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034908.2640121, "message": "or:", "group_id": 8448, "id": 989438}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035174.042213, "message": "Email::create()", "group_id": 8448, "id": 989486}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035174.9256351, "message": "then", "group_id": 8448, "id": 989487}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035326.5315549, "message": "Thanks for the chat, it was really helpful!", "group_id": 8448, "id": 989515}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035330.0213251, "message": "no problem..;)", "group_id": 8448, "id": 989517}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035623.7044101, "message": "No", "group_id": 8448, "id": 989581}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035869.460748, "message": "It might look clean, but I'm going to be pissed off to write that all day every day", "group_id": 8448, "id": 989650}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036289.8142431, "message": "Should data() be fields() then?", "group_id": 8448, "id": 989798}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034465.0909071, "message": "getAllByID(array(1, 2, 3), Entry::query()->paginate(1, 20));", "group_id": 8448, "id": 989358}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034519.2901161, "message": "$entries = Entry:getAll(array('id'=>1), array('id', 'DESC'), 10, 10)", "group_id": 8448, "id": 989371}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034737.3654981, "message": "Syntax error", "group_id": 8448, "id": 989406}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034741.548008, "message": "why?", "group_id": 8448, "id": 989407}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034987.37025, "message": "Symphony::Database()", "group_id": 8448, "id": 989450}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035108.161335, "message": "It isn't a singleton", "group_id": 8448, "id": 989473}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036549.8398349, "message": "Possibly", "group_id": 8448, "id": 989916}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034670.8209541, "message": "Its an object, because it provides self validation/etc", "group_id": 8448, "id": 989397}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034604.302398, "message": "would this work:", "group_id": 8448, "id": 989390}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034623.326242, "message": "$query->paginate(1);", "group_id": 8448, "id": 989392}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035006.202065, "message": "It's also quite common in other languages", "group_id": 8448, "id": 989454}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036520.901356, "message": "I think - Entry::deleteByID/deleteAllByID and Entry::deleteAll($query)", "group_id": 8448, "id": 989903}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036537.6143439, "message": "As opposed to fetching the entries", "group_id": 8448, "id": 989908}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037080.0327921, "message": "S3 would do one query per field per entry?", "group_id": 8448, "id": 990142}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034718.17803, "message": "out of interest: why would I have to use Entry::query() and can't I use: new EntryQuery()?", "group_id": 8448, "id": 989405}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034764.0551131, "message": "the new statement can not return an object", "group_id": 8448, "id": 989411}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034811.343426, "message": "$query = new EntryQuery();\n$query->paginate();", "group_id": 8448, "id": 989426}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034852.549649, "message": "Entry::newQuery()", "group_id": 8448, "id": 989432}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034853.9522281, "message": "or something", "group_id": 8448, "id": 989433}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034873.9752059, "message": "yep, that is cleaner", "group_id": 8448, "id": 989436}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034920.0648601, "message": "$query = EntryQuery::create()->paginate()->domorestuff()", "group_id": 8448, "id": 989441}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035026.4282539, "message": "So EntryQuery::create() is a singleton?", "group_id": 8448, "id": 989458}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035037.0821869, "message": "the EntryQuery is a singleton", "group_id": 8448, "id": 989461}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035191.0566831, "message": "Would it be worth then going over the use cases we wrote our samples against, using the updated syntax above?", "group_id": 8448, "id": 989490}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036292.3769281, "message": "but separates internal info from field data", "group_id": 8448, "id": 989801}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036853.59694, "message": "Random", "group_id": 8448, "id": 990058}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035334.4181659, "message": "guys*", "group_id": 8448, "id": 989520}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035587.864387, "message": "$entry = Entry::getByID(1); $title = $entry->data()->{'title'};", "group_id": 8448, "id": 989571}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035844.4731879, "message": "I'm wary that \"$entry->data()->{'something'}\" is a bit of a mouthful", "group_id": 8448, "id": 989644}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035951.659929, "message": "Nope", "group_id": 8448, "id": 989671}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036194.1943679, "message": "How about system things, like getting the entry ID, System Date and Author", "group_id": 8448, "id": 989759}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036374.4791009, "message": "5. Deleting an entry", "group_id": 8448, "id": 989833}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034777.1635189, "message": "so you would have to use something like this:", "group_id": 8448, "id": 989421}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305034798.3975971, "message": "Smelly PHP.", "group_id": 8448, "id": 989424}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034820.432565, "message": "Yep", "group_id": 8448, "id": 989428}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035049.793133, "message": "the create function returns a query object", "group_id": 8448, "id": 989465}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035194.6101601, "message": "To see if there are any holes", "group_id": 8448, "id": 989491}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035331.911217, "message": "Bye gyes", "group_id": 8448, "id": 989518}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035612.967474, "message": "Values may not be fetched until data()->{'fieldname'} is accessed", "group_id": 8448, "id": 989577}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035695.1235421, "message": "->data()->{...} because otherwise it would be getData", "group_id": 8448, "id": 989596}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035815.6547379, "message": "Nah, native syntax is nicer", "group_id": 8448, "id": 989638}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035899.954016, "message": "I do already", "group_id": 8448, "id": 989658}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035952.4739339, "message": "It's also less overhead, no need for logic inside of data()", "group_id": 8448, "id": 989675}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036016.9046381, "message": "$entry->data()->title is dandy./", "group_id": 8448, "id": 989702}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305034865.1899891, "message": "$query = Entry::query()\n\t->paginate()\n\t->domorestuff...", "group_id": 8448, "id": 989435}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305034979.877593, "message": "we do this all the time?", "group_id": 8448, "id": 989449}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035041.482363, "message": "itself", "group_id": 8448, "id": 989464}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035055.3319359, "message": "(or whatever we want to call it)", "group_id": 8448, "id": 989466}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035128.787827, "message": "Right, that makes more sense", "group_id": 8448, "id": 989477}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035143.4652951, "message": "That's very different to Symphony::Database() :-)", "group_id": 8448, "id": 989480}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035316.0774701, "message": "See you Huib", "group_id": 8448, "id": 989511}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035449.4740739, "message": "You were saying last time about field filtering, implemented by the field", "group_id": 8448, "id": 989539}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036370.8769431, "message": "$section->meta()->handle", "group_id": 8448, "id": 989831}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036643.578362, "message": "Yeah, but you shouldn't need a whole entry to delete an entry if you have its ID", "group_id": 8448, "id": 989967}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036683.218363, "message": "As there's no validation happening during it", "group_id": 8448, "id": 989989}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036873.9672079, "message": "Remember, fields need to support output modes", "group_id": 8448, "id": 990063}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037012.4485779, "message": "Similar to ->where() syntax", "group_id": 8448, "id": 990109}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037036.704109, "message": "More than S2", "group_id": 8448, "id": 990121}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035039.5829639, "message": "Sorry, EntryQuery itselg", "group_id": 8448, "id": 989462}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035110.6308801, "message": "the singleton is a factory class", "group_id": 8448, "id": 989474}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035120.453958, "message": "so it will return objects", "group_id": 8448, "id": 989475}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035171.329499, "message": "ok, it is..", "group_id": 8448, "id": 989485}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035282.29391, "message": "Fetch by ID", "group_id": 8448, "id": 989501}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036031.5886531, "message": "{'two-words'}", "group_id": 8448, "id": 989709}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035305.5977409, "message": "Entry::getById(1);", "group_id": 8448, "id": 989508}, {"user_id": 23184, "stars": [], "topic_id": 20301, "date_created": 1305035310.3393049, "message": "Shit, I have to go guys, sorry", "group_id": 8448, "id": 989509}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035320.3673761, "message": "Cya mate", "group_id": 8448, "id": 989513}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035326.4695649, "message": "Thanks for answering my silly questions!", "group_id": 8448, "id": 989514}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035332.923857, "message": "2. Get an entry by title (section required)", "group_id": 8448, "id": 989519}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035377.677233, "message": "Entry::getAll(EntryQuery::create('section')->where('title', 'foobar'));", "group_id": 8448, "id": 989525}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035481.4916301, "message": "Or possibly it can be handled by the field", "group_id": 8448, "id": 989545}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035529.0714879, "message": "3. Get specific fields of an entry (e.g. data source included elements)", "group_id": 8448, "id": 989557}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035529.9799311, "message": "Right", "group_id": 8448, "id": 989558}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035632.2276349, "message": "Or maybe, hmm", "group_id": 8448, "id": 989587}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305036981.0072479, "message": "basic DS output stuff", "group_id": 8448, "id": 990097}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037305.3601699, "message": "The latest 10 entries (based on a Date field) where Title contains \"Nick Dunn\" and that are published (checkbox) from an Articles section. I want them paginated, but just page 1 for now. I want to create their XML, to include Title, Date and Published fields.", "group_id": 8448, "id": 990204}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037730.0987921, "message": "If we can get the above example sorted, I think that's Entries sorted", "group_id": 8448, "id": 990370}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036281.1921699, "message": "Works like data", "group_id": 8448, "id": 989796}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035810.688134, "message": "->data('title'), ->data('title, 'foobar')", "group_id": 8448, "id": 989635}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035696.425797, "message": "Latter feels cleaner, just from a code length perspective", "group_id": 8448, "id": 989599}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035697.1624911, "message": "I'm thinking purely from a user, not how it is implemented behind the scenes", "group_id": 8448, "id": 989600}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035709.650023, "message": "It also allows assigning data through the same syntax", "group_id": 8448, "id": 989604}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035980.5382969, "message": "You don't have to handle the second optional parameter", "group_id": 8448, "id": 989684}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036257.375073, "message": "Possibly just $entry->id", "group_id": 8448, "id": 989781}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305036931.246588, "message": "this is all looking quite good", "group_id": 8448, "id": 990078}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305036959.1002009, "message": "yeah", "group_id": 8448, "id": 990089}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037194.0648041, "message": "I want:", "group_id": 8448, "id": 990174}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037194.5024469, "message": "EntryCSVDocument, EntryJSONDocument", "group_id": 8448, "id": 990175}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037307.4570229, "message": "Please", "group_id": 8448, "id": 990206}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037619.349926, "message": "Shivering", "group_id": 8448, "id": 990324}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037620.983252, "message": "Sobbing", "group_id": 8448, "id": 990325}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305035732.2756929, "message": "->data()->{'title'} = 'foobar';", "group_id": 8448, "id": 989611}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035849.967011, "message": "Repetitive characters", "group_id": 8448, "id": 989645}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035908.4856169, "message": "Are you pissed off?", "group_id": 8448, "id": 989661}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036027.923888, "message": "Ok, next", "group_id": 8448, "id": 989705}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036085.1887231, "message": "$entry->validate($errors);", "group_id": 8448, "id": 989734}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036088.416991, "message": "$entry->save($errors);", "group_id": 8448, "id": 989735}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036267.36186, "message": "Hmm", "group_id": 8448, "id": 989790}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035795.669944, "message": "->set('title', 'foobar')", "group_id": 8448, "id": 989628}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035998.2349229, "message": "Does $data->title also work?", "group_id": 8448, "id": 989691}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036081.6004701, "message": "$errors = new ErrorStack();", "group_id": 8448, "id": 989733}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036037.8153, "message": "Yaha", "group_id": 8448, "id": 989715}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036124.0112281, "message": "What if we have a single field to update", "group_id": 8448, "id": 989740}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036309.3505681, "message": "More generic.", "group_id": 8448, "id": 989808}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036630.8726759, "message": "And then save() or delete() them", "group_id": 8448, "id": 989959}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036668.9069271, "message": "I guess", "group_id": 8448, "id": 989980}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036746.774714, "message": "7. Return partial XML of an entry", "group_id": 8448, "id": 990018}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036760.090117, "message": "Craig, I think", "group_id": 8448, "id": 990028}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036782.7065549, "message": "?", "group_id": 8448, "id": 990033}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036857.679347, "message": "Hmm", "group_id": 8448, "id": 990060}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036869.1165609, "message": "What if I have an entry and just want its XML representation?", "group_id": 8448, "id": 990062}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035964.4697621, "message": "How do you mean?", "group_id": 8448, "id": 989680}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305035993.671706, "message": "$data = $entry->data(); echo $data->{'title'}", "group_id": 8448, "id": 989689}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036003.6755159, "message": "Obv if it's a single word", "group_id": 8448, "id": 989693}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036006.2943771, "message": "Same thing", "group_id": 8448, "id": 989695}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036006.8448801, "message": "Sweet.", "group_id": 8448, "id": 989696}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036024.9502051, "message": "Less punctuation to type!", "group_id": 8448, "id": 989704}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036042.317945, "message": "4. Create new Entry in section 123", "group_id": 8448, "id": 989717}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036050.0834219, "message": "(or section \"Articles\")", "group_id": 8448, "id": 989721}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036070.523922, "message": "$entry->populate($_POST);", "group_id": 8448, "id": 989728}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036149.759444, "message": "$entry->data()->title = 'value';", "group_id": 8448, "id": 989747}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036197.3954971, "message": "(and setting them)", "group_id": 8448, "id": 989762}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036296.0958619, "message": "Right", "group_id": 8448, "id": 989802}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036313.929503, "message": "Yeah", "group_id": 8448, "id": 989812}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036320.779079, "message": "$section->data() etc", "group_id": 8448, "id": 989814}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036327.1684189, "message": "$author", "group_id": 8448, "id": 989819}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036066.636924, "message": "$entry = new Entry('section');", "group_id": 8448, "id": 989726}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036133.2126069, "message": "->populate('field', 'value')?", "group_id": 8448, "id": 989741}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036275.3868871, "message": "$entry->meta()", "group_id": 8448, "id": 989792}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036767.5034781, "message": "and 8. Return full XML", "group_id": 8448, "id": 990029}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036787.7199781, "message": "Nah", "group_id": 8448, "id": 990038}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036806.879945, "message": "$entry->build('xml'), $entry->build('json')", "group_id": 8448, "id": 990044}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036841.1487629, "message": "$doc->useFieldOrSomething('field-name');", "group_id": 8448, "id": 990054}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037127.6836319, "message": "Yep true", "group_id": 8448, "id": 990158}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036307.878823, "message": "Actually data() makes more sense I think", "group_id": 8448, "id": 989807}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036310.51859, "message": "fields() would be a way of returning the actual field objects, I think", "group_id": 8448, "id": 989810}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036323.2855909, "message": "Works for other objects", "group_id": 8448, "id": 989818}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036377.5093589, "message": "(single)", "group_id": 8448, "id": 989836}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036611.2257199, "message": "->delete() makes things easier I think. Always get/getAll/getById to find the things you want", "group_id": 8448, "id": 989949}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036670.606319, "message": "Probably no error stack - only exceptions", "group_id": 8448, "id": 989981}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036681.2102251, "message": "What if the ID didn't exist?", "group_id": 8448, "id": 989988}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036757.7354119, "message": "Or quite what it means", "group_id": 8448, "id": 990026}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036376.9471231, "message": "$user->meta()->id", "group_id": 8448, "id": 989835}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038007.693228, "message": "Great stuff Rowan, thanks for writing that out", "group_id": 8448, "id": 990473}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038085.938652, "message": "But I wouldn't want to combine getAll as it accepts completely different data", "group_id": 8448, "id": 990499}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038180.7513051, "message": "But getAll is only used for fetching whole queries", "group_id": 8448, "id": 990533}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038355.964869, "message": "Ok", "group_id": 8448, "id": 990604}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038370.081686, "message": "Next steps?", "group_id": 8448, "id": 990612}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038378.76373, "message": "Above we've got samples for 8 or 9 use cases", "group_id": 8448, "id": 990616}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038631.2948179, "message": "See you nick", "group_id": 8448, "id": 990705}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036389.5603571, "message": "And 6. Deleting multiple entries matching the same criteria", "group_id": 8448, "id": 989838}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036784.855273, "message": "Whole different kettle really", "group_id": 8448, "id": 990036}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305036961.3546691, "message": "i'm assuming", "group_id": 8448, "id": 990090}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037019.497437, "message": "Yeah", "group_id": 8448, "id": 990111}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037832.2395289, "message": "possibly entries() instead of generate()", "group_id": 8448, "id": 990412}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036543.4356911, "message": "And $entry->delete())", "group_id": 8448, "id": 989913}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036715.7394781, "message": "Ok, a few more use cases to go:", "group_id": 8448, "id": 990004}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036716.166801, "message": "Still an exception", "group_id": 8448, "id": 990005}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036645.111053, "message": "That way you also get your error stack working for deleted", "group_id": 8448, "id": 989969}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036781.7909789, "message": "$entry->xml()", "group_id": 8448, "id": 990032}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036834.10133, "message": "Whassat?", "group_id": 8448, "id": 990052}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037032.3556709, "message": "That == many database queries", "group_id": 8448, "id": 990118}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037109.646961, "message": "Can still work like this", "group_id": 8448, "id": 990151}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036541.8684499, "message": "Yeah", "group_id": 8448, "id": 989912}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036684.752492, "message": "Oh right", "group_id": 8448, "id": 989991}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036693.8460519, "message": "Cascading deletes?", "group_id": 8448, "id": 989994}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036750.444948, "message": "Not sure where this came from", "group_id": 8448, "id": 990022}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036814.1716731, "message": "$doc = new EntryDocument('node-name');", "group_id": 8448, "id": 990048}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036849.44455, "message": "$doc->generate($entries);", "group_id": 8448, "id": 990057}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037615.6540749, "message": "I can see Rowan staring at a blank screen", "group_id": 8448, "id": 990322}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036881.4223659, "message": "Oh yes", "group_id": 8448, "id": 990066}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036887.235182, "message": "Ballsacks.", "group_id": 8448, "id": 990068}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036946.543879, "message": "\"partial XML\"", "group_id": 8448, "id": 990083}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305036955.9310939, "message": "no idea. I think those are from Brendan", "group_id": 8448, "id": 990085}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037004.3861451, "message": "$doc->fields()->outputmode('field-name', array $options = null)", "group_id": 8448, "id": 990102}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038404.663305, "message": "After some well earned sleep, naturally :P", "group_id": 8448, "id": 990626}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038536.19348, "message": "i'll see if I can figure that out. otherwise, no harm in leaving it on Pastie", "group_id": 8448, "id": 990670}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305036942.2018919, "message": "Craig can you clarify #7 and #8 pls", "group_id": 8448, "id": 990081}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037325.0660479, "message": "Hmm", "group_id": 8448, "id": 990218}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037927.4462571, "message": "I like that all of these methods can be documented automagically", "group_id": 8448, "id": 990453}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037933.521209, "message": "So the good work on S2 can continue", "group_id": 8448, "id": 990454}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038259.8578489, "message": "Ok", "group_id": 8448, "id": 990556}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038500.0653629, "message": "wiki == break formatting", "group_id": 8448, "id": 990661}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038535.1124921, "message": "In't it just Markdown?", "group_id": 8448, "id": 990669}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305036956.0876589, "message": "partial == only some fields", "group_id": 8448, "id": 990086}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037010.349838, "message": "Ahar", "group_id": 8448, "id": 990105}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037011.839957, "message": "Yes makes sense", "group_id": 8448, "id": 990107}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037012.0962689, "message": "Question: is entry data lazy loaded?", "group_id": 8448, "id": 990108}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037088.6858251, "message": "Ahh, I see", "group_id": 8448, "id": 990144}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037171.375788, "message": "Yeah that makes sense", "group_id": 8448, "id": 990166}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037911.8607571, "message": "http://pastie.org/1885194 looks sweet.", "group_id": 8448, "id": 990447}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037912.5426061, "message": "Cool", "group_id": 8448, "id": 990449}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037912.7673471, "message": "I think we're almost there! :-)", "group_id": 8448, "id": 990450}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038040.61712, "message": "Btw, I wonder if getById, getAllById and getAll could be simplified to get()?", "group_id": 8448, "id": 990483}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038070.473326, "message": "getById, getAllById might be combined", "group_id": 8448, "id": 990497}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037346.5248301, "message": "That covers: section, filtering, sorting/limiting and partial XML", "group_id": 8448, "id": 990220}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037069.2467539, "message": "Probably not", "group_id": 8448, "id": 990136}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037072.498956, "message": "S2 does one query per field, across all entries", "group_id": 8448, "id": 990138}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037098.15149, "message": "Well, it doesn't have to be", "group_id": 8448, "id": 990146}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037138.2581191, "message": "So the purpose of EntryDocument is to keep the rendering away from the Entry", "group_id": 8448, "id": 990161}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037181.6887701, "message": "Also allows other possibilities", "group_id": 8448, "id": 990168}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037742.8094449, "message": "http://pastie.org/1885194", "group_id": 8448, "id": 990376}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037876.3460591, "message": "That last link will need updating to match this discussion", "group_id": 8448, "id": 990425}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038139.9964609, "message": "But getByID and getAllByID accept an optional query object?", "group_id": 8448, "id": 990524}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038355.955029, "message": "Is there anything outstanding we should discuss?", "group_id": 8448, "id": 990603}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038366.401067, "message": "Craig>", "group_id": 8448, "id": 990609}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037114.648385, "message": "I did some tests on the first S3 ages back, and it was doing about the same # of queries as S2, even now it's reading structue from XML", "group_id": 8448, "id": 990155}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037129.568795, "message": "Ok, getting OT sorry", "group_id": 8448, "id": 990159}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037144.7287431, "message": "Yep", "group_id": 8448, "id": 990162}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037358.7484081, "message": "I think we've covered all of these above, so should be a case of pullnig it together", "group_id": 8448, "id": 990224}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305037630.3944659, "message": "lol", "group_id": 8448, "id": 990331}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038367.2403231, "message": "?", "group_id": 8448, "id": 990610}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037191.0906889, "message": "Ok, let's go for a full-blown example, bear with me, I'm going to be demanding :-)", "group_id": 8448, "id": 990172}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037573.3926561, "message": "Oh, and obviously my Date field has some clever mode that returns a \"time ago\" string rather than an ISO date, and I want that in my XML :-)", "group_id": 8448, "id": 990305}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037689.6602969, "message": "As an aside, I'm glad we didn't go down the route of getBy{Field} dynamic method names.", "group_id": 8448, "id": 990354}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037697.409471, "message": "Yeah", "group_id": 8448, "id": 990361}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038089.0338831, "message": "Yeah", "group_id": 8448, "id": 990502}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038109.745316, "message": "Does it?", "group_id": 8448, "id": 990509}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038325.7280869, "message": "Good point", "group_id": 8448, "id": 990594}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038125.9288621, "message": "Not an ID or array of IDs", "group_id": 8448, "id": 990518}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038473.670202, "message": "Your pastie is the best list", "group_id": 8448, "id": 990655}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038487.412149, "message": "we'll pull that into the wiki once it's updated", "group_id": 8448, "id": 990660}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038546.888484, "message": "Gist?", "group_id": 8448, "id": 990673}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038579.421808, "message": "A gist is a repo", "group_id": 8448, "id": 990691}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038705.775507, "message": "Don't really need anything, just time", "group_id": 8448, "id": 990715}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037616.9302371, "message": "Shaking", "group_id": 8448, "id": 990323}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038194.619067, "message": "getByID would itself call getAll", "group_id": 8448, "id": 990538}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038463.2845509, "message": "I think after Rowan writes up this stuff, we look to extrapolate into other areas", "group_id": 8448, "id": 990649}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038463.530694, "message": "I think we need one canonical document that has all of the examples in it", "group_id": 8448, "id": 990650}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038503.273231, "message": "make sure we've got all use cases covered", "group_id": 8448, "id": 990662}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038602.404942, "message": "Yeah true dat", "group_id": 8448, "id": 990697}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037846.7586679, "message": "Other API stuff: http://pastie.org/1885128", "group_id": 8448, "id": 990417}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038281.245611, "message": "getByID explains everything you need to know", "group_id": 8448, "id": 990568}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038391.8180571, "message": "Not at the moment", "group_id": 8448, "id": 990621}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038618.802213, "message": "yeah sounds good", "group_id": 8448, "id": 990701}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038623.2100241, "message": "Ok chaps I need to jump back into work :-(", "group_id": 8448, "id": 990702}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038653.657167, "message": "Rowan, let me know what you need from me to keep this moving", "group_id": 8448, "id": 990711}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038120.6480451, "message": "It accepts a query object", "group_id": 8448, "id": 990513}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305037890.3056879, "message": "I've done a bit already, but won't have time tonight to finish it", "group_id": 8448, "id": 990431}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038636.8701119, "message": "Thanks Rowan and Huib posthumously, good discussions", "group_id": 8448, "id": 990706}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305037912.275667, "message": "Yeah was going to say, a few bits look old", "group_id": 8448, "id": 990448}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038098.5450759, "message": "Those subtle differences can trip people up I think", "group_id": 8448, "id": 990504}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038159.5680809, "message": "Yep", "group_id": 8448, "id": 990526}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038766.458426, "message": "http://www.youtube.com/watch?v=lXr-N5tJY8I", "group_id": 8448, "id": 990727}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305037952.417156, "message": "this is excellent", "group_id": 8448, "id": 990460}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038384.780483, "message": "Rowan, you writing those into that updated pastie?", "group_id": 8448, "id": 990617}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038060.0418401, "message": "Depending on whether you're passing an integer, an array, or an EntryQuery object", "group_id": 8448, "id": 990494}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038188.726124, "message": "so the signature could be get($param1, $param2) which covers all 3 cases", "group_id": 8448, "id": 990537}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038651.8875561, "message": "Laters", "group_id": 8448, "id": 990709}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038349.392277, "message": "I need to think about heading off", "group_id": 8448, "id": 990600}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038472.2875521, "message": "agreed", "group_id": 8448, "id": 990654}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038289.2688389, "message": "get() leaves questions", "group_id": 8448, "id": 990573}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038364.25844, "message": "Not that I'm aware of", "group_id": 8448, "id": 990608}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038551.554091, "message": "Maybe", "group_id": 8448, "id": 990676}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038574.9976389, "message": "Is win.", "group_id": 8448, "id": 990688}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038510.0620179, "message": "yep", "group_id": 8448, "id": 990664}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038506.244957, "message": "does it?", "group_id": 8448, "id": 990663}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038557.906616, "message": "Yeah doesn't really matter where, so long as it exists!", "group_id": 8448, "id": 990680}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038589.832478, "message": "Yeah, but we already have one", "group_id": 8448, "id": 990695}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038628.3320751, "message": "Ok", "group_id": 8448, "id": 990704}, {"user_id": 7384, "stars": [], "topic_id": 20301, "date_created": 1305038638.6409121, "message": "enjoy, thanks Nick", "group_id": 8448, "id": 990707}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038650.48809, "message": "Sorry for being belligerent :-)", "group_id": 8448, "id": 990708}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038559.9603009, "message": "Never used it before though", "group_id": 8448, "id": 990681}, {"user_id": 23210, "stars": [], "topic_id": 20301, "date_created": 1305038573.0967629, "message": "Gist?", "group_id": 8448, "id": 990685}, {"user_id": 23042, "stars": [], "topic_id": 20301, "date_created": 1305038574.5896599, "message": "I may just put it in the repo somewhere", "group_id": 8448, "id": 990686}]