[{"user_id": 4935, "stars": [], "topic_id": 7764, "date_created": 1298258741.547822, "message": "What's the difference between riak and Neo4J in how things can be linked together?", "group_id": 954, "id": 155857}, {"user_id": 4935, "stars": [], "topic_id": 7764, "date_created": 1298258767.1805151, "message": "I read up on links a bit, and saw that they can have data associated with them.", "group_id": 954, "id": 155858}, {"user_id": 8255, "stars": [], "topic_id": 7764, "date_created": 1298287635.388793, "message": "The main difference, I think, is that number of links in Riak is limited, especially if you're using HTTP interface (to ~1000 links)", "group_id": 954, "id": 158031}, {"user_id": 8255, "stars": [], "topic_id": 7764, "date_created": 1298287637.2286949, "message": "Q no.6: http://blog.basho.com/2010/07/27/webinar-recap---mapreduce-querying-in-riak/", "group_id": 954, "id": 158032}, {"user_id": 8255, "stars": [], "topic_id": 7764, "date_created": 1298287776.248966, "message": "and that link-walking phase has a predetermined number of steps, ie. you can't say \"repeat until you find the last node\" (http://blog.basho.com/2010/02/24/link-walking-by-example)", "group_id": 954, "id": 158034}, {"user_id": 8605, "stars": [], "topic_id": 7764, "date_created": 1298354634.2382231, "message": "check this comparison http://wiki.basho.com/Riak-Compared-to-Neo4j.html , may be outdated", "group_id": 954, "id": 177359}, {"user_id": 8605, "stars": [], "topic_id": 7764, "date_created": 1298354566.102021, "message": "links in riak is not a substitution for a true graph db like neo4j", "group_id": 954, "id": 177352}, {"user_id": 8605, "stars": [], "topic_id": 7764, "date_created": 1298354593.5553839, "message": "links are unidirectional, non reciprocal pointers from one riak object to another.", "group_id": 954, "id": 177353}, {"user_id": 4935, "stars": [], "topic_id": 7764, "date_created": 1298358450.6238279, "message": "wow, that's awesome. I'm surprised to see such a fair comparison from a database vendor. Sad but true.", "group_id": 954, "id": 177557}, {"user_id": 30618, "stars": [{"date_created": 1305224767.988162, "user_id": 1}, {"date_created": 1305238982.2882881, "user_id": 4935}], "topic_id": 7764, "date_created": 1305211039.7052131, "message": "This was a very helpful thread.  I have been researching Neo4j for an upcoming project, but I really don't like the client-interface options.  I had hoped maybe I could replicate a shallow graphdb abstraction on-top of riak using links.  But apparently that won't work if there is a cap of 1000 links.", "group_id": 954, "id": 1024999}, {"user_id": 28525, "stars": [], "topic_id": 7764, "date_created": 1305253795.978127, "message": "Interesting how that isn't mentioned in any of the talks by any of the basho guys. I am dissapoint.", "group_id": 954, "id": 1033351}, {"user_id": 7376, "stars": [], "topic_id": 7764, "date_created": 1305263203.0800321, "message": "Twitter has a project that you may want to evaluate, https://github.com/twitter/flockdb", "group_id": 954, "id": 1035598}, {"user_id": 30618, "stars": [], "topic_id": 7764, "date_created": 1305296690.136132, "message": "@ericmoritz I had read up on flockdb and there is a great video-interview of Robert Scoble and Emil (creator of neo4j) that talks about Flockdb, specifically shallow vs. deep graphs.  \n\nI go back and forth on how deep I want my graph and from what I've read Flockdb is a pretty much a single-depth graph allowing just for user-follows.  Which isn't a solution at all for what I'm working on.  Thus I may give neo4j a try.", "group_id": 954, "id": 1041976}, {"user_id": 7376, "stars": [], "topic_id": 7764, "date_created": 1305301092.891196, "message": "@mgan yeah often I find it hard pressed to call FlockDB a graph database.  It's really just a very specialized app on top of mysql that supports sharding.  It's probably good at what it's designed for though.", "group_id": 954, "id": 1043155}, {"user_id": 36521, "stars": [], "topic_id": 7764, "date_created": 1308522521.913909, "message": "FlockDB, to me, is more of a shim that adds graph-like properties to a custom MySQL schema. Not really a true graph DB like Neo4j.", "group_id": 954, "id": 1433749}]