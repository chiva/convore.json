[{"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306596159.880132, "message": "How Jack Howarth, contributer, used dragonegg for NMR code:", "group_id": 3435, "id": 1212818}, {"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306595385.8327911, "message": "http://dragonegg.llvm.org/", "group_id": 3435, "id": 1212737}, {"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306595449.8955591, "message": "excellent background reading: http://www.aosabook.org/en/llvm.html", "group_id": 3435, "id": 1212745}, {"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306596166.7144771, "message": "\"The xplor-nih package, which is used to\ncalculate molecular structures from NMR data, is built on Mac OS X completely\nagainst FSF gcc's gcc, g++ and gfortran compiler (as it is a mix of c, c++\nand fortran code). I did the original build infrastructure changes for\nsupporting this on darwin. Over the years, I have gotten most of the\ncompiler bugs triggered by the xplor-nih code base fixed upstream. However\nthere are still some really obscure wrong code bugs which crash xplor-nih\nthat are very difficult to test case as they fall in the middle of complex\ncalculations. I've felt for some time that these problems with the middle/back-end\nand how gfortran interacts with it. With dragonegg 2.9 and FSF gcc 4.5.3, llvm\ncan be used to completely build xplor-nih and none of these issues (requiring\nspecific files to have -O0, etc) exist. The resulting code currently runs 10-20%\nslower because of the existing dragonegg bugs preventing the use of the\n-fplugin-arg-dragonegg-enable-gcc-optzns for all of xplor-nih. My expectation is\nthat once -fplugin-arg-dragonegg-enable-gcc-optzns can compile all of xplor-nih\nat -O2 or -O3 with -ffast-math, the dragonegg build of xplor-nih will be as\nfast or faster than the gcc 4.6/4.7 build. More importantly, we won't have to\ncontend with the unresolved middle/back-end bugs that still impact xplor-nih on\nFSF gcc.\"", "group_id": 3435, "id": 1212820}, {"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306596672.3263121, "message": "Some possible discussion questions:\n\nWhat is dragonegg?\n\nHow does it work?\n\nHow do you use it?\n\nWhy used dragonegg vs pure gcc?\n\nCan you use dragonegg Fortran + clang C?\n\nStatus of C++ support?", "group_id": 3435, "id": 1212852}, {"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306846019.4826729, "message": "How does -fplugin-arg-dragonegg-enable-gcc-optzns work?", "group_id": 3435, "id": 1237173}, {"user_id": 11246, "stars": [], "topic_id": 37171, "date_created": 1306946344.3838351, "message": "episode posted: http://inscight.org/2011/06/01/episode-15-dragonegg/", "group_id": 3435, "id": 1255335}]