[{"user_id": 913, "stars": [], "topic_id": 6285, "date_created": 1297836429.847414, "message": "Cucumber never registered with me. I think I know why. It's because it's only value is if/when the business writes the scenarios. It has zero value when a developer writes them. Anyone have top-down or bottom-up insight?", "group_id": 2631, "id": 117929}, {"user_id": 8037, "stars": [], "topic_id": 6285, "date_created": 1297837551.138989, "message": "it has 2 problems: regexes, and business people don't like being cornered into actually writing down what they want, and putting their name on it.", "group_id": 2631, "id": 117976}, {"user_id": 913, "stars": [], "topic_id": 6285, "date_created": 1297840550.252872, "message": "Regexes compound it, for sure. Cucumber attempts to solve the problem programmatically, when it is a people problem.", "group_id": 2631, "id": 118100}, {"user_id": 10860, "stars": [], "topic_id": 6285, "date_created": 1297873997.39183, "message": "I don't know. If you need to write something like an integration test, cucumber makes sense. I wanted to test user authentication with Omniauth, which involves hitting one url, getting redirected to auth with twitter/etc, then redirected back to the app again.", "group_id": 2631, "id": 121181}, {"user_id": 10860, "stars": [], "topic_id": 6285, "date_created": 1297874157.198518, "message": "... and pressing return submits your comment. oops. So anyways. I think it has its place. Or, alternatively, don't use it. https://github.com/cavalle/steak looks interesting, also.", "group_id": 2631, "id": 121201}, {"user_id": 437, "stars": [], "topic_id": 6285, "date_created": 1297876517.0608571, "message": "I am not interested in regexps as a programming language. I think programmers are going to end up writing and maintaining these stories, and so I prefer a tool that works better for programmers.\n\nThere are two parts to cucumber: the whole app integration testing (which I like) and the text-based pseudo-English stories. I am not interested in the pseudo-English; Ruby is more expressive for what I need to do. \n\nIt reminds me of John Gruber's classic post about AppleScript, \"The English-Likeness Monster\": http://daringfireball.net/2005/09/english-likeness_monster", "group_id": 2631, "id": 121554}, {"user_id": 11926, "stars": [], "topic_id": 6285, "date_created": 1297875793.334481, "message": "I was going to agree that without having business involvement there was less value in using a tool like Cucumber, but on further reflection, I'm not sure that's a comment I want to wholeheartedly make. I think that there is more value when the business and technical folks are both involved in writing features/scenarios, but I don't think there's zero value when they are written by a developer. I think there potentially IS value when a developer writes a scenario on their own with no one else's involvement. A well-written scenario that a developer writes from a business perspective means the developer has actually thought about the scenario FROM the business perspective, at least a little, rather than simply looking at it from a technical perspective. Sure, it's possible for the developer to simply write a technical perspective scenario (\"Given an xyz class When I call FrobTheThrombulator Then I should get a return value of -2\") which I would agree has little to no value beyond simply writing a code-based unit test, but I wouldn't call that a well-written scenario. (And if your business is so uninvolved that you can't even say \"I wrote some scenarios, can you look at them and tell me if my understanding is correct, please?\" then you're going to have problems succeeding in general, I think, so there's another way that a developer writing the scenarios alone might add value - either you get validation/correction of your understanding or you figure out that things are only going to get worse before you go too far down a path (assuming you can write the scenarios early).", "group_id": 2631, "id": 121421}, {"user_id": 913, "stars": [], "topic_id": 6285, "date_created": 1297877594.061064, "message": "@andytinkham, you hit the nail on the head. My run-ins with Cucumber are not well-written scenarios. They are often created by a developer who believes because it faux English, the business can understand it. The scenarios are meaningless since the developer _still_ introduced implementation details the business doesn't care about. I'm reading scenarios where \"Then the elephant has five toes\", but doesn't give any insight into why the elephant is in the room in the first place.", "group_id": 2631, "id": 121735}, {"user_id": 11926, "stars": [], "topic_id": 6285, "date_created": 1297878107.6259749, "message": "@unsay I'll be talking about my use of Cucumber with Selenium at the March RUM meeting. I'm interested on any thoughts you might have on the test suite I'm building once you see more of it. (I'm actually in the testing group, not the developers group, and will be roping both my BAs and my fellow non-technical testers into writing scenarios once I get things fully rolling).", "group_id": 2631, "id": 121779}, {"user_id": 10860, "stars": [], "topic_id": 6285, "date_created": 1297883231.8283801, "message": "I'd say I've spent less than 1% of my time in cucumber wrestling with regexps, so that hasn't really bothered me (so far, at least). It hasn't replaced functional and unit tests, but I do like what it's added, and so far I've liked starting by writing a cucumber feature and then coding from there.\n\nBut like anything, I still think that if it doesn't work for you, don't use it.", "group_id": 2631, "id": 122918}]